[{"/Users/sindhurin/development/quadacademy/task-11B/src/index.js":"1","/Users/sindhurin/development/quadacademy/task-11B/src/router/Router.js":"2","/Users/sindhurin/development/quadacademy/task-11B/src/store/store.js":"3","/Users/sindhurin/development/quadacademy/task-11B/src/component/DataFetching.js":"4","/Users/sindhurin/development/quadacademy/task-11B/src/component/Header.js":"5","/Users/sindhurin/development/quadacademy/task-11B/src/slice/holidaySlice.js":"6","/Users/sindhurin/development/quadacademy/task-11B/src/component/NavBar.js":"7","/Users/sindhurin/development/quadacademy/task-11B/src/component/HolidayPage.js":"8","/Users/sindhurin/development/quadacademy/task-11B/src/component/HolidayFormik.js":"9"},{"size":296,"mtime":1633840806987,"results":"10","hashOfConfig":"11"},{"size":812,"mtime":1633838996668,"results":"12","hashOfConfig":"11"},{"size":227,"mtime":1633468031831,"results":"13","hashOfConfig":"11"},{"size":6180,"mtime":1633668497339,"results":"14","hashOfConfig":"11"},{"size":4533,"mtime":1633469437960,"results":"15","hashOfConfig":"11"},{"size":3046,"mtime":1633718399869,"results":"16","hashOfConfig":"11"},{"size":4796,"mtime":1633723331868,"results":"17","hashOfConfig":"11"},{"size":6754,"mtime":1633870874825,"results":"18","hashOfConfig":"11"},{"size":971,"mtime":1633871031300,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"9l70xb",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sindhurin/development/quadacademy/task-11B/src/index.js",[],["43","44"],"/Users/sindhurin/development/quadacademy/task-11B/src/router/Router.js",["45"],"import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport NavBar from \"../component/NavBar\";\nimport Header from \"../component/Header\";\nimport DataFetching from \"../component/DataFetching\";\nimport HolidayPage from \"../component/HolidayPage\";\nimport { Box } from \"@material-ui/core\";\nimport HolidayFormik from \"../component/HolidayFormik\";\n\nconst Router = () => (\n    <BrowserRouter>\n        <Box component=\"div\">\n    \n            <NavBar />\n            <Switch>\n                <Route path=\"/\" exact={true}>\n                <Header />\n                <DataFetching />\n                </Route>\n                <Route path='/:actionType/:id' component={HolidayFormik} exact={true}></Route>\n            </Switch>\n        </Box>\n    </BrowserRouter>\n);\nexport default Router;\n","/Users/sindhurin/development/quadacademy/task-11B/src/store/store.js",[],"/Users/sindhurin/development/quadacademy/task-11B/src/component/DataFetching.js",["46","47","48","49","50"],"import React, { useEffect,useState} from \"react\";\nimport { TableRow, Table, TableCell, TableBody, Box, IconButton } from \"@material-ui/core\";\nimport { fetchUsers, holidayListSliceState, readTodo } from \"../slice/holidaySlice\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport moment from \"moment\";\nimport { useDispatch } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport blue from '@material-ui/core/colors/blue';\nimport red from '@material-ui/core/colors/red';\nimport EditIcon from '@material-ui/icons/Edit';\n import Link from \"@material-ui/core/Link\";\n\n\nconst useStyles = makeStyles({\n    tableCell: {\n        padding: \"16px 16px\",\n    },\n});\nconst RedTextTypography = withStyles({\n    root: {\n        color: \"#ba000d\",\n    },\n})(Typography);\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: \"Raleway, Arial\",\n        fontSize: 16,\n    },\n    \n});\nconst location = (code) =>{\n    let desc=  \"All Locations\";\n  \n    switch (code) {\n       case \"ALL\":\n           desc =\"All Locations\"\n           break;\n        case \"IND\":\n            desc =\"India\"\n            break;  \n        case \"USA\":\n           desc =\"Bettendorf, IA\"\n           break;\n         }\n    return desc;\n}\nconst hType =(code) =>{\n  let desc1=\"Fixed\"\n      \n  switch (code) {\n    case \"F\":\n        desc1=\"Fixed\"\n        break;\n     case \"O\":\n         desc1 =\"Options\"\n         break;     \n    }\n  return desc1;\n}\n\n\n//fetching the data from the api\nfunction DataFetching() {\n    const classes = useStyles();\n    \n   const holidays = useSelector(holidayListSliceState);\n\n   const [AllHolidays,setHolidays]= useState();\n    console.log(\"AllHolidays\",holidays);\n    const currentYear = moment().format(\"YYYY\");\n    const today = parseInt(currentYear);\n    const dispatch = useDispatch();\n   \n   \n     useEffect(() => {\n        dispatch(fetchUsers(today));\n    }, [today]);\n\n \n\n     useEffect(()=>{\n        setHolidays(holidays);\n     },[holidays])\n         \n    return (\n        <ThemeProvider theme={theme}>\n            <React.Fragment>\n                {holidays && holidays.holidays && holidays.holidays.length > 0 ? (\n                    <Table aria-label=\"simple table\" size=\"small\">\n           \n                        <TableBody>\n                        \n                            {holidays.holidays.map((holiday) => (\n            \n                                <TableRow className={classes.tableRow} fontWeight=\"fontWeightBold\" key={holiday.HolidayId}>\n                                <TableCell style={{borderBottom: \"none\"}}>\n                               \n                                  <Link href={'/view/' + holiday.HolidayId}>\n                                  <IconButton  id={holiday.HolidayId} fontSize=\"small\" value={holiday.HolidayId} >\n                                  <VisibilityIcon  style={{color:blue[600]}}  />\n                                  </IconButton>\n                                  </Link>\n                                  \n                                  <Link href={'/update/' +holiday.HolidayId}>\n                                  <IconButton fontSize=\"small\">\n                                  <EditIcon style={{color:red[400],borderBottom: \"none\",minWidth: '50px'}} />\n                                  </IconButton>\n                                  </Link>\n\n                                </TableCell>\n                                \n                                    <TableCell\n                                        className={classes.tableCell}\n                                        style={{\n                                            borderBottom: \"none\",\n                                            padding: \"1px\",\n                                            paddingLeft: \"1%\",\n                                            width: \"18%\",\n                                        }}\n                                    >\n                                        {holiday.Date}\n                                    </TableCell>\n                                    <TableCell\n                                        style={{\n                                            borderBottom: \"none\",\n                                            padding: \"0px\",\n                                            paddingLeft: \"1%\",\n                                            width: \"22%\",\n                                        }}\n                                    >\n                                        {holiday.Description}\n                                    </TableCell>\n                                    <TableCell\n                                        style={{\n                                            borderBottom: \"none\",\n                                            padding: \"0px\",\n                                            paddingLeft: \"1%\",\n                                            width: \"20%\",\n                                        }}\n                                    >\n                                        {\" \"}\n                                        { hType(holiday.type)}\n                                    </TableCell>\n                                    <TableCell style={{ borderBottom: \"none\", padding: \"1px\",paddingRight:'1%' }}>\n                                        {\" \"}\n                                        {location(holiday.location)}\n                                        \n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                ) : (\n                    <Box mt={5} paddingLeft={40}>\n                        <RedTextTypography variant=\"h6\">\n                            No Records Found for this particular year\n                        </RedTextTypography>\n                    </Box>\n                )}\n            </React.Fragment>\n          \n        </ThemeProvider>\n       \n    );\n}\n\nexport default DataFetching;\n","/Users/sindhurin/development/quadacademy/task-11B/src/component/Header.js",["51"],"import React from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport moment from \"moment\";\nimport Box from \"@material-ui/core/Box\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { FormControl, IconButton, Typography } from \"@material-ui/core\";\nimport cyan from \"@material-ui/core/colors/cyan\";\nimport yellow from '@material-ui/core/colors/yellow';\n// import white from '@material-ui/core/colors/white';\nimport { useDispatch } from \"react-redux\";\nimport useState from \"react\";\nimport { fetchUsers } from \"../slice/holidaySlice\";\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport Link from \"@material-ui/core/Link\";\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst useStyles = makeStyles((theme) => ({\n    head: {\n        background: \"#endregion \",\n    },\n    table: {\n        minwidth: \"100%\",\n    },\n    root: {\n        marginLeft: theme.spacing(-1),\n        marginRight: theme.spacing(-1),\n    },\n    menuButton: {\n        width: \"100%\",\n        color: \"white\",\n        backgroundColor: cyan[400],\n        fontFamily: \"Arial\",\n    },\n    icon:{\n        marginRight: theme.spacing(2),\n    }\n\n}));\n\nexport default function CustomizedTables() {\n    const classes = useStyles();\n    const currentYear = moment().format(\"YYYY\");\n    const today = parseInt(currentYear);\n    //const [year, setYear] = useState([]);\n    const dispatch = useDispatch();\n     //filter function\n    const handleSearch = (event) => {\n        const year = event.target.value;\n        dispatch(fetchUsers(year));\n    };\n    let result = [];\n    for (let i = 0; i < 5; i++) {\n        result[i] = today + i - 2;\n    }\n   \n    return (\n        <Box component=\"div\" className={classes.root}>\n            <Grid container spacing={1} className={classes.menuButton}>\n                <Grid item xs={1}></Grid>\n                \n                <Grid item>Filter-Year:</Grid>\n                <Grid item>\n                    <FormControl>\n                        <Select\n                            onClick={handleSearch}\n                            defaultValue={today}\n                            style={{\n                                paddingLeft: \"4px\",\n                                color: \"black\",\n                                backgroundColor: \"white\",\n                                marginTop: \"-3.5px\",\n                            }}\n                        >\n                             {result.map((year) => (\n                                <MenuItem key={year} value={year}>\n                                    {year}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </Grid>\n            </Grid>\n            <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                        <StyledTableCell style={{width:'14%'}}>\n                           <Link href={'/create/0'} >\n                            <IconButton>\n                            <Typography style={{color:'yellow'}} className={classes.icon}>Action </Typography>\n                            <AddCircleOutlineIcon style ={{color:yellow[600]}}/>\n                           </IconButton>\n                           </Link>\n                           </StyledTableCell>\n                            <StyledTableCell style={{width:'9%'}}>Date</StyledTableCell>\n                            <StyledTableCell style={{width:'12%'}}>Description</StyledTableCell>\n                            <StyledTableCell style={{width:'11%'}}>Type</StyledTableCell>\n                            <StyledTableCell style={{width:'9%'}}>Location</StyledTableCell>\n                        </TableRow>\n                    </TableHead>\n                </Table>\n            </TableContainer>\n        </Box>\n    );\n}\n","/Users/sindhurin/development/quadacademy/task-11B/src/slice/holidaySlice.js",[],"/Users/sindhurin/development/quadacademy/task-11B/src/component/NavBar.js",["52"],"import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Home from \"@material-ui/icons/Home\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/icons/List\";\nimport BeachAccess from \"@material-ui/icons/BeachAccess\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Person from \"@material-ui/icons/Person\";\nimport { Button } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport AttachMoney from \"@material-ui/icons/AttachMoney\";\nimport green from \"@material-ui/core/colors/green\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Link from \"@material-ui/core/Link\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport red from \"@material-ui/core/colors/red\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport BrightnessLow from \"@material-ui/icons/BrightnessLow\";\nimport { IconButton } from \"@material-ui/core\";\nimport { lightBlue } from \"@material-ui/core/colors\";\nimport { MenuItem } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport moment from \"moment\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchUsers } from \"../slice/holidaySlice\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nconst useStyles = makeStyles((theme) => ({\n    imageIcon: {\n        width: 170,\n        marginright: \"auto\",\n    },\n    icon: {\n        marginRight: theme.spacing(0.5),\n    },\n    Tool: {\n        marginLeft: theme.spacing(60),\n        paddingLeft: \"14%\",\n    },\n    underline: {\n        borderBottom: \"0px\",\n        \"&:hover\": {\n            borderBottom: \"0px \",\n        },\n        root: {\n            paddingRight: theme.spacing(1),\n        },\n    },\n}));\n\nconst NavBar = () => {\n    const classes = useStyles();\n    const currentYear = moment().format(\"YYYY\");\n    const today = parseInt(currentYear);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n        dispatch(fetchUsers(today));\n    }, [today]);\n    return (\n        <Box component=\"div\">\n            <Toolbar className={classes.icon}>\n            <Link>\n            <img className={classes.imageIcon} src=\"./blue.svg\" alt=\"quadyster\" />\n                </Link>\n\n                <Link>\n                    <IconButton>\n                        <Home style={{ color: blue[500] }} className={classes.icon} />\n                        <Typography>ClockTime</Typography>\n                    </IconButton>\n                </Link>\n                <Link>\n                    <IconButton>\n                        <List style={{ color: green[500] }} className={classes.icon} />\n                        <Typography>TimeLog</Typography>\n                    </IconButton>\n                </Link>\n                <Link href=\"/\">\n                    <IconButton>\n                        <BeachAccess style={{ color: red[500] }} className={classes.icon} />\n                        <Typography>Holiday</Typography>\n                    </IconButton>\n                </Link>\n                <Link>\n                    <IconButton>\n                        <AttachMoney style={{ color: red[500] }} />\n                        <Typography>Time Summary</Typography>\n                    </IconButton>\n                </Link>\n                <Link>\n                    <IconButton>\n                        <BrightnessLow style={{ color: lightBlue[500] }} className={classes.icon} />\n                        <Typography>Settings</Typography>\n                    </IconButton>\n                </Link>\n                <Box component=\"span\">\n                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                        <Person style={{ color: purple[400] }} className={classes.Tool} />\n                        <ArrowDropDownIcon />\n                    </Button>\n                    <Menu\n                        id=\"simple-menu\"\n                        anchorEl={anchorEl}\n                        keepMounted\n                        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n                        transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n                        open={Boolean(anchorEl)}\n                        onClose={handleClose}\n                    >\n                        <MenuItem onClick={handleClose}>Profile</MenuItem>\n                        <MenuItem onClick={handleClose}>My account</MenuItem>\n                        <MenuItem onClick={handleClose}>Logout</MenuItem>\n                    </Menu>\n                </Box>\n            </Toolbar>\n        </Box>\n    );\n};\nexport default NavBar;\n       ","/Users/sindhurin/development/quadacademy/task-11B/src/component/HolidayPage.js",["53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69"],"/Users/sindhurin/development/quadacademy/task-11B/src/component/HolidayFormik.js",["70","71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":6,"column":8,"nodeType":"78","messageId":"79","endLine":6,"endColumn":19},{"ruleId":"76","severity":1,"message":"80","line":3,"column":45,"nodeType":"78","messageId":"79","endLine":3,"endColumn":53},{"ruleId":"81","severity":1,"message":"82","line":38,"column":5,"nodeType":"83","messageId":"84","endLine":48,"endColumn":11},{"ruleId":"81","severity":1,"message":"82","line":54,"column":3,"nodeType":"83","messageId":"84","endLine":61,"endColumn":6},{"ruleId":"76","severity":1,"message":"85","line":72,"column":11,"nodeType":"78","messageId":"79","endLine":72,"endColumn":22},{"ruleId":"86","severity":1,"message":"87","line":81,"column":8,"nodeType":"88","endLine":81,"endColumn":15,"suggestions":"89"},{"ruleId":"76","severity":1,"message":"90","line":19,"column":8,"nodeType":"78","messageId":"79","endLine":19,"endColumn":16},{"ruleId":"86","severity":1,"message":"87","line":67,"column":8,"nodeType":"88","endLine":67,"endColumn":15,"suggestions":"91"},{"ruleId":"76","severity":1,"message":"90","line":1,"column":28,"nodeType":"78","messageId":"79","endLine":1,"endColumn":36},{"ruleId":"76","severity":1,"message":"92","line":2,"column":10,"nodeType":"78","messageId":"79","endLine":2,"endColumn":16},{"ruleId":"76","severity":1,"message":"93","line":2,"column":18,"nodeType":"78","messageId":"79","endLine":2,"endColumn":22},{"ruleId":"76","severity":1,"message":"94","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":14},{"ruleId":"76","severity":1,"message":"95","line":5,"column":13,"nodeType":"78","messageId":"79","endLine":5,"endColumn":16},{"ruleId":"76","severity":1,"message":"96","line":7,"column":22,"nodeType":"78","messageId":"79","endLine":7,"endColumn":32},{"ruleId":"76","severity":1,"message":"97","line":11,"column":8,"nodeType":"78","messageId":"79","endLine":11,"endColumn":18},{"ruleId":"76","severity":1,"message":"98","line":17,"column":10,"nodeType":"78","messageId":"79","endLine":17,"endColumn":17},{"ruleId":"76","severity":1,"message":"99","line":17,"column":29,"nodeType":"78","messageId":"79","endLine":17,"endColumn":40},{"ruleId":"76","severity":1,"message":"100","line":25,"column":8,"nodeType":"78","messageId":"79","endLine":25,"endColumn":13},{"ruleId":"76","severity":1,"message":"101","line":27,"column":10,"nodeType":"78","messageId":"79","endLine":27,"endColumn":16},{"ruleId":"76","severity":1,"message":"102","line":70,"column":9,"nodeType":"78","messageId":"79","endLine":70,"endColumn":17},{"ruleId":"76","severity":1,"message":"103","line":71,"column":9,"nodeType":"78","messageId":"79","endLine":71,"endColumn":28},{"ruleId":"86","severity":1,"message":"87","line":79,"column":4,"nodeType":"88","endLine":79,"endColumn":20,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":156,"column":49,"nodeType":"107","messageId":"108","endLine":156,"endColumn":64},{"ruleId":"105","severity":1,"message":"106","line":172,"column":49,"nodeType":"107","messageId":"108","endLine":172,"endColumn":64},{"ruleId":"105","severity":1,"message":"106","line":198,"column":49,"nodeType":"107","messageId":"108","endLine":198,"endColumn":62},{"ruleId":"76","severity":1,"message":"98","line":4,"column":10,"nodeType":"78","messageId":"79","endLine":4,"endColumn":17},{"ruleId":"76","severity":1,"message":"101","line":6,"column":10,"nodeType":"78","messageId":"79","endLine":6,"endColumn":16},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'HolidayPage' is defined but never used.","Identifier","unusedVar","'readTodo' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'AllHolidays' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["111"],"'useState' is defined but never used.",["112"],"'Formik' is defined but never used.","'Form' is defined but never used.","'moment' is defined but never used.","'Yup' is defined but never used.","'Typography' is defined but never used.","'InputLabel' is defined but never used.","'addTodo' is defined but never used.","'setHolidays' is defined but never used.","'axios' is defined but never used.","'render' is defined but never used.","'holidays' is assigned a value but never used.","'holidaysListSliceId' is assigned a value but never used.",["113"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"114","fix":"116"},{"desc":"117","fix":"118"},"Update the dependencies array to be: [dispatch, today]",{"range":"119","text":"120"},{"range":"121","text":"120"},"Update the dependencies array to be: [id, actionType, dispatch]",{"range":"122","text":"123"},[2073,2080],"[dispatch, today]",[2171,2178],[2238,2254],"[id, actionType, dispatch]"]