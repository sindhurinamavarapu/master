{"ast":null,"code":"var _jsxFileName = \"/Users/sindhurin/development/quadacademy/task-11B/src/component/HolidayPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { useParams } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { makeStyles } from '@material-ui/core';\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save'; // import DeleteIcon from '@material-ui/icons/Delete';\n\nimport Link from \"@material-ui/core/Link\";\nimport { addTodo } from '../slice/holidaySlice';\nimport { setForID, setHolidays } from '../slice/holidaySlice';\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\"; // import moment from \"moment\";\n\nimport { holidayListSliceState } from \"../slice/holidaySlice\"; // import { render } from \"@testing-library/react\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst actions = type => {\n  let Button = \"\";\n\n  switch (type) {\n    case \"ADD\":\n      Button = \"Save\";\n      break;\n\n    case \"READ\":\n      Button = \"Switch to Update\";\n      break;\n\n    case \"UPDATE\":\n      Button = \"Delete && Switch to View && Save\";\n      break;\n\n    default:\n      Button = \"Goto Holidays\";\n  }\n\n  return Button;\n};\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  root: {\n    justifyContent: 'center',\n    pb: '3'\n  },\n  inputLabel: {\n    paddingLeft: '30%'\n  },\n  textField: {\n    margin: '7'\n  }\n}));\nconst type = [{\n  label: 'Select'\n}, {\n  label: 'Optional'\n}, {\n  label: 'Fixed'\n}];\nconst location = [{\n  label: 'Select'\n}, {\n  label: 'All Locations'\n}, {\n  label: 'Bettendorf,IA'\n}, {\n  label: 'India'\n}];\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  m: 1,\n  border: 1,\n  style: {\n    width: '65rem',\n    height: '35rem'\n  }\n};\nexport default function App() {\n  _s();\n\n  const classes = useStyles(); // const currentYear = moment().format(\"YYYY\");\n  // const today = parseInt(currentYear);\n\n  const dispatch = useDispatch();\n  const holidays = useSelector(holidayListSliceState);\n  console.log(\"holidays\", holidays);\n  const [AllHolidays, setHolidays] = useState([]); //set the data for the read mode\n  // const[APIData,setAPIData]=useState([])\n  // useEffect(()=>{\n  // },[])\n  //for getting the data\n\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  useEffect(id => {\n    dispatch(setForID(id));\n  }, [id]); // const [todo,setTodo] = useState({\n  //   id:\"\",\n  //   date:\"\",\n  //   description:\"\",\n  //   type:\"\",\n  //   location:\"\",\n  //   isComplete:false\n  // })\n  // useEffect((id)=>{\n  //   dispatch(readTodo(id))\n  // },[id])\n\n  const formik = useFormik({\n    initialValues: {\n      date: '',\n      location: '',\n      type: '',\n      description: '',\n      isComplete: false\n    },\n    validationSchema: Yup.object({\n      date: Yup.string().required(\"Required!\"),\n      location: Yup.string().required(\"Required!\").nullable(),\n      type: Yup.string().required(\"Required!\").nullable(),\n      description: Yup.string().required(\"Required!\").nullable()\n    }),\n    onSubmit: values => {\n      console.log(values, \"values\");\n      dispatch(addTodo(values)); //dispatch(setHolidays(values));\n      //update the state\n      // setTodo({\n      //   date:\"\",\n      //   description:\"\",\n      //   type:\"\",\n      //   location:\"\",\n      //   isComplete:false\n      // })\n\n      alert(JSON.stringify(values, null, 2));\n    }\n  }); // {APIData.map((data) =>\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: APIData.map(data => {\n      /*#__PURE__*/\n      _jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          border: 1,\n          ...defaultProps,\n          px: 2,\n          pt: 5,\n          pb: 4,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"Holiday Id\",\n                margin: \"dense\",\n                varient: \"outlined\",\n                className: classes.inputLabel,\n                children: \"Holiday Id:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 10,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"HolidayId\",\n                id: \"outlined-full-width\",\n                value: holidays.HolidayId,\n                style: {\n                  margin: 1\n                },\n                fullWidth: true,\n                margin: \"normal\",\n                InputLabelProps: {\n                  shrink: true\n                },\n                variant: \"outlined\",\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"Date\",\n                className: classes.inputLabel,\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 10,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                id: \"date\",\n                name: \"date\",\n                type: \"date\",\n                onChange: formik.handleChange // value={formik.holiday.date}\n                ,\n                value: formik.values.date,\n                style: {\n                  margin: 1\n                },\n                format: \"MM/dd/yyyy\",\n                fullWidth: true,\n                margin: \"normal\",\n                InputLabelProps: {\n                  shrink: true\n                },\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 30\n              }, this), formik.errors.date && formik.touched.date && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formik.errors.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"location\",\n                className: classes.inputLabel,\n                children: \"Location:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 10,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                id: \"location\",\n                name: \"location\",\n                type: \"text\",\n                onChange: formik.handleChange,\n                value: data.location,\n                select: true,\n                SelectProps: {\n                  native: true\n                },\n                style: {\n                  marginRight: 1\n                },\n                variant: \"filled\",\n                fullWidth: true,\n                children: location.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 35\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 43\n              }, this), formik.errors.location && formik.touched.location && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formik.errors.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"type\",\n                className: classes.inputLabel,\n                children: \"Holiday Type:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 10,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                id: \"type\",\n                name: \"type\",\n                type: \"text\",\n                onChange: formik.handleChange,\n                value: formik.values.type,\n                select: true,\n                style: {\n                  marginRight: 1\n                },\n                SelectProps: {\n                  native: true\n                },\n                variant: \"filled\",\n                fullWidth: true,\n                children: type.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 35\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 31\n              }, this), formik.errors.type && formik.touched.type && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formik.errors.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"description\",\n                className: classes.inputLabel,\n                children: \"Description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 10,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                id: \"description\",\n                name: \"description\",\n                type: \"text\",\n                onChange: formik.handleChange,\n                values: formik.values.description,\n                style: {\n                  marginRight: 1\n                },\n                fullWidth: true,\n                margin: \"normal\",\n                InputLabelProps: {\n                  shrink: true\n                },\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 31\n              }, this), formik.errors.description && formik.touched.description && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formik.errors.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 12,\n              md: 4,\n              lg: 4,\n              style: {\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/holiday\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                style: {\n                  margin: '2 auto',\n                  display: \"flex\"\n                },\n                type: \"submit\",\n                startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 44\n                }, this),\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                style: {\n                  margin: '3 auto',\n                  display: \"flex\"\n                },\n                children: \"Goto:Holidays\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 2\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fj7FteVewXimGfaPiFImZLOq3b0=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useParams, useFormik];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sindhurin/development/quadacademy/task-11B/src/component/HolidayPage.js"],"names":["React","useEffect","useState","useFormik","useParams","Yup","makeStyles","Grid","Box","TextField","InputLabel","Button","SaveIcon","Link","addTodo","setForID","setHolidays","useDispatch","useSelector","holidayListSliceState","actions","type","useStyles","theme","button","margin","spacing","root","justifyContent","pb","inputLabel","paddingLeft","textField","label","location","defaultProps","bgcolor","m","border","style","width","height","App","classes","dispatch","holidays","console","log","AllHolidays","id","formik","initialValues","date","description","isComplete","validationSchema","object","string","required","nullable","onSubmit","values","alert","JSON","stringify","APIData","map","data","handleSubmit","HolidayId","shrink","handleChange","errors","touched","native","marginRight","option","value","textAlign","display"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from \"react\";\nimport {useFormik} from \"formik\";\n import {useParams} from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { makeStyles } from '@material-ui/core';\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\n// import DeleteIcon from '@material-ui/icons/Delete';\nimport Link from \"@material-ui/core/Link\";\nimport {addTodo} from '../slice/holidaySlice';\nimport {setForID,setHolidays} from '../slice/holidaySlice';\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\n// import moment from \"moment\";\nimport { holidayListSliceState } from \"../slice/holidaySlice\";\n// import { render } from \"@testing-library/react\";\n\n\nconst actions =(type) =>{\n  let  Button=\"\"\n    switch(type) {\n        case \"ADD\":\n          Button=\"Save\"\n          break;\n        case \"READ\":\n           Button=\"Switch to Update\" \n           break;\n        case \"UPDATE\":\n            Button=\"Delete && Switch to View && Save\"\n            break;\n        default:\n             Button=\"Goto Holidays\"\n    }\n    return Button;\n}\n    \nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    justifyContent: 'center',\n    pb: '3'\n  },\n  inputLabel: {\n    paddingLeft: '30%',    \n  },\n  textField: {\n    margin: '7'\n  }\n}))\nconst type = [\n  {\n    label:'Select',\n  },\n  {\n\n    label: 'Optional',\n  },\n  {\n\n    label: 'Fixed',\n  },\n]\nconst location = [\n  {\n    label:'Select',\n  },\n  {\n    label: 'All Locations'\n  },\n  {\n    label: 'Bettendorf,IA'\n  },\n  {\n    label: 'India'\n  }\n]\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  m: 1,\n  border: 1,\n  style: { width: '65rem', height: '35rem' },\n};\n\n\n\nexport default function App() {\n  const classes = useStyles();\n  // const currentYear = moment().format(\"YYYY\");\n  // const today = parseInt(currentYear);\n  const dispatch = useDispatch();\n  const holidays = useSelector(holidayListSliceState);\n    console.log(\"holidays\",holidays);\n    const [AllHolidays,setHolidays]= useState([]);\n   //set the data for the read mode\n    // const[APIData,setAPIData]=useState([])\n    // useEffect(()=>{\n\n    // },[])\n  //for getting the data\n  \n const {id}= useParams();\n    console.log(id);\n \n     useEffect((id)=>{\n    dispatch(setForID(id))\n  },[id])\n  // const [todo,setTodo] = useState({\n  //   id:\"\",\n  //   date:\"\",\n  //   description:\"\",\n  //   type:\"\",\n  //   location:\"\",\n  //   isComplete:false\n\n  // })\n  // useEffect((id)=>{\n  //   dispatch(readTodo(id))\n  // },[id])\n \n  const formik = useFormik({\n   initialValues: {\n     \n      date:'',\n      location:'',\n      type:'',\n      description:'',\n      isComplete:false\n     \n    },\n   validationSchema: Yup.object({\n      date:Yup.string().required(\"Required!\"),\n      location:Yup.string().required(\"Required!\").nullable(),\n      type:Yup.string().required(\"Required!\").nullable(),\n      description:Yup.string().required(\"Required!\").nullable(),\n    }),\n    onSubmit: (values) => {\n      console.log(values,\"values\");\n        dispatch(addTodo(values));\n       //dispatch(setHolidays(values));\n      //update the state\n      // setTodo({\n      //   date:\"\",\n      //   description:\"\",\n      //   type:\"\",\n      //   location:\"\",\n      //   isComplete:false\n      // })\n       alert(JSON.stringify(values, null, 2));\n      \n    },\n \n  })\n  // {APIData.map((data) =>\n  return (\n    <div className=\"App\">\n    {APIData.map((data) =>{\n \n <form  onSubmit={formik.handleSubmit}>\n          \n                <Box display=\"flex\" justifyContent=\"center\" border={1} {...defaultProps}  px={2} pt={5} pb={4}>\n                          <Grid container spacing={3}>\n                          \n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"Holiday Id\" margin=\"dense\" varient=\"outlined\" className={classes.inputLabel} >Holiday Id:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                              name=\"HolidayId\"\n                                id=\"outlined-full-width\"\n                                 value={holidays.HolidayId}\n                                \n                                style={{ margin: 1 }}\n                              \n                                fullWidth\n                                margin=\"normal\"\n                                InputLabelProps={{\n                                  shrink: true,\n                                }}\n                                variant=\"outlined\"\n                                disabled\n                              />\n                            </Grid>\n                \n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"Date\" className={classes.inputLabel} >Date:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                             <TextField\n                              id=\"date\"\n                              name=\"date\"\n                              type=\"date\"\n                              onChange={formik.handleChange}\n                                // value={formik.holiday.date}\n                              value={formik.values.date}\n                              style={{ margin: 1 }}\n                              format=\"MM/dd/yyyy\"\n                              fullWidth\n                              margin=\"normal\"\n                              InputLabelProps={{\n                                shrink: true,\n                              }}\n                              variant=\"outlined\"\n                            />\n                            \n                            {formik.errors.date && formik.touched.date && (\n                              <p>{formik.errors.date}</p>\n                            )}\n                           </Grid>\n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"location\" className={classes.inputLabel} >Location:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                                id=\"location\"\n                                name=\"location\"\n                                type=\"text\"\n                               onChange={formik.handleChange}\n                                value={data.location}\n                              \n                                select\n                             \n                                SelectProps={{\n                                  native: true,\n                                }}\n                                style={{ marginRight: 1 }}\n                                variant=\"filled\"\n                                fullWidth\n                                \n                              >\n                                {location.map((option) => (\n                                  <option key={option.value} value={option.value}>\n                                    {option.label}\n                                  </option>\n                                ))}\n                              \n                              </TextField><br></br>\n                              {formik.errors.location && formik.touched.location && (\n                                <p>{formik.errors.location}</p>\n                              )}\n                            </Grid>\n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"type\" className={classes.inputLabel} >Holiday Type:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                                id=\"type\"\n                                name=\"type\"\n                                type=\"text\"\n                               onChange={formik.handleChange}\n                               value={formik.values.type}\n                              \n                                select\n                                style={{ marginRight: 1 }}\n                             \n                                SelectProps={{\n                                  native: true,\n                                }}\n                                variant=\"filled\"\n                                fullWidth\n                                \n                              >\n                                {type.map((option) => (\n                                  <option key={option.value} value={option.value}>\n                                    {option.label}\n                                  </option>\n                                ))}\n                                \n                              </TextField>\n                              {formik.errors.type && formik.touched.type&& (\n                                <p>{formik.errors.type}</p>\n                              )}\n                            </Grid>\n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"description\" className={classes.inputLabel} >Description:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                                id=\"description\"\n                                name=\"description\"\n                                type=\"text\"\n                                onChange={formik.handleChange}\n                                values={formik.values.description}\n              \n                                style={{ marginRight: 1 }}\n                                fullWidth\n                                margin=\"normal\"\n                                InputLabelProps={{\n                                  shrink: true,\n                                }}\n                                variant=\"outlined\"\n                              \n                              />\n                              {formik.errors.description && formik.touched.description && (\n                                <p>{formik.errors.description}</p>\n                              )}\n                            </Grid>\n                \n                            <Grid item xs={12} sm={12} md={4} lg={4}\n                              style={{\n                                textAlign: 'center'\n                              }}\n                            >\n                              <Button>\n                \n                              </Button>\n                            </Grid>\n                            <Link href='/holiday'>\n                              <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                style={{ margin: '2 auto', display: \"flex\" }}\n                                type=\"submit\"\n                                startIcon={<SaveIcon />}\n                              >\n                                Save\n                              </Button>\n                            </Link>\n                            <Link href='/'>\n                              <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }} >Goto:Holidays</Button>\n                              </Link>\n                            \n                          {/* <Link href='/holiday/:id?type=\"read\"'>\n                           {actionType ===\"read\" && (\n                              <Button variant=\"contained\"  color=\"primary\" style={{ margin: '3 auto', display: \"flex\" }}>Switch To update</Button>\n                               <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }} >Goto:Holidays</Button>\n                              </Link>\n                            <Link href='/holiday/:id?type=\"update\"'>\n                           <Button\n                          //     variant=\"contained\"\n                          //     color=\"secondary\"\n                              \n                          //     startIcon={<DeleteIcon />}\n                          //       >\n                          //      Delete\n                          //    </Button>\n                          //    </Link>\n                          //   <Link href='/holiday/:id?type=\"update\"'>\n                        \n                          //     <Button variant=\"contained\" color=\"primary\" style={{ margin: '3 auto', display: \"flex\"}}>Switch to view</Button>\n                            //   </Link> */}\n                            \n                          \n                         </Grid>\n                \n                   </Box>\n                  </form>\n              \n                     })}                 \n                     </div>\n               )\n       }   \n\n"]},"metadata":{},"sourceType":"module"}