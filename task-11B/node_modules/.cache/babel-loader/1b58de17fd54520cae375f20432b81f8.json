{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport moment from \"moment\"; //slice\n\nconst holidaySlice = createSlice({\n  name: \"holidayList\",\n  initialState: {\n    holidayData: [],\n    holidayList: {}\n  },\n  reducers: {\n    getHolidays(state, action) {\n      state.holidayData = action.payload;\n    },\n\n    setHolidays(state, action) {\n      state.holidayList = action.payload;\n    },\n\n    setForID(state, action) {\n      console.log(\"action.payload\", action);\n      state.dataforId = action.payload;\n    }\n\n  }\n});\nexport const {\n  getHolidays,\n  setHolidays,\n  setForID\n} = holidaySlice.actions; //Actions\n\nexport const fetchUsers = year => async dispatch => {\n  if (typeof year === \"undefined\") {\n    year = moment().year();\n  }\n\n  axios.get(`http://localhost:4000/holiday/year/${year}`).then(res => {\n    dispatch(getHolidays(res.data));\n  });\n}; //  //post \n\nexport const addTodo = holiday => async dispatch => {\n  console.log(\"holiday\", holiday);\n  axios.post(`http://localhost:4000/holiday`, holiday).then(res => {\n    // console.log(\"sindu\",res.data)\n    dispatch(addTodo(res.data));\n  });\n}; // //read the data\n\nexport const readTodo = id => async dispatch => {\n  console.log(\"hi\");\n  axios.get(`http://localhost:4000/holiday/${id}`).then(res => {\n    console.log(\"read\", res);\n    dispatch(setForID(res.data));\n  });\n}; //update\n\nexport const updateTodo = (updatedTodo, id) => async dispatch => {\n  axios.put(`http://localhost:4000/holiday/${id}`, updatedTodo).then(res => {\n    dispatch(updateTodo(res.data));\n  });\n}; //delete\n\nexport const deleteTodo = id => async dispatch => {\n  axios.delete(`http://localhost:4000/holiday/${id}`).then(res => {\n    dispatch(setForID(res.data));\n  });\n};\nexport const holidayListSliceState = state => state.holidaySlice.holidayData; //  export const holidayListSliceState1=(state) =>state.holidaySlice.dataforId;\n\nexport default holidaySlice.reducer;","map":{"version":3,"sources":["/Users/sindhurin/development/quadacademy/task-11B/src/slice/holidaySlice.js"],"names":["createSlice","axios","moment","holidaySlice","name","initialState","holidayData","holidayList","reducers","getHolidays","state","action","payload","setHolidays","setForID","console","log","dataforId","actions","fetchUsers","year","dispatch","get","then","res","data","addTodo","holiday","post","readTodo","id","updateTodo","updatedTodo","put","deleteTodo","delete","holidayListSliceState","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\n\n//slice\nconst holidaySlice = createSlice({\n    name: \"holidayList\",\n    initialState: {\n       holidayData: [],\n       holidayList:{}\n     },\n    reducers: {\n        getHolidays(state, action) {\n            state.holidayData = action.payload;\n        },\n        setHolidays(state,action){\n          \n            state.holidayList = action.payload;\n        },\n        setForID(state,action){\n            console.log(\"action.payload\",action)\n            state.dataforId =action.payload;\n        }\n    }\n});\n\nexport const { getHolidays,setHolidays,setForID} = holidaySlice.actions;\n\n\n//Actions\nexport const fetchUsers = (year) => async (dispatch) => {\n    \n    if (typeof year === \"undefined\") {\n        year = moment().year();\n    }\n    axios.get(`http://localhost:4000/holiday/year/${year}`).then((res) => {\n        dispatch(getHolidays(res.data));\n       \n    });\n    \n};\n//  //post \n export const addTodo = (holiday) => async(dispatch) => {\n      console.log(\"holiday\",holiday);\n    \n        axios.post(`http://localhost:4000/holiday`,holiday).then((res) =>{\n            // console.log(\"sindu\",res.data)\n           dispatch(addTodo(res.data))\n        \n        })\n       \n    };\n\n// //read the data\n\n export const readTodo = (id )=> async(dispatch) => {\n     \n    console.log(\"hi\")\n            axios.get(`http://localhost:4000/holiday/${id}`).then((res) => {\n            console.log(\"read\",res);\n             dispatch(setForID(res.data))\n        })  \n     } \n    \n //update\n export const updateTodo =(updatedTodo,id) =>async(dispatch) =>{\n     axios.put(`http://localhost:4000/holiday/${id}`,updatedTodo).then((res) =>{\n         dispatch(updateTodo(res.data))\n     })\n } \n //delete\n export const deleteTodo =(id) =>async(dispatch) =>  {\n     axios.delete(`http://localhost:4000/holiday/${id}`).then((res) =>{\n         dispatch(setForID(res.data))\n     })\n }\n\n\n\nexport const holidayListSliceState = (state) => state.holidaySlice.holidayData;\n//  export const holidayListSliceState1=(state) =>state.holidaySlice.dataforId;\nexport default holidaySlice.reducer;\n\n\n\n"]},"metadata":{},"sourceType":"module"}