{"ast":null,"code":"var _jsxFileName = \"/Users/sindhurin/development/quadacademy/task-11B/src/component/HolidayPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { prepareDataForValidation, useFormik } from \"formik\";\nimport { useParams } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { makeStyles } from '@material-ui/core';\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save'; // import DeleteIcon from '@material-ui/icons/Delete';\n\nimport Link from \"@material-ui/core/Link\";\nimport { addTodo, readTodo } from '../slice/holidaySlice';\nimport { setForID, setHolidays } from '../slice/holidaySlice';\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\"; // import moment from \"moment\";\n\nimport { holidayListSliceState1, holidayListSliceState } from \"../slice/holidaySlice\";\nimport DataFetching from \"./DataFetching\"; // import { render } from \"@testing-library/react\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst actions = type => {\n  let Button = \"\";\n\n  switch (type) {\n    case \"ADD\":\n      Button = \"Save\";\n      break;\n\n    case \"READ\":\n      Button = \"Switch to Update\";\n      break;\n\n    case \"UPDATE\":\n      Button = \"Delete && Switch to View && Save\";\n      break;\n\n    default:\n      Button = \"Goto Holidays\";\n  }\n\n  return Button;\n};\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  root: {\n    justifyContent: 'center',\n    pb: '3'\n  },\n  inputLabel: {\n    paddingLeft: '30%'\n  },\n  textField: {\n    margin: '7'\n  }\n}));\nconst type = [{\n  label: 'Select'\n}, {\n  label: 'Optional'\n}, {\n  label: 'Fixed'\n}];\nconst location = [{\n  label: 'Select'\n}, {\n  label: 'All Locations'\n}, {\n  label: 'Bettendorf,IA'\n}, {\n  label: 'India'\n}];\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  m: 1,\n  border: 1,\n  style: {\n    width: '65rem',\n    height: '35rem'\n  }\n};\nexport default function App() {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const holidays = useSelector(holidayListSliceState);\n  const dataforId = useSelector(holidayListSliceState1);\n  const [todoComplete, setTodoComplete] = useState([]);\n  console.log(\"holidays111\", dataforId);\n  let {\n    id\n  } = useParams();\n  const [AllHolidays, setHolidays] = useState([]); // console.log(\"id\",HolidayId)\n\n  useEffect(() => {\n    dispatch(readTodo(id));\n  }, [id]);\n  const formik = useFormik({\n    initialValues: {\n      id: \"\",\n      date: '',\n      location: '',\n      type: '',\n      description: '',\n      isComplete: false\n    },\n    validationSchema: Yup.object({\n      date: Yup.string().required(\"Required!\"),\n      location: Yup.string().required(\"Required!\").nullable(),\n      type: Yup.string().required(\"Required!\").nullable(),\n      description: Yup.string().required(\"Required!\").nullable()\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        console.log(\"values\", values);\n        dispatch(addTodo(values)); //dispatch(setHolidays(values); \n\n        setSubmitting(false);\n      }, 400);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: ({\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            border: 1,\n            ...defaultProps,\n            px: 2,\n            pt: 5,\n            pb: 4,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 2,\n                children: /*#__PURE__*/_jsxDEV(InputLabel, {\n                  htmlFor: \"Holiday Id\",\n                  margin: \"dense\",\n                  varient: \"outlined\",\n                  className: classes.inputLabel,\n                  children: \"Holiday Id:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 10,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"HolidayId\",\n                  id: \"outlined-full-width\",\n                  value: values.HolidayId,\n                  style: {\n                    margin: 1\n                  },\n                  fullWidth: true,\n                  margin: \"normal\",\n                  InputLabelProps: {\n                    shrink: true\n                  },\n                  variant: \"outlined\",\n                  disabled: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 2,\n                children: /*#__PURE__*/_jsxDEV(InputLabel, {\n                  htmlFor: \"Date\",\n                  className: classes.inputLabel,\n                  children: \"Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 10,\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"date\",\n                  name: \"date\",\n                  type: \"date\",\n                  onChange: formik.handleChange,\n                  style: {\n                    margin: 1\n                  },\n                  format: \"MM/dd/yyyy\",\n                  fullWidth: true,\n                  margin: \"normal\",\n                  InputLabelProps: {\n                    shrink: true\n                  },\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 30\n                }, this), formik.errors.date && formik.touched.date && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: formik.errors.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 2,\n                children: /*#__PURE__*/_jsxDEV(InputLabel, {\n                  htmlFor: \"location\",\n                  className: classes.inputLabel,\n                  children: \"Location:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 10,\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"location\",\n                  name: \"location\",\n                  type: \"text\",\n                  onChange: formik.handleChange,\n                  select: true,\n                  SelectProps: {\n                    native: true\n                  },\n                  style: {\n                    marginRight: 1\n                  },\n                  variant: \"filled\",\n                  fullWidth: true,\n                  children: location.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option.value,\n                    children: option.label\n                  }, option.value, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 35\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 43\n                }, this), formik.errors.location && formik.touched.location && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: formik.errors.location\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 2,\n                children: /*#__PURE__*/_jsxDEV(InputLabel, {\n                  htmlFor: \"type\",\n                  className: classes.inputLabel,\n                  children: \"Holiday Type:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 10,\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"type\",\n                  name: \"type\",\n                  type: \"text\",\n                  onChange: formik.handleChange,\n                  value: formik.values.type,\n                  select: true,\n                  style: {\n                    marginRight: 1\n                  },\n                  SelectProps: {\n                    native: true\n                  },\n                  variant: \"filled\",\n                  fullWidth: true,\n                  children: type.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option.value,\n                    children: option.label\n                  }, option.value, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 35\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 31\n                }, this), formik.errors.type && formik.touched.type && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: formik.errors.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 2,\n                children: /*#__PURE__*/_jsxDEV(InputLabel, {\n                  htmlFor: \"description\",\n                  className: classes.inputLabel,\n                  children: \"Description:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 10,\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"description\",\n                  name: \"description\",\n                  type: \"text\",\n                  onChange: formik.handleChange,\n                  style: {\n                    marginRight: 1\n                  },\n                  fullWidth: true,\n                  margin: \"normal\",\n                  InputLabelProps: {\n                    shrink: true\n                  },\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 31\n                }, this), formik.errors.description && formik.touched.description && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: formik.errors.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                md: 4,\n                lg: 4,\n                style: {\n                  textAlign: 'center'\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                href: \"/holiday\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  style: {\n                    margin: '2 auto',\n                    display: \"flex\"\n                  },\n                  type: \"submit\",\n                  startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 44\n                  }, this),\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                href: \"/\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  style: {\n                    margin: '3 auto',\n                    display: \"flex\"\n                  },\n                  children: \"Goto:Holidays\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 5\n      }, this);\n    }\n  });\n}\n\n_s(App, \"q7VnCXFRVM1xjRxBdbxwQma5LdU=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector, useParams, useFormik];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sindhurin/development/quadacademy/task-11B/src/component/HolidayPage.js"],"names":["React","useEffect","useState","prepareDataForValidation","useFormik","useParams","Yup","makeStyles","Grid","Box","TextField","InputLabel","Button","SaveIcon","Link","addTodo","readTodo","setForID","setHolidays","useDispatch","useSelector","holidayListSliceState1","holidayListSliceState","DataFetching","actions","type","useStyles","theme","button","margin","spacing","root","justifyContent","pb","inputLabel","paddingLeft","textField","label","location","defaultProps","bgcolor","m","border","style","width","height","App","classes","dispatch","holidays","dataforId","todoComplete","setTodoComplete","console","log","id","AllHolidays","formik","initialValues","date","description","isComplete","validationSchema","object","string","required","nullable","onSubmit","values","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting","HolidayId","shrink","handleChange","errors","touched","native","marginRight","map","option","value","textAlign","display"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from \"react\";\nimport {prepareDataForValidation, useFormik} from \"formik\";\n import {useParams} from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { makeStyles } from '@material-ui/core';\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\n// import DeleteIcon from '@material-ui/icons/Delete';\nimport Link from \"@material-ui/core/Link\";\nimport {addTodo, readTodo} from '../slice/holidaySlice';\nimport {setForID,setHolidays} from '../slice/holidaySlice';\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\n// import moment from \"moment\";\nimport { holidayListSliceState1,holidayListSliceState} from \"../slice/holidaySlice\";\nimport DataFetching from \"./DataFetching\";\n// import { render } from \"@testing-library/react\";\n\n\nconst actions =(type) =>{\n  let  Button=\"\"\n    switch(type) {\n        case \"ADD\":\n          Button=\"Save\"\n          break;\n        case \"READ\":\n           Button=\"Switch to Update\" \n           break;\n        case \"UPDATE\":\n            Button=\"Delete && Switch to View && Save\"\n            break;\n        default:\n             Button=\"Goto Holidays\"\n    }\n    return Button;\n}\n    \nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    justifyContent: 'center',\n    pb: '3'\n  },\n  inputLabel: {\n    paddingLeft: '30%',    \n  },\n  textField: {\n    margin: '7'\n  }\n}))\nconst type = [\n  {\n    label:'Select',\n  },\n  {\n\n    label: 'Optional',\n  },\n  {\n\n    label: 'Fixed',\n  },\n]\nconst location = [\n  {\n    label:'Select',\n  },\n  {\n    label: 'All Locations'\n  },\n  {\n    label: 'Bettendorf,IA'\n  },\n  {\n    label: 'India'\n  }\n]\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  m: 1,\n  border: 1,\n  style: { width: '65rem', height: '35rem' },\n};\n\nexport default function App() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const holidays = useSelector(holidayListSliceState);\n  const dataforId = useSelector(holidayListSliceState1);\n  const[todoComplete,setTodoComplete] = useState([]);\n     console.log(\"holidays111\",dataforId );\n    let { id }= useParams();\n    const [AllHolidays,setHolidays]= useState([]);\n      // console.log(\"id\",HolidayId)\n \n\n     useEffect(()=>{\n    dispatch(readTodo(id))\n  },[id])\n \n\n  const formik = useFormik({\n   initialValues: {\n       id:\"\",\n      date:'',\n      location:'',\n      type:'',\n      description:'',\n      isComplete:false\n     \n    },\n   validationSchema: Yup.object({\n      date:Yup.string().required(\"Required!\"),\n      location:Yup.string().required(\"Required!\").nullable(),\n      type:Yup.string().required(\"Required!\").nullable(),\n      description:Yup.string().required(\"Required!\").nullable(),\n    }),\n    onSubmit:(values,{setSubmitting}) => {\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        console.log(\"values\",values);\n         dispatch(addTodo(values));\n       //dispatch(setHolidays(values); \n        setSubmitting(false);\n      }, 400);\nreturn (\n    <div className=\"App\">\n    {({ isSubmitting }) => (\n         <form   >\n       \n                <Box display=\"flex\" justifyContent=\"center\" border={1} {...defaultProps}  px={2} pt={5} pb={4}>\n                          <Grid container spacing={3}>\n                          \n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"Holiday Id\" margin=\"dense\" varient=\"outlined\" className={classes.inputLabel} >Holiday Id:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                              name=\"HolidayId\"\n                                id=\"outlined-full-width\"\n                             \n                                value={values.HolidayId}\n                                style={{ margin: 1 }}\n                              \n                                fullWidth\n                                margin=\"normal\"\n                                InputLabelProps={{\n                                  shrink: true,\n                                }}\n                                variant=\"outlined\"\n                                disabled\n                              />\n                            </Grid>\n                \n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"Date\" className={classes.inputLabel} >Date:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                             <TextField\n                              id=\"date\"\n                              name=\"date\"\n                              type=\"date\"\n                              onChange={formik.handleChange}\n                             \n                              style={{ margin: 1 }}\n                              format=\"MM/dd/yyyy\"\n                              fullWidth\n                              margin=\"normal\"\n                              InputLabelProps={{\n                                shrink: true,\n                              }}\n                              variant=\"outlined\"\n                            />\n                            \n                            {formik.errors.date && formik.touched.date && (\n                              <p>{formik.errors.date}</p>\n                            )}\n                           </Grid>\n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"location\" className={classes.inputLabel} >Location:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                                id=\"location\"\n                                name=\"location\"\n                                type=\"text\"\n                               onChange={formik.handleChange}\n                                \n                              \n                                select\n                             \n                                SelectProps={{\n                                  native: true,\n                                }}\n                                style={{ marginRight: 1 }}\n                                variant=\"filled\"\n                                fullWidth\n                                \n                              >\n                                {location.map((option) => (\n                                  <option key={option.value} value={option.value}>\n                                    {option.label}\n                                  </option>\n                                ))}\n                              \n                              </TextField><br></br>\n                              {formik.errors.location && formik.touched.location && (\n                                <p>{formik.errors.location}</p>\n                              )}\n                            </Grid>\n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"type\" className={classes.inputLabel} >Holiday Type:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                                id=\"type\"\n                                name=\"type\"\n                                type=\"text\"\n                               onChange={formik.handleChange}\n                               value={formik.values.type}\n                              \n                                select\n                                style={{ marginRight: 1 }}\n                             \n                                SelectProps={{\n                                  native: true,\n                                }}\n                                variant=\"filled\"\n                                fullWidth\n                                \n                              >\n                                {type.map((option) => (\n                                  <option key={option.value} value={option.value}>\n                                    {option.label}\n                                  </option>\n                                ))}\n                                \n                              </TextField>\n                              {formik.errors.type && formik.touched.type&& (\n                                <p>{formik.errors.type}</p>\n                              )}\n                            </Grid>\n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"description\" className={classes.inputLabel} >Description:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                                id=\"description\"\n                                name=\"description\"\n                                type=\"text\"\n                                onChange={formik.handleChange}\n                             \n              \n                                style={{ marginRight: 1 }}\n                                fullWidth\n                                margin=\"normal\"\n                                InputLabelProps={{\n                                  shrink: true,\n                                }}\n                                variant=\"outlined\"\n                              \n                              />\n                              {formik.errors.description && formik.touched.description && (\n                                <p>{formik.errors.description}</p>\n                              )}\n                            </Grid>\n                \n                            <Grid item xs={12} sm={12} md={4} lg={4}\n                              style={{\n                                textAlign: 'center'\n                              }}\n                            >\n                              <Button>\n                \n                              </Button>\n                            </Grid>\n                            <Link href='/holiday'>\n                              <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                style={{ margin: '2 auto', display: \"flex\" }}\n                                type=\"submit\"\n                                startIcon={<SaveIcon />}\n                              >\n                                Save\n                              </Button>\n                            </Link>\n                            <Link href='/'>\n                              <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }} >Goto:Holidays</Button>\n                              </Link>\n                            \n                          {/* <Link href='/holiday/:id?type=\"read\"'>\n                           {actionType ===\"read\" && (\n                              <Button variant=\"contained\"  color=\"primary\" style={{ margin: '3 auto', display: \"flex\" }}>Switch To update</Button>\n                               <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }} >Goto:Holidays</Button>\n                              </Link>\n                            <Link href='/holiday/:id?type=\"update\"'>\n                           <Button\n                          //     variant=\"contained\"\n                          //     color=\"secondary\"\n                              onClick={{}}\n                          //     startIcon={<DeleteIcon />}\n                          //       >\n                          //      Delete\n                          //    </Button>\n                          //    </Link>\n                          //   <Link href='/holiday/:id?type=\"update\"'>\n                        \n                          //     <Button variant=\"contained\" color=\"primary\" style={{ margin: '3 auto', display: \"flex\"}}>Switch to view</Button>\n                            //   </Link> */}\n                            \n                          \n                         </Grid>\n                \n                   </Box>\n         \n                  </form>\n              \n      \n     )}\n     </div>\n               \n      )}}\n  )}\n"]},"metadata":{},"sourceType":"module"}