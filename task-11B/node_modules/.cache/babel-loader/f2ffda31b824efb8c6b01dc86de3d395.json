{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport moment from \"moment\"; // const todoReducer =(state,action) => {\n//     switch(action.type){\n//        case \"ADD_TODO\" :\n//         return [action.todo.data,...state]\n//         case \"READ_TODO\" :\n//         return [action.todo.data,...state]\n//         case \"UPDATE_TODO\" :\n//          return state.map((todo) => {\n//               //todo._id === action.todo.data._id ? action.todo.data : todo\n//          })\n//          case \"DELETE_TODO\" :\n//             return [action]\n//         default:\n//             console.log(state);\n//             return state;\n//     }\n// }\n//slice\n\nconst holidaySlice = createSlice({\n  name: \"holidayList\",\n  initialState: {\n    holidayData: []\n  },\n  reducers: {\n    getHolidays(state, action) {\n      state.holidayData = action.payload;\n    }\n\n  }\n});\nexport const {\n  getHolidays\n} = holidaySlice.actions; //Actions\n\nexport const fetchUsers = year => async dispatch => {\n  if (typeof year === \"undefined\") {\n    year = moment().year();\n  }\n\n  axios.get(`http://localhost:4000/holiday/year/${year}`).then(res => {\n    //    console.log(\"id\",res.holidays.holidays[0].holidayId);\n    console.log(\"res\", res.data);\n    dispatch(getHolidays(res.data)); // console.log(res.data,\"data\")\n  });\n}; //  //post \n\nexport const addTodo = holiday => async dispatch => {\n  console.log(\"holiday\", holiday);\n  axios.post(`http://localhost:4000/holiday`, holiday).then(res => {\n    // console.log(\"sindu\",res.data)\n    dispatch(addTodo(res.data));\n  });\n}; // //read the data\n\nexport const readTodo = id => async dispatch => {\n  console.log(\"hi\");\n  console.log(\"id\", id);\n  axios.get(`http://localhost:4000/holiday/${id}`).then(res => {\n    //  console.log(\"id\",id);\n    console.log(\"res\", res);\n    dispatch(readTodo(res.data));\n  });\n}; //update\n\nexport const updateTodo = (updatedTodo, id) => async dispatch => {\n  axios.put(`http://localhost:4000/holiday/${id}`, updatedTodo).then(res => {\n    dispatch(updateTodo(res.data));\n  });\n}; //delete\n\nexport const deleteTodo = id => async dispatch => {\n  axios.delete(`http://localhost:4000/holiday/${id}`).then(res => {\n    dispatch(deleteTodo(res.data));\n  });\n};\nexport const holidayListSliceState = state => state.holidaySlice.holidayData;\nexport default holidaySlice.reducer;","map":{"version":3,"sources":["/Users/sindhurin/development/quadacademy/task-11B/src/slice/holidaySlice.js"],"names":["createSlice","axios","moment","holidaySlice","name","initialState","holidayData","reducers","getHolidays","state","action","payload","actions","fetchUsers","year","dispatch","get","then","res","console","log","data","addTodo","holiday","post","readTodo","id","updateTodo","updatedTodo","put","deleteTodo","delete","holidayListSliceState","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\n// const todoReducer =(state,action) => {\n    \n//     switch(action.type){\n//        case \"ADD_TODO\" :\n//         return [action.todo.data,...state]\n//         case \"READ_TODO\" :\n//         return [action.todo.data,...state]\n//         case \"UPDATE_TODO\" :\n//          return state.map((todo) => {\n//               //todo._id === action.todo.data._id ? action.todo.data : todo\n//          })\n//          case \"DELETE_TODO\" :\n//             return [action]\n//         default:\n//             console.log(state);\n//             return state;\n//     }\n// }\n\n\n      \n\n//slice\nconst holidaySlice = createSlice({\n    name: \"holidayList\",\n    initialState: {\n       holidayData: [],\n     },\n    reducers: {\n        getHolidays(state, action) {\n            state.holidayData = action.payload;\n        },\n    },\n});\n\nexport const { getHolidays} = holidaySlice.actions;\n\n\n//Actions\nexport const fetchUsers = (year) => async (dispatch) => {\n    \n    if (typeof year === \"undefined\") {\n        year = moment().year();\n    }\n    axios.get(`http://localhost:4000/holiday/year/${year}`).then((res) => {\n    //    console.log(\"id\",res.holidays.holidays[0].holidayId);\n        console.log(\"res\",res.data)\n        dispatch(getHolidays(res.data));\n        // console.log(res.data,\"data\")\n    });\n    \n};\n//  //post \n export const addTodo = (holiday) => async(dispatch) => {\n      console.log(\"holiday\",holiday);\n    \n        axios.post(`http://localhost:4000/holiday`,holiday).then((res) =>{\n            // console.log(\"sindu\",res.data)\n           dispatch(addTodo(res.data))\n        \n        })\n       \n    };\n\n// //read the data\n\n export const readTodo = (id )=> async(dispatch) => {\n      console.log(\"hi\")\n      console.log(\"id\",id);\n            axios.get(`http://localhost:4000/holiday/${id}`).then((res) => {\n                //  console.log(\"id\",id);\n                console.log(\"res\",res);\n            dispatch(readTodo(res.data))\n        })  \n     } \n    \n //update\n export const updateTodo =(updatedTodo,id) =>async(dispatch) =>{\n     axios.put(`http://localhost:4000/holiday/${id}`,updatedTodo).then((res) =>{\n         dispatch(updateTodo(res.data))\n     })\n } \n //delete\n export const deleteTodo =(id) =>async(dispatch) =>  {\n     axios.delete(`http://localhost:4000/holiday/${id}`).then((res) =>{\n         dispatch(deleteTodo(res.data))\n     })\n }\n\n\n\nexport const holidayListSliceState = (state) => state.holidaySlice.holidayData;\nexport default holidaySlice.reducer;\n"]},"metadata":{},"sourceType":"module"}