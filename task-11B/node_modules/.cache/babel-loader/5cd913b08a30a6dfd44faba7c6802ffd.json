{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport moment from \"moment\"; //slice\n\nconst holidaySlice = createSlice({\n  name: \"holidayList\",\n  initialState: {\n    holidayData: [],\n    holidayList: {\n      id: \"\",\n      date: \"\",\n      location: \"\",\n      type: \"\",\n      description: \"\"\n    }\n  },\n  reducers: {\n    getHolidays(state, action) {\n      state.year = action.payload;\n    },\n\n    setHolidays(state, action) {\n      state.holidayData = action.payload;\n    },\n\n    setForId(state, action) {\n      // console.log(\"action.payload\",action)\n      state.holidayList = action.payload;\n      console.log(\"action.payload\", state.holidayList);\n    }\n\n  }\n});\nexport const {\n  getHolidays,\n  setHolidays,\n  setForId\n} = holidaySlice.actions; //Actions\n\nexport const fetchUsers = year => async dispatch => {\n  if (typeof year === \"undefined\") {\n    year = moment().year();\n  }\n\n  axios.get(`http://localhost:4000/holiday/year/${year}`).then(res => {\n    dispatch(setHolidays(res.data.Data));\n    dispatch(getHolidays(res.data)); //  dispatch(\n    //      setForId({\n    //          id:\"\",\n    //          location:\"All\",\n    //          type:\"F\",\n    //          date:\"\",\n    //          description:\"\",\n    //      })\n    //  )\n  });\n}; //  //post \n\nexport const addTodo = holidayList => async dispatch => {\n  console.log(\"holidayList\", holidayList);\n  axios.post(`http://localhost:4000/holiday`, JSON.stringify(holidayList)).then(res => {\n    dispatch(addTodo(res.data));\n  });\n}; // )}\n// //read the data\n\nexport const readTodo = id => async dispatch => {\n  axios.get(`http://localhost:4000/holiday/${id}`).then(res => {\n    console.log(\"read\", res.data);\n    dispatch(setForId(res.data));\n  });\n}; //update\n\nexport const updateTodo = (updatedTodo, id) => async dispatch => {\n  axios.put(`http://localhost:4000/holiday/${id}`, updatedTodo).then(res => {\n    dispatch(setForId(res.data));\n  });\n}; //delete\n\nexport const deleteTodo = id => async dispatch => {\n  axios.delete(`http://localhost:4000/holiday/${id}`).then(res => {\n    dispatch(setForId(res.data));\n  });\n};\nexport const holidayListSliceState = state => state.holidaySlice.holidayData;\nexport const holidayListSliceId = state => state.holidaySlice.holidayList; //  console.log(\"holidayListId\",holidayListId);\n\nexport default holidaySlice.reducer;","map":{"version":3,"sources":["/Users/sindhurin/development/quadacademy/task-11B/src/slice/holidaySlice.js"],"names":["createSlice","axios","moment","holidaySlice","name","initialState","holidayData","holidayList","id","date","location","type","description","reducers","getHolidays","state","action","year","payload","setHolidays","setForId","console","log","actions","fetchUsers","dispatch","get","then","res","data","Data","addTodo","post","JSON","stringify","readTodo","updateTodo","updatedTodo","put","deleteTodo","delete","holidayListSliceState","holidayListSliceId","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\n\n//slice\nconst holidaySlice = createSlice({\n    name: \"holidayList\",\n    initialState: {\n       \n       holidayData: [],\n       holidayList:{\n           id:\"\",\n           date:\"\",\n           location:\"\",\n           type:\"\",\n           description:\"\"\n       },\n\n     },\n    reducers: {\n        getHolidays(state, action) {\n            state.year = action.payload;\n        },\n        setHolidays(state,action){\n          \n            state.holidayData = action.payload;\n        },\n        setForId(state,action){\n            // console.log(\"action.payload\",action)\n            state.holidayList =action.payload;\n             console.log(\"action.payload\",state.holidayList)\n        }\n    }\n});\n\nexport const { getHolidays,setHolidays,setForId} = holidaySlice.actions;\n\n\n//Actions\nexport const fetchUsers = (year) => async (dispatch) => {\n    \n    if (typeof year === \"undefined\") {\n        year = moment().year();\n    }\n    axios.get(`http://localhost:4000/holiday/year/${year}`).then((res) => {\n         dispatch(setHolidays(res.data.Data));\n         dispatch(getHolidays(res.data));\n        //  dispatch(\n        //      setForId({\n        //          id:\"\",\n        //          location:\"All\",\n        //          type:\"F\",\n        //          date:\"\",\n        //          description:\"\",\n        //      })\n        //  )\n       \n    });\n    \n};\n//  //post \n export const addTodo = (holidayList) => async(dispatch) => {\n      console.log(\"holidayList\",holidayList);\n    \n        axios.post(`http://localhost:4000/holiday`,JSON.stringify(holidayList)).then((res) =>{\n            \n           dispatch(addTodo(res.data))\n           \n        })\n    }\n        // )}\n\n// //read the data\n\n export const readTodo = (id )=> async(dispatch) => {\n    \n            axios.get(`http://localhost:4000/holiday/${id}`).then((res) => {\n                 console.log(\"read\",res.data)\n             dispatch(setForId(res.data))\n             \n\n        })  \n     } \n    \n //update\n export const updateTodo =(updatedTodo,id) =>async(dispatch) =>{\n     axios.put(`http://localhost:4000/holiday/${id}`,updatedTodo).then((res) =>{\n         dispatch(setForId(res.data))\n     })\n } \n //delete\n export const deleteTodo =(id) =>async(dispatch) =>  {\n     axios.delete(`http://localhost:4000/holiday/${id}`).then((res) =>{\n         dispatch(setForId(res.data))\n     })\n }\n\n\n\nexport const holidayListSliceState = (state) => state.holidaySlice.holidayData;\n export const holidayListSliceId =(state) =>state.holidaySlice.holidayList;\n//  console.log(\"holidayListId\",holidayListId);\nexport default holidaySlice.reducer;\n\n\n\n"]},"metadata":{},"sourceType":"module"}