{"ast":null,"code":"var _jsxFileName = \"/Users/sindhurin/development/quadacademy/task-11B/src/component/HolidayPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport moment from 'moment';\nimport { useParams } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { makeStyles } from '@material-ui/core';\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save'; // import DeleteIcon from '@material-ui/icons/Delete';\n\nimport Link from \"@material-ui/core/Link\";\nimport { addTodo, readTodo, setHolidays } from '../slice/holidaySlice'; //import {setForID,setHolidays} from '../slice/holidaySlice';\n\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\"; // import moment from \"moment\";\n\nimport { holidayListSliceState, holidayListSliceId } from \"../slice/holidaySlice\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { formik } from '../component/formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  root: {\n    justifyContent: 'center',\n    pb: '3'\n  },\n  inputLabel: {\n    paddingLeft: '30%'\n  },\n  textField: {\n    margin: '7'\n  }\n}));\nconst type = [{\n  label: 'Select'\n}, {\n  label: 'Optional'\n}, {\n  label: 'Fixed'\n}];\nconst location = [{\n  label: 'Select'\n}, {\n  label: 'All Locations'\n}, {\n  label: 'Bettendorf,IA'\n}, {\n  label: 'India'\n}];\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  m: 1,\n  border: 1,\n  style: {\n    width: '65rem',\n    height: '35rem'\n  }\n};\n\nconst hType = code => {\n  let desc1 = \"Fixed\";\n\n  switch (code) {\n    case \"F\":\n      desc1 = \"Fixed\";\n      break;\n\n    case \"O\":\n      desc1 = \"Options\";\n      break;\n  }\n\n  return desc1;\n};\n\nconst location1 = code => {\n  let desc = \"All Locations\";\n\n  switch (code) {\n    case \"ALL\":\n      desc = \"All Locations\";\n      break;\n\n    case \"IND\":\n      desc = \"India\";\n      break;\n\n    case \"USA\":\n      desc = \"Bettendorf, IA\";\n      break;\n  }\n\n  return desc;\n};\n\nexport default function App() {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const holidays = useSelector(holidayListSliceState);\n  const holidaysListSliceId = useSelector(holidayListSliceId);\n  console.log(\"holidaysListSliceId\", holidaysListSliceId); //const holidays =useSelector((state) => state.holidaySlice.holidays);\n  //console.log(\"holidayData\",holidayData);\n  //  const holidayData =useSelector(holidayListId);\n  //  console.log(\"holidayData\",holidayData);\n  //console.log(\"dataforId\",dataforId );\n\n  let {\n    id,\n    actionType\n  } = useParams();\n  useEffect(() => {\n    dispatch(readTodo(id));\n  }, [id]);\n  const formik = useFormik({\n    initialValues: {\n      id: \"\",\n      date: '',\n      location: '',\n      type: '',\n      description: '',\n      isComplete: false\n    },\n    validationSchema: Yup.object({\n      date: Yup.string().required(\"Required!\").nullable(),\n      location: Yup.string().required(\"Required!\").nullable(),\n      type: Yup.string().required(\"Required!\").nullable(),\n      description: Yup.string().required(\"Required!\").nullable()\n    }),\n    onSubmit: values => {\n      console.log(\"values\", values);\n      dispatch(addTodo(values)); // dispatch(readTodo(id));\n\n      console.log(\"formikvalues1234\", formik.values.date, formik.values.description, formik.values.id); //  moment((formik.values.date,'YYYY/mm/dd').format('mm/dd/YYYY')),\n      // hType(formik.values.type),\n      // location1(formik.values.location),\n      //  )\n      //dispatch(setForId(id));\n\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        border: 1,\n        ...defaultProps,\n        px: 2,\n        pt: 5,\n        pb: 4,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"Holiday Id\",\n              margin: \"dense\",\n              varient: \"outlined\",\n              className: classes.inputLabel,\n              children: \"Holiday Id:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 10,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              name: \"HolidayId\",\n              id: \"outlined-full-width\",\n              placeholder: \"#\",\n              value: holidays.HolidayId,\n              onChange: formik.handleChange,\n              onBlur: formik.handleBlur,\n              style: {\n                margin: 1\n              },\n              fullWidth: true,\n              margin: \"normal\",\n              InputLabelProps: {\n                shrink: true\n              },\n              variant: \"outlined\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 31\n            }, this), formik.errors.HolidayId && formik.touched.HolidayId && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: formik.errors.HolidayId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"Date\",\n              className: classes.inputLabel,\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 10,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"date\",\n              name: \"date\",\n              type: \"date\",\n              value: holiday.date,\n              onChange: formik.handleChange,\n              onBlur: formik.handleBlur,\n              style: {\n                margin: 1\n              },\n              dateFormat: \"MM/DD/YYYY\",\n              fullWidth: true,\n              margin: \"normal\",\n              InputLabelProps: {\n                shrink: true\n              },\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 30\n            }, this), formik.errors.date && formik.touched.date && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: formik.errors.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"location\",\n              className: classes.inputLabel,\n              children: \"Location:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 10,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"location\",\n              name: \"location\",\n              type: \"text\",\n              value: holiday.location,\n              onChange: formik.handleChange,\n              onBlur: formik.handleBlur,\n              select: true,\n              SelectProps: {\n                native: true\n              },\n              style: {\n                marginRight: 1\n              },\n              variant: \"filled\",\n              fullWidth: true,\n              children: location.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 35\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 43\n            }, this), formik.errors.location && formik.touched.location && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: formik.errors.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"type\",\n              className: classes.inputLabel,\n              children: \"Holiday Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 10,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"type\",\n              name: \"type\",\n              type: \"text\",\n              value: hType(formik.values.type),\n              onChange: formik.handleChange,\n              onBlur: formik.handleBlur,\n              select: true,\n              style: {\n                marginRight: 1\n              },\n              SelectProps: {\n                native: true\n              },\n              variant: \"filled\",\n              fullWidth: true,\n              children: type.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 35\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 31\n            }, this), formik.errors.type && formik.touched.type && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: formik.errors.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"description\",\n              className: classes.inputLabel,\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 10,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"description\",\n              name: \"description\",\n              type: \"text\",\n              onChange: formik.handleChange,\n              onBlur: formik.handleBlur,\n              value: formik.values.description,\n              style: {\n                marginRight: 1\n              },\n              fullWidth: true,\n              margin: \"normal\",\n              InputLabelProps: {\n                shrink: true\n              },\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 31\n            }, this), formik.errors.description && formik.touched.description && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: formik.errors.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            md: 4,\n            lg: 4,\n            style: {\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/create/\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              style: {\n                margin: '2 auto',\n                display: \"flex\"\n              },\n              type: \"submit\",\n              startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 44\n              }, this),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 47\n              }, this),\n              to: {\n                pathname: \"/update/\"\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              style: {\n                margin: '3 auto',\n                display: \"flex\"\n              },\n              to: {\n                pathname: \"/update/\"\n              },\n              children: \"Switch to view\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 35\n          }, this), \")\", /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              style: {\n                margin: '3 auto',\n                display: \"flex\"\n              },\n              children: \"Goto:Holidays\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/view/\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              style: {\n                margin: '2 auto',\n                display: \"flex\"\n              },\n              type: \"submit\",\n              startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 44\n              }, this),\n              children: \"Switch To Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/update/\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              style: {\n                margin: '3 auto',\n                display: \"flex\"\n              },\n              startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 42\n              }, this),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/update/\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              style: {\n                margin: '3 auto',\n                display: \"flex\"\n              },\n              children: \"Switch To View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"dZ86N2qKg+4zd27EWLpA8MG/ve4=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector, useParams, useFormik];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sindhurin/development/quadacademy/task-11B/src/component/HolidayPage.js"],"names":["React","useEffect","useState","useFormik","moment","useParams","Yup","makeStyles","Grid","Box","TextField","InputLabel","Button","SaveIcon","Link","addTodo","readTodo","setHolidays","useDispatch","useSelector","holidayListSliceState","holidayListSliceId","DeleteIcon","formik","useStyles","theme","button","margin","spacing","root","justifyContent","pb","inputLabel","paddingLeft","textField","type","label","location","defaultProps","bgcolor","m","border","style","width","height","hType","code","desc1","location1","desc","App","classes","dispatch","holidays","holidaysListSliceId","console","log","id","actionType","initialValues","date","description","isComplete","validationSchema","object","string","required","nullable","onSubmit","values","alert","JSON","stringify","handleSubmit","HolidayId","handleChange","handleBlur","shrink","errors","touched","holiday","native","marginRight","map","option","value","textAlign","display","pathname"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from \"react\";\nimport { useFormik} from \"formik\";\nimport moment from 'moment';\n import {useParams} from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { makeStyles } from '@material-ui/core';\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\n// import DeleteIcon from '@material-ui/icons/Delete';\nimport Link from \"@material-ui/core/Link\";\nimport {addTodo, readTodo, setHolidays} from '../slice/holidaySlice';\n//import {setForID,setHolidays} from '../slice/holidaySlice';\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\n// import moment from \"moment\";\nimport { holidayListSliceState,holidayListSliceId} from \"../slice/holidaySlice\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {formik} from '../component/formik';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    justifyContent: 'center',\n    pb: '3'\n  },\n  inputLabel: {\n    paddingLeft: '30%',    \n  },\n  textField: {\n    margin: '7'\n  }\n}))\nconst type = [\n  {\n    label:'Select',\n  },\n  {\n\n    label: 'Optional',\n  },\n  {\n\n    label: 'Fixed',\n  },\n]\nconst location = [\n  {\n    label:'Select',\n  },\n  {\n    label: 'All Locations'\n  },\n  {\n    label: 'Bettendorf,IA'\n  },\n  {\n    label: 'India'\n  }\n]\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  m: 1,\n  border: 1,\n  style: { width: '65rem', height: '35rem' },\n};\nconst hType =(code) =>{\n  let desc1=\"Fixed\"\n      \n  switch (code) {\n    case \"F\":\n        desc1=\"Fixed\"\n        break;\n     case \"O\":\n         desc1 =\"Options\"\n         break;     \n    }\n  return desc1;\n}\n\nconst location1 = (code) =>{\n  let desc=  \"All Locations\";\n\n  switch (code) {\n     case \"ALL\":\n         desc =\"All Locations\"\n         break;\n      case \"IND\":\n          desc =\"India\"\n          break;  \n      case \"USA\":\n         desc =\"Bettendorf, IA\"\n         break;\n       }\n  return desc;\n}\n\nexport default function App() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n   const holidays = useSelector(holidayListSliceState);\n   const holidaysListSliceId=useSelector(holidayListSliceId);\n    console.log(\"holidaysListSliceId\",holidaysListSliceId);\n  //const holidays =useSelector((state) => state.holidaySlice.holidays);\n  //console.log(\"holidayData\",holidayData);\n//  const holidayData =useSelector(holidayListId);\n//  console.log(\"holidayData\",holidayData);\n  //console.log(\"dataforId\",dataforId );\n    let  {id ,actionType}= useParams();\n    \n\n \n    useEffect(()=>{\n    dispatch(readTodo(id))\n  },[id])\n \n  \n  const formik = useFormik({\n   initialValues: {\n     id:\"\",\n      date:'',\n      location:'',\n      type:'',\n      description:'',\n      isComplete:false\n     \n    },\n   validationSchema: Yup.object({\n      date:Yup.string().required(\"Required!\").nullable(),\n      location:Yup.string().required(\"Required!\").nullable(),\n      type:Yup.string().required(\"Required!\").nullable(),\n      description:Yup.string().required(\"Required!\").nullable(),\n    }),\n   \n    onSubmit:values => {\n    \n      console.log(\"values\",values);\n         dispatch(addTodo(values));\n          // dispatch(readTodo(id));\n        console.log(\"formikvalues1234\",formik.values.date,\n        formik.values.description,formik.values.id)\n                //  moment((formik.values.date,'YYYY/mm/dd').format('mm/dd/YYYY')),\n                // hType(formik.values.type),\n                // location1(formik.values.location),\n        //  )\n         //dispatch(setForId(id));\n     \n       alert(JSON.stringify(values, null, 2));\n      \n     }})\n    \n  return (\n    <div className=\"App\">\n   \n         <form  onSubmit={formik.handleSubmit} >\n            \n                <Box display=\"flex\" justifyContent=\"center\" border={1} {...defaultProps}  px={2} pt={5} pb={4}>\n                          <Grid container spacing={3}>\n                          \n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"Holiday Id\" margin=\"dense\" varient=\"outlined\" className={classes.inputLabel} >Holiday Id:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                              name=\"HolidayId\"\n                                id=\"outlined-full-width\"\n                                placeholder=\"#\"\n                               value={holidays.HolidayId}\n                               onChange={formik.handleChange}\n                               onBlur={formik.handleBlur}\n                                style={{ margin: 1 }}\n                              \n                                fullWidth\n                                margin=\"normal\"\n                                InputLabelProps={{\n                                  shrink: true,\n                                }}\n                                variant=\"outlined\"\n                                disabled\n                              />\n                              {formik.errors.HolidayId && formik.touched.HolidayId && (\n                                <p>{formik.errors.HolidayId}</p>\n                              )}\n                            </Grid>\n                \n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"Date\" className={classes.inputLabel} >Date:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                             <TextField\n                              id=\"date\"\n                              name=\"date\"\n                              type=\"date\"\n                              \n                              value={holiday.date}\n                              onChange={formik.handleChange}\n                              onBlur={formik.handleBlur}\n                             style={{ margin: 1 }}\n                              dateFormat=\"MM/DD/YYYY\"\n                              fullWidth\n                              margin=\"normal\"\n                              InputLabelProps={{\n                                shrink: true,\n                              }}\n                              variant=\"outlined\"\n                            />\n                            \n                            {formik.errors.date && formik.touched.date && (\n                              <p>{formik.errors.date}</p>\n                            )}\n                           </Grid>\n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"location\" className={classes.inputLabel} >Location:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                                id=\"location\"\n                                name=\"location\"\n                                type=\"text\"\n                              \n                                 value= {holiday.location}\n                                 onChange={formik.handleChange}\n                                 onBlur={formik.handleBlur}\n                                select\n                             \n                                SelectProps={{\n                                  native: true,\n                                }}\n                                style={{ marginRight: 1 }}\n                                variant=\"filled\"\n                                fullWidth\n                                \n                              >\n                                {location.map((option) => (\n                                  <option key={option.value} value={option.value}>\n                                    {option.label}\n                                  </option>\n                                ))}\n                              \n                              </TextField><br></br>\n                              {formik.errors.location && formik.touched.location && (\n                                <p>{formik.errors.location}</p>\n                              )}\n                            </Grid>\n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"type\" className={classes.inputLabel} >Holiday Type:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                                id=\"type\"\n                                name=\"type\"\n                                type=\"text\"\n                               \n                              value={hType(formik.values.type)}\n                              onChange={formik.handleChange}\n                              onBlur={formik.handleBlur}\n                                select\n                                style={{ marginRight: 1 }}\n                             \n                                SelectProps={{\n                                  native: true,\n                                }}\n                                variant=\"filled\"\n                                fullWidth\n                                \n                              >\n                                {type.map((option) => (\n                                  <option key={option.value} value={option.value}>\n                                    {option.label}\n                                  </option>\n                                ))}\n                                \n                              </TextField>\n                              {formik.errors.type && formik.touched.type&& (\n                                <p>{formik.errors.type}</p>\n                              )}\n                            </Grid>\n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"description\" className={classes.inputLabel} >Description:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                                id=\"description\"\n                                name=\"description\"\n                                type=\"text\"\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                 value={ formik.values.description}\n                              \n                                style={{ marginRight: 1 }}\n                                fullWidth\n                                margin=\"normal\"\n                                InputLabelProps={{\n                                  shrink: true,\n                                }}\n                                variant=\"outlined\"\n                              \n                              />\n                              {formik.errors.description && formik.touched.description && (\n                                <p>{formik.errors.description}</p>\n                              )}\n                            </Grid>\n                \n                            <Grid item xs={12} sm={12} md={4} lg={4}\n                              style={{\n                                textAlign: 'center'\n                              }}\n                            >\n                              <Button>\n                \n                              </Button>\n                            </Grid>\n                             <Link href=\"/create/\">\n                             \n                               <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                style={{ margin: '2 auto', display: \"flex\" }}\n                                type=\"submit\"\n                                startIcon={<SaveIcon />}\n                               \n                              >\n                                Save\n                              </Button>\n                              </Link>\n                              \n                              <Link>\n                            \n                                <Button\n                                   variant=\"contained\"\n                                   color=\"secondary\"\n                                   startIcon={<DeleteIcon />}\n                                   to={{pathname:\"/update/\"}}\n                                     >\n                                    Delete\n                                  </Button>\n                                  </Link>\n                              \n                                  <Link>\n                                   <Button variant=\"contained\" \n                                  color=\"primary\" \n                                  style={{ margin: '3 auto', display: \"flex\"}}\n                                  to={{pathname:\"/update/\"}}\n                                  >Switch to view\n                                  </Button>\n                                  </Link>\n\n                              )\n                              \n\n                             <Link href='/'>\n                              <Button variant=\"contained\" \n                              style={{ margin: '3 auto', display: \"flex\" }}\n                         \n                              >Goto:Holidays\n                              </Button>\n                              </Link>\n                              \n                              <Link href=\"/view/\">\n                          \n                              <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                style={{ margin: '2 auto', display: \"flex\" }}\n                                type=\"submit\"\n                                startIcon={<SaveIcon />}\n                               \n                              >\n                              Switch To Update\n                              </Button>\n                      \n                              </Link>\n                            \n                           \n                              <Link href=\"/update/\">\n                             \n                              <Button variant=\"contained\" \n                              style={{ margin: '3 auto', display: \"flex\" }}\n                              startIcon={<DeleteIcon />}\n                         \n                              >Delete\n                              </Button>\n                            \n                              </Link>\n                              <Link href=\"/update/\">\n                              <Button variant=\"contained\" \n                              style={{ margin: '3 auto', display: \"flex\" }}\n                              \n                         \n                              >Switch To View\n                              </Button>\n                            </Link>\n                            \n                                \n                            \n                        \n                          \n                         </Grid>\n                \n                   </Box>\n         \n                  </form>\n              \n                        \n                     </div>\n               \n      \n  )}\n"]},"metadata":{},"sourceType":"module"}