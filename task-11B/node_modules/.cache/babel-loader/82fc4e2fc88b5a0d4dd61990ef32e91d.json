{"ast":null,"code":"import { Today } from \"@material-ui/icons\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nconst currentYear = moment().format(\"YYYY\");\nconst today = parseInt(currentYear); //slice\n\nconst holidaySlice = createSlice({\n  name: \"holidayList\",\n  initialState: {\n    year: today,\n    holidayData: [],\n    holidayList: {\n      id: \"\",\n      date: \"\",\n      location: \"\",\n      type: \"\",\n      description: \"\"\n    }\n  },\n  reducers: {\n    getHolidays(state, action) {\n      state.holidayData = action.payload;\n    },\n\n    setHolidays(state, action) {\n      state.holidayList = action.payload;\n    },\n\n    setForID(state, action) {\n      // console.log(\"action.payload\",action)\n      state.holidayList = action.payload;\n      console.log(\"action.payload\", action.payload);\n    }\n\n  }\n});\nexport const {\n  getHolidays,\n  setHolidays,\n  setForID\n} = holidaySlice.actions; //Actions\n\nexport const fetchUsers = year => async dispatch => {\n  if (typeof year === \"undefined\") {\n    year = moment().year();\n  }\n\n  axios.get(`http://localhost:4000/holiday/year/${year}`).then(res => {\n    dispatch(getHolidays(res.data));\n  });\n}; //  //post \n\nexport const addTodo = holiday => async dispatch => {\n  console.log(\"holiday\", holiday);\n  axios.post(`http://localhost:4000/holiday`, holiday).then(res => {\n    // console.log(\"sindu\",res.data)\n    dispatch(addTodo(res.data));\n  });\n}; // //read the data\n\nexport const readTodo = id => async dispatch => {\n  //  console.log(\"before calling api\",id);\n  // console.log(\"hi\")\n  axios.get(`http://localhost:4000/holiday/${id}`).then(res => {\n    console.log(\"read\", res.data);\n    dispatch(setForID(res.data));\n  });\n}; //update\n\nexport const updateTodo = (updatedTodo, id) => async dispatch => {\n  axios.put(`http://localhost:4000/holiday/${id}`, updatedTodo).then(res => {\n    dispatch(setForID(res.data));\n  });\n}; //delete\n\nexport const deleteTodo = id => async dispatch => {\n  axios.delete(`http://localhost:4000/holiday/${id}`).then(res => {\n    dispatch(setForID(res.data));\n  });\n};\nexport const holidayListSliceState = state => state.holidaySlice.holidayData;\nexport const holidayListSliceState1 = state => state.holidaySlice.dataforId;\nexport default holidaySlice.reducer;","map":{"version":3,"sources":["/Users/sindhurin/development/quadacademy/task-11B/src/slice/holidaySlice.js"],"names":["Today","createSlice","axios","moment","currentYear","format","today","parseInt","holidaySlice","name","initialState","year","holidayData","holidayList","id","date","location","type","description","reducers","getHolidays","state","action","payload","setHolidays","setForID","console","log","actions","fetchUsers","dispatch","get","then","res","data","addTodo","holiday","post","readTodo","updateTodo","updatedTodo","put","deleteTodo","delete","holidayListSliceState","holidayListSliceState1","dataforId","reducer"],"mappings":"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","sourcesContent":["import { Today } from \"@material-ui/icons\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nconst currentYear = moment().format(\"YYYY\");\nconst today = parseInt(currentYear);\n//slice\nconst holidaySlice = createSlice({\n    name: \"holidayList\",\n    initialState: {\n        year:today,\n       holidayData: [],\n       holidayList:{\n           id:\"\",\n           date:\"\",\n           location:\"\",\n           type:\"\",\n           description:\"\"\n       },\n\n     },\n    reducers: {\n        getHolidays(state, action) {\n            state.holidayData = action.payload;\n        },\n        setHolidays(state,action){\n          \n            state.holidayList = action.payload;\n        },\n        setForID(state,action){\n            // console.log(\"action.payload\",action)\n            state.holidayList =action.payload;\n             console.log(\"action.payload\",action.payload)\n        }\n    }\n});\n\nexport const { getHolidays,setHolidays,setForID} = holidaySlice.actions;\n\n\n//Actions\nexport const fetchUsers = (year) => async (dispatch) => {\n    \n    if (typeof year === \"undefined\") {\n        year = moment().year();\n    }\n    axios.get(`http://localhost:4000/holiday/year/${year}`).then((res) => {\n        dispatch(getHolidays(res.data));\n       \n    });\n    \n};\n//  //post \n export const addTodo = (holiday) => async(dispatch) => {\n      console.log(\"holiday\",holiday);\n    \n        axios.post(`http://localhost:4000/holiday`,holiday).then((res) =>{\n            // console.log(\"sindu\",res.data)\n           dispatch(addTodo(res.data))\n        \n        })\n       \n    };\n\n// //read the data\n\n export const readTodo = (id )=> async(dispatch) => {\n    //  console.log(\"before calling api\",id);\n    // console.log(\"hi\")\n            axios.get(`http://localhost:4000/holiday/${id}`).then((res) => {\n                 console.log(\"read\",res.data)\n             dispatch(setForID(res.data))\n             \n\n        })  \n     } \n    \n //update\n export const updateTodo =(updatedTodo,id) =>async(dispatch) =>{\n     axios.put(`http://localhost:4000/holiday/${id}`,updatedTodo).then((res) =>{\n         dispatch(setForID(res.data))\n     })\n } \n //delete\n export const deleteTodo =(id) =>async(dispatch) =>  {\n     axios.delete(`http://localhost:4000/holiday/${id}`).then((res) =>{\n         dispatch(setForID(res.data))\n     })\n }\n\n\n\nexport const holidayListSliceState = (state) => state.holidaySlice.holidayData;\n export const holidayListSliceState1=(state) =>state.holidaySlice.dataforId;\nexport default holidaySlice.reducer;\n\n\n\n"]},"metadata":{},"sourceType":"module"}