{"ast":null,"code":"var _jsxFileName = \"/Users/sindhurin/development/quadacademy/task-11B/task-11/src/component/DataFetching.js\",\n    _s = $RefreshSig$();\n\nimport { TableRow, Table, TableCell, TableBody, Box, IconButton } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { fetchUsers, holidayListSliceState } from '../slice/holidaySlice';\nimport { useSelector } from 'react-redux';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  tableCell: {\n    padding: \"16px 16px\"\n  },\n  tableRow: {\n    height: '40%'\n  }\n});\nconst RedTextTypography = withStyles({\n  root: {\n    color: \"#ba000d\"\n  }\n})(Typography);\nconst theme = createTheme({\n  typography: {\n    fontFamily: 'Raleway, Arial',\n    fontSize: 16\n  }\n}); //fetching the data from the api\n\nfunction DataFetching() {\n  _s();\n\n  const classes = useStyles();\n  const holidays = useSelector(holidayListSliceState);\n  const currentYear = moment().format('YYYY');\n  const today = parseInt(currentYear);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchUsers(today));\n  }, [today]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: holidays.holidays && holidays.holidays.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"simple table\",\n        size: \"small\",\n        children: /*#__PURE__*/_jsxDEV(TableBody, {\n          children: holidays.holidays.map(holiday => /*#__PURE__*/_jsxDEV(TableRow, {\n            className: classes.tableRow,\n            variant: \"footer\",\n            fontWeight: \"fontWeightBold\",\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                href: \"/view\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                children: /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 12\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableCell,\n              style: {\n                borderBottom: 'none',\n                padding: '10px',\n                paddingLeft: '9%',\n                width: '30%'\n              },\n              children: holiday.Date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                borderBottom: 'none',\n                padding: '1px',\n                paddingLeft: '0%',\n                width: '20%'\n              },\n              children: holiday.Description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                borderBottom: 'none',\n                padding: '10px',\n                paddingLeft: '9%'\n              },\n              children: holiday.Type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                borderBottom: 'none',\n                paddingLeft: '12%'\n              },\n              children: [\" \", holiday.Location]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 12\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 12\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        mt: 5,\n        paddingLeft: 70,\n        children: /*#__PURE__*/_jsxDEV(RedTextTypography, {\n          variant: \"h6\",\n          children: \"No Records Found for this particular year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DataFetching, \"iKIaPJ3ZMSBMXJL7xR+4Dl3QFgw=\", false, function () {\n  return [useStyles, useSelector, useDispatch];\n});\n\n_c = DataFetching;\nexport default DataFetching;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataFetching\");","map":{"version":3,"sources":["/Users/sindhurin/development/quadacademy/task-11B/task-11/src/component/DataFetching.js"],"names":["TableRow","Table","TableCell","TableBody","Box","IconButton","React","useEffect","fetchUsers","holidayListSliceState","useSelector","makeStyles","withStyles","moment","useDispatch","Typography","createTheme","ThemeProvider","Link","VisibilityIcon","useStyles","tableCell","padding","tableRow","height","RedTextTypography","root","color","theme","typography","fontFamily","fontSize","DataFetching","classes","holidays","currentYear","format","today","parseInt","dispatch","length","map","holiday","borderBottom","paddingLeft","width","Date","Description","Type","Location"],"mappings":"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","sourcesContent":["import { TableRow, Table, TableCell, TableBody ,Box, IconButton} from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { fetchUsers, holidayListSliceState } from '../slice/holidaySlice';\nimport { useSelector } from 'react-redux';\nimport { makeStyles,withStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\nimport { createTheme,ThemeProvider} from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nconst useStyles = makeStyles({\n\n  tableCell: {\n    padding: \"16px 16px\"\n  },\n    tableRow: {\n      height: '40%'\n    },\n  })\n \n const RedTextTypography = withStyles({\n  root: {\n    color: \"#ba000d\"\n  }\n})(Typography);\n\nconst theme = createTheme({\n  typography: {\n    fontFamily: 'Raleway, Arial',\n    fontSize: 16,\n    \n  },\n})\n//fetching the data from the api\nfunction DataFetching() {\n  const classes = useStyles();\n  const holidays = useSelector(holidayListSliceState);\n  const currentYear = moment().format('YYYY');\n  const today = parseInt(currentYear);\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchUsers(today))\n  }, [today])\n \n  return (\n    <ThemeProvider theme={theme}>\n    <React.Fragment>\n     \n    { holidays.holidays && holidays.holidays.length >0 ?\n      <Table  aria-label=\"simple table\" size=\"small\"  >\n        <TableBody>\n      { holidays.holidays.map(holiday => (\n           <TableRow  className={classes.tableRow} variant=\"footer\" fontWeight=\"fontWeightBold\"  >\n           <TableCell >\n           <Link href='/view'></Link>\n           <IconButton>\n           <VisibilityIcon />\n           </IconButton>\n           </TableCell>\n           <TableCell className={classes.tableCell} style={{borderBottom: 'none', padding: '10px', paddingLeft: '9%', width: '30%'}}>{holiday.Date}</TableCell>\n           <TableCell  style={{borderBottom: 'none',padding: '1px', paddingLeft: '0%', width: '20%' }}>{holiday.Description}</TableCell>\n           <TableCell  style={{borderBottom: 'none', padding: '10px', paddingLeft: '9%'}}>{holiday.Type}</TableCell>\n           <TableCell  style={{ borderBottom: 'none', paddingLeft: '12%' }}> {holiday.Location}</TableCell>\n         </TableRow>\n        \n      ))}\n          </TableBody>\n          </Table>\n       :\n         \n          <Box mt={5}  paddingLeft={70} >\n          <RedTextTypography variant=\"h6\">\n          No Records Found for this particular year\n        </RedTextTypography>\n            \n            </Box>\n        \n      } \n      </React.Fragment>\n      </ThemeProvider>\n  );\n\n}\n\nexport default DataFetching;\n"]},"metadata":{},"sourceType":"module"}