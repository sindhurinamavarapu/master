{"ast":null,"code":"var _jsxFileName = \"/Users/sindhurin/development/quadacademy/task-11B/src/component/HolidayPage.js\";\nimport React, { useEffect } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Formik, Field, Form, ErrorMessage, FieldArray } from 'formik'; // import {useFormik} from \"formik\";\n\nimport * as Yup from \"yup\";\nimport { makeStyles } from '@material-ui/core'; // import Grid from \"@material-ui/core/Grid\";\n// import Box from \"@material-ui/core/Box\";\n// import TextField from '@material-ui/core/TextField';\n// import InputLabel from '@material-ui/core/InputLabel';\n// import Button from '@material-ui/core/Button';\n// import SaveIcon from '@material-ui/icons/Save';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import Link from \"@material-ui/core/Link\";\n// import {addTodo, holidayListSliceState} from '../slice/holidaySlice';\n// import { useDispatch } from \"react-redux\";\n// import { useSelector } from \"react-redux\";\n// const useStyles = makeStyles((theme) => ({\n//   button: {\n//     margin: theme.spacing(1),\n//   },\n//   root: {\n//     justifyContent: 'center',\n//     pb: '3'\n//   },\n//   inputLabel: {\n//     paddingLeft: '30%',    \n//   },\n//   textField: {\n//     margin: '7'\n//   }\n// }))\n// const type = [\n//   {\n//     label:'Select',\n//   },\n//   {\n//     label: 'Optional',\n//   },\n//   {\n//     label: 'Fixed',\n//   },\n// ]\n// const location = [\n//   {\n//     label:'Select',\n//   },\n//   {\n//     label: 'All Locations'\n//   },\n//   {\n//     label: 'Bettendorf,IA'\n//   },\n//   {\n//     label: 'India'\n//   }\n// ]\n// const defaultProps = {\n//   bgcolor: 'background.paper',\n//   m: 1,\n//   border: 1,\n//   style: { width: '65rem', height: '35rem' },\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formValues = {\n  data: [{\n    date: '',\n    location: '',\n    type: '',\n    description: '',\n    isComplete: false\n  }]\n};\nexport default function App() {\n  // const classes = useStyles();\n  // const holidays = useSelector(holidayListSliceState);\n  // const dispatch = useDispatch();\n  const formValidation = () => {\n    const message = \"required\";\n  };\n\n  return Yup.object().shape({\n    data: Yup.object().shape({\n      date: Yup.string().required(\"Required!\"),\n      location: Yup.string().required(\"Required!\").nullable(),\n      type: Yup.string().required(\"Required!\").nullable(),\n      description: Yup.string().required(\"Required!\").nullable()\n    })\n  });\n\n  const handleSubmit = values => {\n    console.log(\"values\");\n  };\n\n  const formikProps = {\n    intialValues: formValues,\n    vvalidationSchema: formValidation(),\n    onSubmit: handleSubmit\n  }; // const formik = useFormik({\n  //  initialValues: {\n  //     date:'',\n  //     location:'',\n  //     type:'',\n  //     description:'',\n  //     isComplete:false\n  //   },\n  //  validationSchema: Yup.object({\n  //     date:Yup.string().required(\"Required!\"),\n  //     location:Yup.string().required(\"Required!\").nullable(),\n  //     type:Yup.string().required(\"Required!\").nullable(),\n  //     description:Yup.string().required(\"Required!\").nullable(),\n  //   }),\n  //   onSubmit: (values) => {\n  //     console.log(values);\n  //      alert(JSON.stringify(values, null, 2));\n  //   },\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, { ...formikProps,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(\"crud\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sindhurin/development/quadacademy/task-11B/src/component/HolidayPage.js"],"names":["React","useEffect","ReactDOM","Formik","Field","Form","ErrorMessage","FieldArray","Yup","makeStyles","formValues","data","date","location","type","description","isComplete","App","formValidation","message","object","shape","string","required","nullable","handleSubmit","values","console","log","formikProps","intialValues","vvalidationSchema","onSubmit"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,YAA9B,EAA4CC,UAA5C,QAA8D,QAA9D,C,CACA;;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,UAAT,QAA2B,mBAA3B,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,UAAU,GAAE;AAChBC,EAAAA,IAAI,EAAC,CACH;AACEC,IAAAA,IAAI,EAAC,EADP;AAEEC,IAAAA,QAAQ,EAAC,EAFX;AAGEC,IAAAA,IAAI,EAAC,EAHP;AAIEC,IAAAA,WAAW,EAAC,EAJd;AAKEC,IAAAA,UAAU,EAAC;AALb,GADG;AADW,CAAlB;AAYA,eAAe,SAASC,GAAT,GAAe;AAC5B;AACA;AACA;AAEA,QAAMC,cAAc,GAAE,MAAM;AAC1B,UAAMC,OAAO,GAAC,UAAd;AACH,GAFC;;AAGF,SAAOX,GAAG,CAACY,MAAJ,GAAaC,KAAb,CAAmB;AACxBV,IAAAA,IAAI,EAACH,GAAG,CAACY,MAAJ,GAAaC,KAAb,CAAmB;AACtBT,MAAAA,IAAI,EAACJ,GAAG,CAACc,MAAJ,GAAaC,QAAb,CAAsB,WAAtB,CADiB;AAEtBV,MAAAA,QAAQ,EAACL,GAAG,CAACc,MAAJ,GAAaC,QAAb,CAAsB,WAAtB,EAAmCC,QAAnC,EAFa;AAGtBV,MAAAA,IAAI,EAACN,GAAG,CAACc,MAAJ,GAAaC,QAAb,CAAsB,WAAtB,EAAmCC,QAAnC,EAHiB;AAItBT,MAAAA,WAAW,EAACP,GAAG,CAACc,MAAJ,GAAaC,QAAb,CAAsB,WAAtB,EAAmCC,QAAnC;AAJU,KAAnB;AADmB,GAAnB,CAAP;;AAQA,QAAMC,YAAY,GAAIC,MAAD,IAAW;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACF,GAFD;;AAGA,QAAMC,WAAW,GAAE;AACfC,IAAAA,YAAY,EAACpB,UADE;AAEfqB,IAAAA,iBAAiB,EAACb,cAAc,EAFjB;AAGfc,IAAAA,QAAQ,EAACP;AAHM,GAAnB,CAnB8B,CAyB5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,sBACE;AAAA,2BACE,QAAC,MAAD,OAAYI,WAAZ;AAAA,6BACA,QAAC,IAAD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;KAtDuBZ,G","sourcesContent":["import React,{ useEffect }  from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Formik, Field, Form, ErrorMessage, FieldArray } from 'formik';\n// import {useFormik} from \"formik\";\nimport * as Yup from \"yup\";\nimport { makeStyles } from '@material-ui/core';\n// import Grid from \"@material-ui/core/Grid\";\n// import Box from \"@material-ui/core/Box\";\n// import TextField from '@material-ui/core/TextField';\n// import InputLabel from '@material-ui/core/InputLabel';\n// import Button from '@material-ui/core/Button';\n// import SaveIcon from '@material-ui/icons/Save';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import Link from \"@material-ui/core/Link\";\n// import {addTodo, holidayListSliceState} from '../slice/holidaySlice';\n// import { useDispatch } from \"react-redux\";\n// import { useSelector } from \"react-redux\";\n\n// const useStyles = makeStyles((theme) => ({\n//   button: {\n//     margin: theme.spacing(1),\n//   },\n//   root: {\n//     justifyContent: 'center',\n//     pb: '3'\n//   },\n//   inputLabel: {\n//     paddingLeft: '30%',    \n//   },\n//   textField: {\n//     margin: '7'\n//   }\n// }))\n// const type = [\n//   {\n//     label:'Select',\n//   },\n//   {\n\n//     label: 'Optional',\n//   },\n//   {\n\n//     label: 'Fixed',\n//   },\n// ]\n// const location = [\n//   {\n//     label:'Select',\n//   },\n//   {\n//     label: 'All Locations'\n//   },\n//   {\n//     label: 'Bettendorf,IA'\n//   },\n//   {\n//     label: 'India'\n//   }\n// ]\n// const defaultProps = {\n//   bgcolor: 'background.paper',\n//   m: 1,\n//   border: 1,\n//   style: { width: '65rem', height: '35rem' },\n// };\n \nconst formValues ={\n  data:[\n    {\n      date:'',\n      location:'',\n      type:'',\n      description:'',\n      isComplete:false\n    }\n]\n}\n\nexport default function App() {\n  // const classes = useStyles();\n  // const holidays = useSelector(holidayListSliceState);\n  // const dispatch = useDispatch();\n\n  const formValidation =() => {\n    const message=\"required\";\n}\nreturn Yup.object().shape({\n  data:Yup.object().shape({\n    date:Yup.string().required(\"Required!\"),\n    location:Yup.string().required(\"Required!\").nullable(),\n    type:Yup.string().required(\"Required!\").nullable(),\n    description:Yup.string().required(\"Required!\").nullable(),\n})\n})\nconst handleSubmit = (values) =>{\n   console.log(\"values\");\n}\nconst formikProps ={\n    intialValues:formValues,\n    vvalidationSchema:formValidation(),\n    onSubmit:handleSubmit,\n};\n\n  // const formik = useFormik({\n  //  initialValues: {\n  //     date:'',\n  //     location:'',\n  //     type:'',\n  //     description:'',\n  //     isComplete:false\n  //   },\n  //  validationSchema: Yup.object({\n  //     date:Yup.string().required(\"Required!\"),\n  //     location:Yup.string().required(\"Required!\").nullable(),\n  //     type:Yup.string().required(\"Required!\").nullable(),\n  //     description:Yup.string().required(\"Required!\").nullable(),\n  //   }),\n  //   onSubmit: (values) => {\n  //     console.log(values);\n  //      alert(JSON.stringify(values, null, 2));\n      \n  //   },\n \n  return (\n    <div>\n      <Formik {...formikProps}>\n      <Form>\n        <crud />\n      </Form>\n      </Formik>\n      </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}