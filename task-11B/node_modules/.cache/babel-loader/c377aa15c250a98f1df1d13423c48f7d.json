{"ast":null,"code":"var _jsxFileName = \"/Users/sindhurin/development/quadacademy/task-11B/src/component/DataFetching.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useParams } from \"react\";\nimport { TableRow, Table, TableCell, TableBody, Box } from \"@material-ui/core\";\nimport { fetchUsers, holidayListSliceState } from \"../slice/holidaySlice\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport moment from \"moment\";\nimport { useDispatch } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport blue from '@material-ui/core/colors/blue';\nimport red from '@material-ui/core/colors/red';\nimport EditIcon from '@material-ui/icons/Edit'; // import Link from \"@material-ui/core/Link\";\n\nimport { Link } from 'react-router-dom'; // import {readTodo,id} from '../slice/holidaySlice';\n// import {useParams} from \"react-router-dom\";\n// import {readTodo} from \"../slice/holidaySlice\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  tableCell: {\n    padding: \"16px 16px\"\n  }\n});\nconst RedTextTypography = withStyles({\n  root: {\n    color: \"#ba000d\"\n  }\n})(Typography);\nconst theme = createTheme({\n  typography: {\n    fontFamily: \"Raleway, Arial\",\n    fontSize: 16\n  }\n});\n\nconst location = code => {\n  let desc = \"All Locations\";\n\n  switch (code) {\n    case \"ALL\":\n      desc = \"All Locations\";\n      break;\n\n    case \"IND\":\n      desc = \"India\";\n      break;\n\n    case \"USA\":\n      desc = \"Bettendorf, IA\";\n      break;\n  }\n\n  return desc;\n};\n\nconst hType = code => {\n  let desc1 = \"Fixed\";\n\n  switch (code) {\n    case \"F\":\n      desc1 = \"Fixed\";\n      break;\n\n    case \"O\":\n      desc1 = \"Options\";\n      break;\n  }\n\n  return desc1;\n}; //fetching the data from the api\n\n\nfunction DataFetching() {\n  _s();\n\n  const classes = useStyles();\n  const [AllHolidays, setHolidays] = useState([]);\n  const holidays = useSelector(holidayListSliceState);\n  console.log(\"AllHolidays\", holidays);\n  const currentYear = moment().format(\"YYYY\");\n  const today = parseInt(currentYear);\n  const dispatch = useDispatch(); // const id= useParams();\n  // console.log(id);\n\n  useEffect(() => {\n    dispatch(fetchUsers(today));\n  }, [today]);\n  useEffect(() => {\n    setHolidays(holidays);\n  }, [holidays]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: holidays && holidays.holidays && holidays.holidays.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"simple table\",\n        size: \"small\",\n        children: /*#__PURE__*/_jsxDEV(TableBody, {\n          children: holidays.holidays.map(holiday => /*#__PURE__*/_jsxDEV(TableRow, {\n            className: classes.tableRow,\n            fontWeight: \"fontWeightBold\",\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                borderBottom: \"none\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/holiday/` + holiday.HolidayId,\n                className: classes.icon,\n                children: /*#__PURE__*/_jsxDEV(VisibilityIcon, {\n                  style: {\n                    color: blue[600]\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/holiday/` + holiday.HolidayId,\n                className: classes.icon,\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                  style: {\n                    color: red[400],\n                    borderBottom: \"none\",\n                    minWidth: '50px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableCell,\n              style: {\n                borderBottom: \"none\",\n                padding: \"1px\",\n                paddingLeft: \"1%\",\n                width: \"18%\"\n              },\n              children: holiday.Date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                borderBottom: \"none\",\n                padding: \"0px\",\n                paddingLeft: \"1%\",\n                width: \"22%\"\n              },\n              children: holiday.Description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                borderBottom: \"none\",\n                padding: \"0px\",\n                paddingLeft: \"1%\",\n                width: \"20%\"\n              },\n              children: [\" \", hType(holiday.type)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                borderBottom: \"none\",\n                padding: \"1px\",\n                paddingRight: '1%'\n              },\n              children: [\" \", location(holiday.location)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 37\n            }, this)]\n          }, holiday.HolidayId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        mt: 5,\n        paddingLeft: 40,\n        children: /*#__PURE__*/_jsxDEV(RedTextTypography, {\n          variant: \"h6\",\n          children: \"No Records Found for this particular year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DataFetching, \"DLRhr46Dnxs+ya+/SX+TVFRItTE=\", false, function () {\n  return [useStyles, useSelector, useDispatch];\n});\n\n_c = DataFetching;\nexport default DataFetching;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataFetching\");","map":{"version":3,"sources":["/Users/sindhurin/development/quadacademy/task-11B/src/component/DataFetching.js"],"names":["React","useEffect","useState","useParams","TableRow","Table","TableCell","TableBody","Box","fetchUsers","holidayListSliceState","useSelector","makeStyles","withStyles","moment","useDispatch","Typography","createTheme","ThemeProvider","VisibilityIcon","blue","red","EditIcon","Link","useStyles","tableCell","padding","RedTextTypography","root","color","theme","typography","fontFamily","fontSize","location","code","desc","hType","desc1","DataFetching","classes","AllHolidays","setHolidays","holidays","console","log","currentYear","format","today","parseInt","dispatch","length","map","holiday","tableRow","borderBottom","HolidayId","icon","minWidth","paddingLeft","width","Date","Description","type","paddingRight"],"mappings":"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","sourcesContent":["import React, { useEffect,useState,useParams } from \"react\";\nimport { TableRow, Table, TableCell, TableBody, Box } from \"@material-ui/core\";\nimport { fetchUsers, holidayListSliceState } from \"../slice/holidaySlice\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport moment from \"moment\";\nimport { useDispatch } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport blue from '@material-ui/core/colors/blue';\nimport red from '@material-ui/core/colors/red';\nimport EditIcon from '@material-ui/icons/Edit';\n// import Link from \"@material-ui/core/Link\";\nimport {Link } from 'react-router-dom';\n// import {readTodo,id} from '../slice/holidaySlice';\n// import {useParams} from \"react-router-dom\";\n// import {readTodo} from \"../slice/holidaySlice\";\nconst useStyles = makeStyles({\n    tableCell: {\n        padding: \"16px 16px\",\n    },\n});\nconst RedTextTypography = withStyles({\n    root: {\n        color: \"#ba000d\",\n    },\n})(Typography);\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: \"Raleway, Arial\",\n        fontSize: 16,\n    },\n    \n});\nconst location = (code) =>{\n    let desc=  \"All Locations\";\n  \n    switch (code) {\n       case \"ALL\":\n           desc =\"All Locations\"\n           break;\n        case \"IND\":\n            desc =\"India\"\n            break;  \n        case \"USA\":\n           desc =\"Bettendorf, IA\"\n           break;\n         }\n    return desc;\n}\nconst hType =(code) =>{\n  let desc1=\"Fixed\"\n      \n  switch (code) {\n    case \"F\":\n        desc1=\"Fixed\"\n        break;\n     case \"O\":\n         desc1 =\"Options\"\n         break;     \n    }\n  return desc1;\n}\n\n\n//fetching the data from the api\nfunction DataFetching() {\n    const classes = useStyles();\n    const [AllHolidays,setHolidays]= useState([]);\n   \n    const holidays = useSelector(holidayListSliceState);\n    console.log(\"AllHolidays\",holidays);\n    const currentYear = moment().format(\"YYYY\");\n    const today = parseInt(currentYear);\n    const dispatch = useDispatch();\n    // const id= useParams();\n    // console.log(id);\n \n   \n   \n    useEffect(() => {\n        dispatch(fetchUsers(today));\n    }, [today]);\n\n \n\n     useEffect(()=>{\n         setHolidays(holidays)\n     },[holidays])\n         \n    return (\n        <ThemeProvider theme={theme}>\n            <React.Fragment>\n                {holidays && holidays.holidays && holidays.holidays.length > 0 ? (\n                    <Table aria-label=\"simple table\" size=\"small\">\n           \n                        <TableBody>\n                        \n                            {holidays.holidays.map((holiday) => (\n            \n                                <TableRow className={classes.tableRow} fontWeight=\"fontWeightBold\" key={holiday.HolidayId}>\n                                <TableCell style={{borderBottom: \"none\"}}>\n                                 <Link to={`/holiday/`+holiday.HolidayId } className={classes.icon} >\n                                \n                                <VisibilityIcon  style={{color:blue[600]}}  />\n                                </Link>\n                                <Link to={`/holiday/`+holiday.HolidayId } className={classes.icon} >\n                                \n                                <EditIcon style={{color:red[400],borderBottom: \"none\",minWidth: '50px'}} />\n                                </Link>\n                                </TableCell>\n                                \n                                    <TableCell\n                                        className={classes.tableCell}\n                                        style={{\n                                            borderBottom: \"none\",\n                                            padding: \"1px\",\n                                            paddingLeft: \"1%\",\n                                            width: \"18%\",\n                                        }}\n                                    >\n                                        {holiday.Date}\n                                    </TableCell>\n                                    <TableCell\n                                        style={{\n                                            borderBottom: \"none\",\n                                            padding: \"0px\",\n                                            paddingLeft: \"1%\",\n                                            width: \"22%\",\n                                        }}\n                                    >\n                                        {holiday.Description}\n                                    </TableCell>\n                                    <TableCell\n                                        style={{\n                                            borderBottom: \"none\",\n                                            padding: \"0px\",\n                                            paddingLeft: \"1%\",\n                                            width: \"20%\",\n                                        }}\n                                    >\n                                        {\" \"}\n                                        { hType(holiday.type)}\n                                    </TableCell>\n                                    <TableCell style={{ borderBottom: \"none\", padding: \"1px\",paddingRight:'1%' }}>\n                                        {\" \"}\n                                        {location(holiday.location)}\n                                        \n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                ) : (\n                    <Box mt={5} paddingLeft={40}>\n                        <RedTextTypography variant=\"h6\">\n                            No Records Found for this particular year\n                        </RedTextTypography>\n                    </Box>\n                )}\n            </React.Fragment>\n          \n        </ThemeProvider>\n       \n    );\n}\n\nexport default DataFetching;\n"]},"metadata":{},"sourceType":"module"}