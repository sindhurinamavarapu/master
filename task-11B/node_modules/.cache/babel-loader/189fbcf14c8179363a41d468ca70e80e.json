{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nconst intialState = {\n  id: \"\",\n  date: \"\",\n  description: \"\",\n  type: \"\",\n  location: \"\",\n  isComplete: false\n};\n\nconst todoReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return [action.todo.data, ...state];\n\n    case \"READ_TODO\":\n      return [action.todo.data, ...state];\n\n    case \"UPDATE_TODO\":\n      return state.map(todo => {//todo._id === action.todo.data._id ? action.todo.data : todo\n      });\n\n    case \"DELETE_TODO\":\n      return [action];\n\n    default:\n      console.log(state);\n      return state;\n  }\n}; //slice\n\n\nconst holidaySlice = createSlice({\n  name: \"holidayList\",\n  initialState: {\n    holidayData: [],\n    holidays: {\n      id: \"\",\n      date: \"\",\n      description: \"\",\n      type: \"\",\n      location: \"\"\n    }\n  },\n  reducers: {\n    getHolidays(state, action) {\n      state.holidayData = action.payload;\n    }\n\n  }\n});\nexport const {\n  getHolidays,\n  ADD_TODO,\n  READ_TODO\n} = holidaySlice.actions; //Actions\n\nexport const fetchUsers = year => async dispatch => {\n  if (typeof year === \"undefined\") {\n    year = moment().year();\n  }\n\n  axios.get(`http://localhost:4000/holiday/year/${year}`).then(res => {\n    //    console.log(\"id\",res.holidays.holidays[0].holidayId);\n    console.log(\"res\", res.data);\n    dispatch(getHolidays(res.data)); // console.log(res.data,\"data\")\n  });\n}; //  //post \n\nexport const addTodo = holiday => async dispatch => {\n  console.log(\"holiday\", holiday);\n  axios.post(`http://localhost:4000/holiday`, holiday).then(res => {\n    // console.log(\"sindu\",res.data)\n    dispatch(addTodo(res.data));\n  });\n}; // //read the data\n\nexport const readTodo = id => async dispatch => {\n  console.log(\"hi\");\n  console.log(\"id\", id);\n  axios.get(`http://localhost:4000/holiday/${id}`).then(res => {\n    //  console.log(\"id\",id);\n    console.log(\"res\", res);\n    dispatch(readTodo(res.data));\n  });\n}; //update\n\nexport const updateTodo = (updatedTodo, id) => async dispatch => {\n  axios.put(`http://localhost:4000/holiday/${id}`, updatedTodo).then(res => {\n    dispatch(updateTodo(res.data));\n  });\n}; //delete\n\nexport const deleteTodo = id => async dispatch => {\n  axios.delete(`http://localhost:4000/holiday/${id}`).then(res => {\n    dispatch(deleteTodo(res.data));\n  });\n};\nexport const holidayListSliceState = state => state.holidaySlice.holidayData;\nexport default holidaySlice.reducer;","map":{"version":3,"sources":["/Users/sindhurin/development/quadacademy/task-11B/src/slice/holidaySlice.js"],"names":["createSlice","axios","moment","intialState","id","date","description","type","location","isComplete","todoReducer","state","action","todo","data","map","console","log","holidaySlice","name","initialState","holidayData","holidays","reducers","getHolidays","payload","ADD_TODO","READ_TODO","actions","fetchUsers","year","dispatch","get","then","res","addTodo","holiday","post","readTodo","updateTodo","updatedTodo","put","deleteTodo","delete","holidayListSliceState","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\n const intialState ={\n     id:\"\",\n     date:\"\",\n    description:\"\",\n    type:\"\",\n    location:\"\",\n    isComplete:false\n } \nconst todoReducer =(state=[],action) => {\n    \n    switch(action.type){\n       case \"ADD_TODO\" :\n        return [action.todo.data,...state]\n        case \"READ_TODO\" :\n        return [action.todo.data,...state]\n        case \"UPDATE_TODO\" :\n         return state.map((todo) => {\n              //todo._id === action.todo.data._id ? action.todo.data : todo\n         })\n         case \"DELETE_TODO\" :\n            return [action]\n        default:\n            console.log(state);\n            return state;\n    }\n}\n \n\n//slice\nconst holidaySlice = createSlice({\n    name: \"holidayList\",\n    initialState: {\n        holidayData: [],\n        holidays:{\n            id:\"\",\n            date:\"\",\n            description:\"\",\n            type:\"\",\n            location:\"\"\n        }\n    },\n    reducers: {\n        getHolidays(state, action) {\n            state.holidayData = action.payload;\n        },\n\n    },\n});\n\nexport const { getHolidays,ADD_TODO,READ_TODO} = holidaySlice.actions;\n\n\n//Actions\nexport const fetchUsers = (year) => async (dispatch) => {\n    \n    if (typeof year === \"undefined\") {\n        year = moment().year();\n    }\n    axios.get(`http://localhost:4000/holiday/year/${year}`).then((res) => {\n    //    console.log(\"id\",res.holidays.holidays[0].holidayId);\n        console.log(\"res\",res.data)\n        dispatch(getHolidays(res.data));\n        // console.log(res.data,\"data\")\n    });\n    \n};\n//  //post \n export const addTodo = (holiday) => async(dispatch) => {\n      console.log(\"holiday\",holiday);\n    \n        axios.post(`http://localhost:4000/holiday`,holiday).then((res) =>{\n            // console.log(\"sindu\",res.data)\n           dispatch(addTodo(res.data))\n        \n        })\n       \n    };\n\n// //read the data\n\n export const readTodo = (id )=> async(dispatch) => {\n      console.log(\"hi\")\n      console.log(\"id\",id);\n            axios.get(`http://localhost:4000/holiday/${id}`).then((res) => {\n                //  console.log(\"id\",id);\n                console.log(\"res\",res);\n            dispatch(readTodo(res.data))\n        })  \n     } \n    \n //update\n export const updateTodo =(updatedTodo,id) =>async(dispatch) =>{\n     axios.put(`http://localhost:4000/holiday/${id}`,updatedTodo).then((res) =>{\n         dispatch(updateTodo(res.data))\n     })\n } \n //delete\n export const deleteTodo =(id) =>async(dispatch) =>  {\n     axios.delete(`http://localhost:4000/holiday/${id}`).then((res) =>{\n         dispatch(deleteTodo(res.data))\n     })\n }\n\n\n\nexport const holidayListSliceState = (state) => state.holidaySlice.holidayData;\nexport default holidaySlice.reducer;\n"]},"metadata":{},"sourceType":"module"}