{"ast":null,"code":"var _jsxFileName = \"/Users/sindhurin/development/quadacademy/task-11B/src/component/HolidayPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { makeStyles } from '@material-ui/core';\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Link from \"@material-ui/core/Link\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  root: {\n    justifyContent: 'center',\n    pb: '3'\n  },\n  inputLabel: {\n    paddingLeft: '30%'\n  },\n  textField: {\n    margin: '7'\n  }\n}));\nconst type = [{\n  label: 'Select'\n}, {\n  label: 'Optional'\n}, {\n  label: 'Fixed'\n}];\nconst Location = [{\n  label: 'Select'\n}, {\n  label: 'All Locations'\n}, {\n  label: 'Bettendorf,IA'\n}, {\n  label: 'India'\n}];\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  m: 1,\n  border: 1,\n  style: {\n    width: '65rem',\n    height: '35rem'\n  }\n}; // export default function Form() {\n//   const classes = useStyles();\n//   const formik = useFormik({\n//     initialValues :{\n//       date:'',\n//       location:'',\n//       type:'',\n//       description:'',\n//       isComplete:false\n//       },\n//       validationSchema: Yup.object({\n//         date:Yup.string().required(\"this field is required\").nullable(),\n//         location:Yup.string().required(\"this field is required\").nullable(),\n//         type:Yup.string().required(\"this field is required\").nullable(),\n//         description:Yup.string().required(\"this field is required\").nullable(),\n//       }),\n//       onSubmit:values => {\n//         alert(JSON.stringify(values, null, 2));\n//       }\n//   });\n//   return (\n//     <form onSubmit={formik.handleSubmit}>\n//             <Box display=\"flex\" justifyContent=\"center\" border={1} {...defaultProps}  px={2} pt={5} pb={4}>\n//                       <Grid container spacing={3}>\n//                         <Grid item xs={2}>\n//                           <InputLabel htmlFor=\"Holiday Id\" margin=\"dense\" varient=\"outlined\" className={classes.inputLabel} >Holiday Id:</InputLabel>\n//                         </Grid>\n//                         <Grid item xs={10}>\n//                           <TextField\n//                           name=\"HolidayId\"\n//                             id=\"outlined-full-width\"\n//                             value=\"#\"\n//                             style={{ margin: 1 }}\n//                             fullWidth\n//                             margin=\"normal\"\n//                             InputLabelProps={{\n//                               shrink: true,\n//                             }}\n//                             variant=\"outlined\"\n//                           />\n//                         </Grid>\n//                         <Grid item xs={2}>\n//                           <InputLabel htmlFor=\"Date\" className={classes.inputLabel} >Date:</InputLabel>\n//                         </Grid>\n//                         <Grid item xs={10}>\n//                          <TextField\n//                           id=\"date\"\n//                           name=\"date\"\n//                           type=\"date\"\n//                           onChange={formik.handleChange}\n//                            value={formik.values.date}\n//                           style={{ margin: 1 }}\n//                           format=\"MM/dd/yyyy\"\n//                           fullWidth\n//                           margin=\"normal\"\n//                           InputLabelProps={{\n//                             shrink: true,\n//                           }}\n//                           variant=\"outlined\"\n//                         />\n//                        </Grid>\n//                         <Grid item xs={2}>\n//                           <InputLabel htmlFor=\"location\" className={classes.inputLabel} >Location:</InputLabel>\n//                         </Grid>\n//                         <Grid item xs={10}>\n//                           <TextField\n//                             id=\"location\"\n//                             name=\"location\"\n//                             type=\"text\"\n//                            onChange={formik.handleChange}\n//                            value={formik.values.location}\n//                             select\n//                             SelectProps={{\n//                               native: true,\n//                             }}\n//                             style={{ marginRight: 1 }}\n//                             variant=\"filled\"\n//                             fullWidth\n//                           >\n//                             {Location.map((option) => (\n//                               <option key={option.value} value={option.value}>\n//                                 {option.label}\n//                               </option>\n//                             ))}\n//                           </TextField><br></br>\n//                         </Grid>\n//                         <Grid item xs={2}>\n//                           <InputLabel htmlFor=\"type\" className={classes.inputLabel} >Holiday Type:</InputLabel>\n//                         </Grid>\n//                         <Grid item xs={10}>\n//                           <TextField\n//                             id=\"type\"\n//                             name=\"type\"\n//                             type=\"text\"\n//                            onChange={formik.handleChange}\n//                            value={formik.values.type}\n//                             select\n//                             style={{ marginRight: 1 }}\n//                             SelectProps={{\n//                               native: true,\n//                             }}\n//                             variant=\"filled\"\n//                             fullWidth\n//                           >\n//                             {type.map((option) => (\n//                               <option key={option.value} value={option.value}>\n//                                 {option.label}\n//                               </option>\n//                             ))}\n//                           </TextField>\n//                         </Grid>\n//                         <Grid item xs={2}>\n//                           <InputLabel htmlFor=\"description\" className={classes.inputLabel} >Description:</InputLabel>\n//                         </Grid>\n//                         <Grid item xs={10}>\n//                           <TextField\n//                             id=\"description\"\n//                             name=\"desciption\"\n//                             type=\"text\"\n//                             onChange={formik.handleChange}\n//                             values={formik.values.description}\n//                             style={{ marginRight: 1 }}\n//                             fullWidth\n//                             margin=\"normal\"\n//                             InputLabelProps={{\n//                               shrink: true,\n//                             }}\n//                             variant=\"outlined\"\n//                           />\n//                         </Grid>\n//                         <Grid item xs={12} sm={12} md={4} lg={4}\n//                           style={{\n//                             textAlign: 'center'\n//                           }}\n//                         >\n//                           <Button>\n//                           </Button>\n//                         </Grid>\n//                         <Link href='/holiday'>\n//                           <Button\n//                             variant=\"contained\"\n//                             color=\"primary\"\n//                             style={{ margin: '2 auto', display: \"flex\" }}\n//                             type=\"submit\"\n//                             startIcon={<SaveIcon />}\n//                           >\n//                             Save\n//                           </Button>\n//                         </Link>\n//                         <Link href='/'>\n//                           <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }} >Goto:Holidays</Button>\n//                           </Link>\n//                        {/*<Link href='/holiday/:id'>\n//                           <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }}>Switch To update</Button>\n//                         </Link>\n//                         <Link href='/holiday/:id'>\n//                           <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }}>Delete</Button>\n//                         </Link>\n//                         <Link href='/holiday/:id'>\n//                           <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }}>Switch to view</Button>\n//                         </Link> */}\n//                      </Grid>\n//                </Box>\n//               </form>\n//            )}\n// import React from \"react\";\n// import { useFormik } from \"formik\";\n// import * as Yup from \"yup\";\n\nexport default function App() {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      date: '',\n      location: '',\n      type: '',\n      description: '',\n      isComplete: false\n    },\n    validationSchema: Yup.object({\n      date: Yup.string().required(\"Required!\"),\n      location: Yup.string().required(\"this field is required\").nullable(),\n      type: Yup.string().required(\"this field is required\").nullable(),\n      description: Yup.string().required(\"this field is required\").nullable()\n    }),\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      border: 1,\n      ...defaultProps,\n      px: 2,\n      pt: 5,\n      pb: 4,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"Holiday Id\",\n            margin: \"dense\",\n            varient: \"outlined\",\n            className: classes.inputLabel,\n            children: \"Holiday Id:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"HolidayId\",\n            id: \"outlined-full-width\",\n            value: \"#\",\n            style: {\n              margin: 1\n            },\n            fullWidth: true,\n            margin: \"normal\",\n            InputLabelProps: {\n              shrink: true\n            },\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"Date\",\n            className: classes.inputLabel,\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"date\",\n            name: \"date\",\n            type: \"date\",\n            onChange: formik.handleChange,\n            value: formik.values.date,\n            style: {\n              margin: 1\n            },\n            format: \"MM/dd/yyyy\",\n            fullWidth: true,\n            margin: \"normal\",\n            InputLabelProps: {\n              shrink: true\n            },\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 30\n          }, this), formik.errors.date && formik.touched.date && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: formik.errors.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"location\",\n            className: classes.inputLabel,\n            children: \"Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"location\",\n            name: \"location\",\n            type: \"text\",\n            onChange: formik.handleChange,\n            value: formik.values.location,\n            select: true,\n            SelectProps: {\n              native: true\n            },\n            style: {\n              marginRight: 1\n            },\n            variant: \"filled\",\n            fullWidth: true,\n            children: location.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 35\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 43\n          }, this), formik.errors.location && formik.touched.location && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: formik.errors.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"type\",\n            className: classes.inputLabel,\n            children: \"Holiday Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"type\",\n            name: \"type\",\n            type: \"text\",\n            onChange: formik.handleChange,\n            value: formik.values.type,\n            select: true,\n            style: {\n              marginRight: 1\n            },\n            SelectProps: {\n              native: true\n            },\n            variant: \"filled\",\n            fullWidth: true,\n            children: type.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 35\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 31\n          }, this), formik.errors.type && formik.touched.type && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: formik.errors.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"description\",\n            className: classes.inputLabel,\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"description\",\n            name: \"desciption\",\n            type: \"text\",\n            onChange: formik.handleChange,\n            values: formik.values.description,\n            style: {\n              marginRight: 1\n            },\n            fullWidth: true,\n            margin: \"normal\",\n            InputLabelProps: {\n              shrink: true\n            },\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 31\n          }, this), formik.errors.description && formik.touched.description && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: formik.errors.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 12,\n          md: 4,\n          lg: 4,\n          style: {\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/holiday\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            style: {\n              margin: '2 auto',\n              display: \"flex\"\n            },\n            type: \"submit\",\n            startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 44\n            }, this),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            style: {\n              margin: '3 auto',\n              display: \"flex\"\n            },\n            children: \"Goto:Holidays\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n} // <div className=\"App\">\n//   <form onSubmit={formik.handleSubmit}>\n// //     <div>\n// //       <label>Full Name</label>\n// //       <input\n//         type=\"text\"\n//         name=\"full_name\"\n//         value={formik.values.full_name}\n//         onChange={formik.handleChange}\n//       />\n//       {formik.errors.full_name && formik.touched.full_name && (\n//         <p>{formik.errors.full_name}</p>\n//       )}\n//     </div>\n//     <div>\n//       <label>Email</label>\n//       <input\n//         type=\"email\"\n//         name=\"email\"\n//         value={formik.values.email}\n//         onChange={formik.handleChange}\n//       />\n//       {formik.errors.email && formik.touched.email && (\n//         <p>{formik.errors.email}</p>\n//       )}\n//     </div>\n//     <div>\n//       <label>Password</label>\n//       <input\n//         type=\"password\"\n//         name=\"password\"\n//         value={formik.values.password}\n//         onChange={formik.handleChange}\n//       />\n//       {formik.errors.password && formik.touched.password && (\n//         <p>{formik.errors.password}</p>\n//       )}\n//     </div>\n//     <div>\n//       <label>Confirm Password</label>\n//       <input\n//         type=\"password\"\n//         name=\"confirm_password\"\n//         value={formik.values.confirm_password}\n//         onChange={formik.handleChange}\n//       />\n//       {formik.errors.confirm_password &&\n//         formik.touched.confirm_password && (\n//           <p>{formik.errors.confirm_password}</p>\n//         )}\n//     </div>\n//     <div>\n//       <button type=\"submit\">Submit</button>\n//     </div>\n//   </form>\n// </div>\n//   );\n// }\n\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sindhurin/development/quadacademy/task-11B/src/component/HolidayPage.js"],"names":["React","useFormik","Yup","makeStyles","Grid","Box","TextField","InputLabel","Button","SaveIcon","Link","useStyles","theme","button","margin","spacing","root","justifyContent","pb","inputLabel","paddingLeft","textField","type","label","Location","defaultProps","bgcolor","m","border","style","width","height","App","formik","initialValues","date","location","description","isComplete","validationSchema","object","string","required","nullable","onSubmit","values","alert","JSON","stringify","handleSubmit","classes","shrink","handleChange","errors","touched","native","marginRight","map","option","value","textAlign","display"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {useFormik} from \"formik\";\nimport * as Yup from \"yup\";\nimport { makeStyles } from '@material-ui/core';\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Link from \"@material-ui/core/Link\";\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    justifyContent: 'center',\n    pb: '3'\n  },\n  inputLabel: {\n    paddingLeft: '30%',    \n  },\n  textField: {\n    margin: '7'\n  }\n}))\nconst type = [\n  {\n    label:'Select',\n  },\n  {\n\n    label: 'Optional',\n  },\n  {\n\n    label: 'Fixed',\n  },\n]\nconst Location = [\n  {\n    label:'Select',\n  },\n  {\n    label: 'All Locations'\n  },\n  {\n    label: 'Bettendorf,IA'\n  },\n  {\n    label: 'India'\n  }\n]\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  m: 1,\n  border: 1,\n  style: { width: '65rem', height: '35rem' },\n};\n\n\n\n// export default function Form() {\n//   const classes = useStyles();\n//   const formik = useFormik({\n//     initialValues :{\n//       date:'',\n//       location:'',\n//       type:'',\n//       description:'',\n//       isComplete:false\n//       },\n//       validationSchema: Yup.object({\n//         date:Yup.string().required(\"this field is required\").nullable(),\n//         location:Yup.string().required(\"this field is required\").nullable(),\n//         type:Yup.string().required(\"this field is required\").nullable(),\n//         description:Yup.string().required(\"this field is required\").nullable(),\n//       }),\n//       onSubmit:values => {\n//         alert(JSON.stringify(values, null, 2));\n//       }\n//   });\n//   return (\n//     <form onSubmit={formik.handleSubmit}>\n//             <Box display=\"flex\" justifyContent=\"center\" border={1} {...defaultProps}  px={2} pt={5} pb={4}>\n//                       <Grid container spacing={3}>\n                      \n//                         <Grid item xs={2}>\n//                           <InputLabel htmlFor=\"Holiday Id\" margin=\"dense\" varient=\"outlined\" className={classes.inputLabel} >Holiday Id:</InputLabel>\n//                         </Grid>\n//                         <Grid item xs={10}>\n//                           <TextField\n//                           name=\"HolidayId\"\n//                             id=\"outlined-full-width\"\n//                             value=\"#\"\n//                             style={{ margin: 1 }}\n                          \n//                             fullWidth\n//                             margin=\"normal\"\n//                             InputLabelProps={{\n//                               shrink: true,\n//                             }}\n//                             variant=\"outlined\"\n//                           />\n//                         </Grid>\n            \n//                         <Grid item xs={2}>\n//                           <InputLabel htmlFor=\"Date\" className={classes.inputLabel} >Date:</InputLabel>\n//                         </Grid>\n//                         <Grid item xs={10}>\n//                          <TextField\n//                           id=\"date\"\n//                           name=\"date\"\n//                           type=\"date\"\n//                           onChange={formik.handleChange}\n//                            value={formik.values.date}\n                          \n//                           style={{ margin: 1 }}\n//                           format=\"MM/dd/yyyy\"\n//                           fullWidth\n//                           margin=\"normal\"\n//                           InputLabelProps={{\n//                             shrink: true,\n//                           }}\n//                           variant=\"outlined\"\n//                         />\n//                        </Grid>\n//                         <Grid item xs={2}>\n//                           <InputLabel htmlFor=\"location\" className={classes.inputLabel} >Location:</InputLabel>\n//                         </Grid>\n//                         <Grid item xs={10}>\n//                           <TextField\n//                             id=\"location\"\n//                             name=\"location\"\n//                             type=\"text\"\n//                            onChange={formik.handleChange}\n//                            value={formik.values.location}\n//                             select\n                         \n//                             SelectProps={{\n//                               native: true,\n//                             }}\n//                             style={{ marginRight: 1 }}\n//                             variant=\"filled\"\n//                             fullWidth\n                            \n//                           >\n//                             {Location.map((option) => (\n//                               <option key={option.value} value={option.value}>\n//                                 {option.label}\n//                               </option>\n//                             ))}\n                          \n//                           </TextField><br></br>\n//                         </Grid>\n//                         <Grid item xs={2}>\n//                           <InputLabel htmlFor=\"type\" className={classes.inputLabel} >Holiday Type:</InputLabel>\n//                         </Grid>\n//                         <Grid item xs={10}>\n//                           <TextField\n//                             id=\"type\"\n//                             name=\"type\"\n//                             type=\"text\"\n//                            onChange={formik.handleChange}\n//                            value={formik.values.type}\n//                             select\n//                             style={{ marginRight: 1 }}\n                         \n//                             SelectProps={{\n//                               native: true,\n//                             }}\n//                             variant=\"filled\"\n//                             fullWidth\n                            \n//                           >\n//                             {type.map((option) => (\n//                               <option key={option.value} value={option.value}>\n//                                 {option.label}\n//                               </option>\n//                             ))}\n                            \n//                           </TextField>\n//                         </Grid>\n//                         <Grid item xs={2}>\n//                           <InputLabel htmlFor=\"description\" className={classes.inputLabel} >Description:</InputLabel>\n//                         </Grid>\n//                         <Grid item xs={10}>\n//                           <TextField\n//                             id=\"description\"\n//                             name=\"desciption\"\n//                             type=\"text\"\n//                             onChange={formik.handleChange}\n//                             values={formik.values.description}\n                           \n//                             style={{ marginRight: 1 }}\n//                             fullWidth\n//                             margin=\"normal\"\n//                             InputLabelProps={{\n//                               shrink: true,\n//                             }}\n//                             variant=\"outlined\"\n                          \n//                           />\n                          \n//                         </Grid>\n            \n//                         <Grid item xs={12} sm={12} md={4} lg={4}\n//                           style={{\n//                             textAlign: 'center'\n//                           }}\n//                         >\n//                           <Button>\n            \n//                           </Button>\n//                         </Grid>\n//                         <Link href='/holiday'>\n//                           <Button\n//                             variant=\"contained\"\n//                             color=\"primary\"\n//                             style={{ margin: '2 auto', display: \"flex\" }}\n//                             type=\"submit\"\n//                             startIcon={<SaveIcon />}\n//                           >\n//                             Save\n//                           </Button>\n//                         </Link>\n//                         <Link href='/'>\n//                           <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }} >Goto:Holidays</Button>\n//                           </Link>\n//                        {/*<Link href='/holiday/:id'>\n//                           <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }}>Switch To update</Button>\n//                         </Link>\n//                         <Link href='/holiday/:id'>\n//                           <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }}>Delete</Button>\n//                         </Link>\n//                         <Link href='/holiday/:id'>\n//                           <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }}>Switch to view</Button>\n//                         </Link> */}\n                        \n//                      </Grid>\n            \n//                </Box>\n//               </form>\n//            )}\n           \n \n// import React from \"react\";\n\n// import { useFormik } from \"formik\";\n// import * as Yup from \"yup\";\n\nexport default function App() {\n  const formik = useFormik({\n    initialValues: {\n      date:'',\n      location:'',\n      type:'',\n      description:'',\n      isComplete:false\n    },\n    validationSchema: Yup.object({\n      date:Yup.string().required(\"Required!\"),\n      location:Yup.string().required(\"this field is required\").nullable(),\n      type:Yup.string().required(\"this field is required\").nullable(),\n      description:Yup.string().required(\"this field is required\").nullable(),\n    }),\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n                <Box display=\"flex\" justifyContent=\"center\" border={1} {...defaultProps}  px={2} pt={5} pb={4}>\n                          <Grid container spacing={3}>\n                          \n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"Holiday Id\" margin=\"dense\" varient=\"outlined\" className={classes.inputLabel} >Holiday Id:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                              name=\"HolidayId\"\n                                id=\"outlined-full-width\"\n                                value=\"#\"\n                                style={{ margin: 1 }}\n                              \n                                fullWidth\n                                margin=\"normal\"\n                                InputLabelProps={{\n                                  shrink: true,\n                                }}\n                                variant=\"outlined\"\n                              />\n                            </Grid>\n                \n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"Date\" className={classes.inputLabel} >Date:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                             <TextField\n                              id=\"date\"\n                              name=\"date\"\n                              type=\"date\"\n                              onChange={formik.handleChange}\n                               value={formik.values.date}\n                              \n                              style={{ margin: 1 }}\n                              format=\"MM/dd/yyyy\"\n                              fullWidth\n                              margin=\"normal\"\n                              InputLabelProps={{\n                                shrink: true,\n                              }}\n                              variant=\"outlined\"\n                            />\n                            {formik.errors.date && formik.touched.date && (\n                              <p>{formik.errors.date}</p>\n                            )}\n                           </Grid>\n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"location\" className={classes.inputLabel} >Location:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                                id=\"location\"\n                                name=\"location\"\n                                type=\"text\"\n                               onChange={formik.handleChange}\n                               value={formik.values.location}\n                                select\n                             \n                                SelectProps={{\n                                  native: true,\n                                }}\n                                style={{ marginRight: 1 }}\n                                variant=\"filled\"\n                                fullWidth\n                                \n                              >\n                                {location.map((option) => (\n                                  <option key={option.value} value={option.value}>\n                                    {option.label}\n                                  </option>\n                                ))}\n                              \n                              </TextField><br></br>\n                              {formik.errors.location && formik.touched.location && (\n                                <p>{formik.errors.location}</p>\n                              )}\n                            </Grid>\n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"type\" className={classes.inputLabel} >Holiday Type:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                                id=\"type\"\n                                name=\"type\"\n                                type=\"text\"\n                               onChange={formik.handleChange}\n                               value={formik.values.type}\n                                select\n                                style={{ marginRight: 1 }}\n                             \n                                SelectProps={{\n                                  native: true,\n                                }}\n                                variant=\"filled\"\n                                fullWidth\n                                \n                              >\n                                {type.map((option) => (\n                                  <option key={option.value} value={option.value}>\n                                    {option.label}\n                                  </option>\n                                ))}\n                                \n                              </TextField>\n                              {formik.errors.type && formik.touched.type&& (\n                                <p>{formik.errors.type}</p>\n                              )}\n                            </Grid>\n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"description\" className={classes.inputLabel} >Description:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                                id=\"description\"\n                                name=\"desciption\"\n                                type=\"text\"\n                                onChange={formik.handleChange}\n                                values={formik.values.description}\n                               \n                                style={{ marginRight: 1 }}\n                                fullWidth\n                                margin=\"normal\"\n                                InputLabelProps={{\n                                  shrink: true,\n                                }}\n                                variant=\"outlined\"\n                              \n                              />\n                              {formik.errors.description && formik.touched.description && (\n                                <p>{formik.errors.description}</p>\n                              )}\n                            </Grid>\n                \n                            <Grid item xs={12} sm={12} md={4} lg={4}\n                              style={{\n                                textAlign: 'center'\n                              }}\n                            >\n                              <Button>\n                \n                              </Button>\n                            </Grid>\n                            <Link href='/holiday'>\n                              <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                style={{ margin: '2 auto', display: \"flex\" }}\n                                type=\"submit\"\n                                startIcon={<SaveIcon />}\n                              >\n                                Save\n                              </Button>\n                            </Link>\n                            <Link href='/'>\n                              <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }} >Goto:Holidays</Button>\n                              </Link>\n                           {/*<Link href='/holiday/:id'>\n                              <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }}>Switch To update</Button>\n                            </Link>\n                            <Link href='/holiday/:id'>\n                              <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }}>Delete</Button>\n                            </Link>\n                            <Link href='/holiday/:id'>\n                              <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }}>Switch to view</Button>\n                            </Link> */}\n                            \n                         </Grid>\n                \n                   </Box>\n                  </form>\n               )}\n    // <div className=\"App\">\n    //   <form onSubmit={formik.handleSubmit}>\n    // //     <div>\n    // //       <label>Full Name</label>\n    // //       <input\n    //         type=\"text\"\n    //         name=\"full_name\"\n    //         value={formik.values.full_name}\n    //         onChange={formik.handleChange}\n    //       />\n    //       {formik.errors.full_name && formik.touched.full_name && (\n    //         <p>{formik.errors.full_name}</p>\n    //       )}\n    //     </div>\n    //     <div>\n    //       <label>Email</label>\n    //       <input\n    //         type=\"email\"\n    //         name=\"email\"\n    //         value={formik.values.email}\n    //         onChange={formik.handleChange}\n    //       />\n    //       {formik.errors.email && formik.touched.email && (\n    //         <p>{formik.errors.email}</p>\n    //       )}\n    //     </div>\n    //     <div>\n    //       <label>Password</label>\n    //       <input\n    //         type=\"password\"\n    //         name=\"password\"\n    //         value={formik.values.password}\n    //         onChange={formik.handleChange}\n    //       />\n    //       {formik.errors.password && formik.touched.password && (\n    //         <p>{formik.errors.password}</p>\n    //       )}\n    //     </div>\n    //     <div>\n    //       <label>Confirm Password</label>\n    //       <input\n    //         type=\"password\"\n    //         name=\"confirm_password\"\n    //         value={formik.values.confirm_password}\n    //         onChange={formik.handleChange}\n    //       />\n    //       {formik.errors.confirm_password &&\n    //         formik.touched.confirm_password && (\n    //           <p>{formik.errors.confirm_password}</p>\n    //         )}\n    //     </div>\n    //     <div>\n    //       <button type=\"submit\">Submit</button>\n    //     </div>\n    //   </form>\n    // </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}