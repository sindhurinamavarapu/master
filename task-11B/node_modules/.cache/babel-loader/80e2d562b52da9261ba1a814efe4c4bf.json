{"ast":null,"code":"var _jsxFileName = \"/Users/sindhurin/development/quadacademy/task-11B/src/component/HolidayPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport moment from 'moment';\nimport { useParams } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { makeStyles } from '@material-ui/core';\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save'; // import DeleteIcon from '@material-ui/icons/Delete';\n\nimport Link from \"@material-ui/core/Link\";\nimport { addTodo, readTodo, setHolidays } from '../slice/holidaySlice'; //import {setForID,setHolidays} from '../slice/holidaySlice';\n\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\"; // import moment from \"moment\";\n\nimport { holidayListSliceState, holidayListSliceId } from \"../slice/holidaySlice\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { formik } from '../component/formik';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  root: {\n    justifyContent: 'center',\n    pb: '3'\n  },\n  inputLabel: {\n    paddingLeft: '30%'\n  },\n  textField: {\n    margin: '7'\n  }\n}));\nconst type = [{\n  label: 'Select'\n}, {\n  label: 'Optional'\n}, {\n  label: 'Fixed'\n}];\nconst location = [{\n  label: 'Select'\n}, {\n  label: 'All Locations'\n}, {\n  label: 'Bettendorf,IA'\n}, {\n  label: 'India'\n}];\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  m: 1,\n  border: 1,\n  style: {\n    width: '65rem',\n    height: '35rem'\n  }\n};\n\nconst hType = code => {\n  let desc1 = \"Fixed\";\n\n  switch (code) {\n    case \"F\":\n      desc1 = \"Fixed\";\n      break;\n\n    case \"O\":\n      desc1 = \"Options\";\n      break;\n  }\n\n  return desc1;\n};\n\nconst location1 = code => {\n  let desc = \"All Locations\";\n\n  switch (code) {\n    case \"ALL\":\n      desc = \"All Locations\";\n      break;\n\n    case \"IND\":\n      desc = \"India\";\n      break;\n\n    case \"USA\":\n      desc = \"Bettendorf, IA\";\n      break;\n  }\n\n  return desc;\n};\n\nexport default function App() {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const holidays = useSelector(holidayListSliceState);\n  const holidaysListSliceId = useSelector(holidayListSliceId);\n  console.log(\"holidaysListSliceId\", holidaysListSliceId);\n  const [APIData, setAPIData] = useState([]);\n  useEffect(() => {\n    axios.get('/:actionType/:id').then(res => {\n      setAPIData(res.data);\n    });\n  }, []);\n  console.log(\"ApiData\", APIData, setAPIData); //const holidays =useSelector((state) => state.holidaySlice.holidays);\n  //console.log(\"holidayData\",holidayData);\n  //  const holidayData =useSelector(holidayListId);\n  //  console.log(\"holidayData\",holidayData);\n  //console.log(\"dataforId\",dataforId );\n\n  let {\n    id,\n    actionType\n  } = useParams();\n  useEffect(() => {\n    dispatch(readTodo(id));\n  }, [id]);\n  const formik = useFormik({\n    initialValues: {\n      id: \"\",\n      date: '',\n      location: '',\n      type: '',\n      description: '',\n      isComplete: false\n    },\n    validationSchema: Yup.object({\n      date: Yup.string().required(\"Required!\").nullable(),\n      location: Yup.string().required(\"Required!\").nullable(),\n      type: Yup.string().required(\"Required!\").nullable(),\n      description: Yup.string().required(\"Required!\").nullable()\n    }),\n    onSubmit: values => {\n      console.log(\"values\", values);\n      dispatch(addTodo(values)); // dispatch(readTodo(id));\n\n      console.log(\"formikvalues1234\", formik.values.date, formik.values.description, formik.values.id); //  moment((formik.values.date,'YYYY/mm/dd').format('mm/dd/YYYY')),\n      // hType(formik.values.type),\n      // location1(formik.values.location),\n      //  )\n      //dispatch(setForId(id));\n\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: APIData.map(data => {\n        /*#__PURE__*/\n        _jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          border: 1,\n          ...defaultProps,\n          px: 2,\n          pt: 5,\n          pb: 4,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"Holiday Id\",\n                margin: \"dense\",\n                varient: \"outlined\",\n                className: classes.inputLabel,\n                children: \"Holiday Id:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 10,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                name: \"HolidayId\",\n                id: \"outlined-full-width\",\n                placeholder: \"#\",\n                value: holidays.HolidayId,\n                onChange: formik.handleChange,\n                onBlur: formik.handleBlur,\n                style: {\n                  margin: 1\n                },\n                fullWidth: true,\n                margin: \"normal\",\n                InputLabelProps: {\n                  shrink: true\n                },\n                variant: \"outlined\",\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 31\n              }, this), formik.errors.HolidayId && formik.touched.HolidayId && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formik.errors.HolidayId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"Date\",\n                className: classes.inputLabel,\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 10,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                id: \"date\",\n                name: \"date\",\n                type: \"date\",\n                value: holidays.date,\n                onChange: formik.handleChange,\n                onBlur: formik.handleBlur,\n                style: {\n                  margin: 1\n                },\n                dateFormat: \"MM/DD/YYYY\",\n                fullWidth: true,\n                margin: \"normal\",\n                InputLabelProps: {\n                  shrink: true\n                },\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 30\n              }, this), formik.errors.date && formik.touched.date && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formik.errors.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"location\",\n                className: classes.inputLabel,\n                children: \"Location:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 10,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                id: \"location\",\n                name: \"location\",\n                type: \"text\",\n                value: location1(holidays.location),\n                onChange: formik.handleChange,\n                onBlur: formik.handleBlur,\n                select: true,\n                SelectProps: {\n                  native: true\n                },\n                style: {\n                  marginRight: 1\n                },\n                variant: \"filled\",\n                fullWidth: true,\n                children: location.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 35\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 43\n              }, this), formik.errors.location && formik.touched.location && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formik.errors.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"type\",\n                className: classes.inputLabel,\n                children: \"Holiday Type:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 10,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                id: \"type\",\n                name: \"type\",\n                type: \"text\",\n                value: hType(holidays.type),\n                onChange: formik.handleChange,\n                onBlur: formik.handleBlur,\n                select: true,\n                style: {\n                  marginRight: 1\n                },\n                SelectProps: {\n                  native: true\n                },\n                variant: \"filled\",\n                fullWidth: true,\n                children: type.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 35\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 31\n              }, this), formik.errors.type && formik.touched.type && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formik.errors.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"description\",\n                className: classes.inputLabel,\n                children: \"Description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 10,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                id: \"description\",\n                name: \"description\",\n                type: \"text\",\n                onChange: formik.handleChange,\n                onBlur: formik.handleBlur,\n                value: holidays.description,\n                style: {\n                  marginRight: 1\n                },\n                fullWidth: true,\n                margin: \"normal\",\n                InputLabelProps: {\n                  shrink: true\n                },\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 31\n              }, this), formik.errors.description && formik.touched.description && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formik.errors.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 12,\n              md: 4,\n              lg: 4,\n              style: {\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/create/\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                style: {\n                  margin: '2 auto',\n                  display: \"flex\"\n                },\n                type: \"submit\",\n                startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 44\n                }, this),\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 32\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"secondary\",\n                startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 47\n                }, this),\n                to: {\n                  pathname: \"/update/\"\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                style: {\n                  margin: '3 auto',\n                  display: \"flex\"\n                },\n                to: {\n                  pathname: \"/update/\"\n                },\n                children: \"Switch to view\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 35\n            }, this), \")\", /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                style: {\n                  margin: '3 auto',\n                  display: \"flex\"\n                },\n                children: \"Goto:Holidays\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/view/\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                style: {\n                  margin: '2 auto',\n                  display: \"flex\"\n                },\n                type: \"submit\",\n                startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 44\n                }, this),\n                children: \"Switch To Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/update/\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                style: {\n                  margin: '3 auto',\n                  display: \"flex\"\n                },\n                startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 42\n                }, this),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/update/\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                style: {\n                  margin: '3 auto',\n                  display: \"flex\"\n                },\n                children: \"Switch To View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+O1fyvxckEgJ4vQ3C1fQuqmfDbA=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector, useParams, useFormik];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sindhurin/development/quadacademy/task-11B/src/component/HolidayPage.js"],"names":["React","useEffect","useState","useFormik","moment","useParams","Yup","makeStyles","Grid","Box","TextField","InputLabel","Button","SaveIcon","Link","addTodo","readTodo","setHolidays","useDispatch","useSelector","holidayListSliceState","holidayListSliceId","DeleteIcon","formik","axios","useStyles","theme","button","margin","spacing","root","justifyContent","pb","inputLabel","paddingLeft","textField","type","label","location","defaultProps","bgcolor","m","border","style","width","height","hType","code","desc1","location1","desc","App","classes","dispatch","holidays","holidaysListSliceId","console","log","APIData","setAPIData","get","then","res","data","id","actionType","initialValues","date","description","isComplete","validationSchema","object","string","required","nullable","onSubmit","values","alert","JSON","stringify","handleSubmit","map","HolidayId","handleChange","handleBlur","shrink","errors","touched","native","marginRight","option","value","textAlign","display","pathname"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from \"react\";\nimport { useFormik} from \"formik\";\nimport moment from 'moment';\n import {useParams} from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { makeStyles } from '@material-ui/core';\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\n// import DeleteIcon from '@material-ui/icons/Delete';\nimport Link from \"@material-ui/core/Link\";\nimport {addTodo, readTodo, setHolidays} from '../slice/holidaySlice';\n//import {setForID,setHolidays} from '../slice/holidaySlice';\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\n// import moment from \"moment\";\nimport { holidayListSliceState,holidayListSliceId} from \"../slice/holidaySlice\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {formik} from '../component/formik';\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    justifyContent: 'center',\n    pb: '3'\n  },\n  inputLabel: {\n    paddingLeft: '30%',    \n  },\n  textField: {\n    margin: '7'\n  }\n}))\nconst type = [\n  {\n    label:'Select',\n  },\n  {\n\n    label: 'Optional',\n  },\n  {\n\n    label: 'Fixed',\n  },\n]\nconst location = [\n  {\n    label:'Select',\n  },\n  {\n    label: 'All Locations'\n  },\n  {\n    label: 'Bettendorf,IA'\n  },\n  {\n    label: 'India'\n  }\n]\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  m: 1,\n  border: 1,\n  style: { width: '65rem', height: '35rem' },\n};\nconst hType =(code) =>{\n  let desc1=\"Fixed\"\n      \n  switch (code) {\n    case \"F\":\n        desc1=\"Fixed\"\n        break;\n     case \"O\":\n         desc1 =\"Options\"\n         break;     \n    }\n  return desc1;\n}\n\nconst location1 = (code) =>{\n  let desc=  \"All Locations\";\n\n  switch (code) {\n     case \"ALL\":\n         desc =\"All Locations\"\n         break;\n      case \"IND\":\n          desc =\"India\"\n          break;  \n      case \"USA\":\n         desc =\"Bettendorf, IA\"\n         break;\n       }\n  return desc;\n}\n\nexport default function App() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n   const holidays = useSelector(holidayListSliceState);\n   const holidaysListSliceId=useSelector(holidayListSliceId);\n    console.log(\"holidaysListSliceId\",holidaysListSliceId);\n    const[APIData,setAPIData] =useState([]);\n     useEffect(()=>{\n        axios.get('/:actionType/:id')\n        .then((res)=>{\n          setAPIData(res.data)\n        })\n     },[])\n  console.log(\"ApiData\",APIData,setAPIData);\n    //const holidays =useSelector((state) => state.holidaySlice.holidays);\n  //console.log(\"holidayData\",holidayData);\n//  const holidayData =useSelector(holidayListId);\n//  console.log(\"holidayData\",holidayData);\n  //console.log(\"dataforId\",dataforId );\n    let  {id ,actionType}= useParams();\n    \n\n \n    useEffect(()=>{\n    dispatch(readTodo(id))\n  },[id])\n \n  \n  const formik = useFormik({\n   initialValues: {\n     id:\"\",\n      date:'',\n      location:'',\n      type:'',\n      description:'',\n      isComplete:false\n     \n    },\n   validationSchema: Yup.object({\n      date:Yup.string().required(\"Required!\").nullable(),\n      location:Yup.string().required(\"Required!\").nullable(),\n      type:Yup.string().required(\"Required!\").nullable(),\n      description:Yup.string().required(\"Required!\").nullable(),\n    }),\n   \n    onSubmit:values => {\n    \n      console.log(\"values\",values);\n         dispatch(addTodo(values));\n          // dispatch(readTodo(id));\n        console.log(\"formikvalues1234\",formik.values.date,\n        formik.values.description,formik.values.id)\n                //  moment((formik.values.date,'YYYY/mm/dd').format('mm/dd/YYYY')),\n                // hType(formik.values.type),\n                // location1(formik.values.location),\n        //  )\n         //dispatch(setForId(id));\n     \n       alert(JSON.stringify(values, null, 2));\n      \n     }})\n    \n  return (\n    <div className=\"App\">\n   \n         <form  onSubmit={formik.handleSubmit} >\n            {APIData.map((data)=>{\n                <Box display=\"flex\" justifyContent=\"center\" border={1} {...defaultProps}  px={2} pt={5} pb={4}>\n                          <Grid container spacing={3}>\n                          \n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"Holiday Id\" margin=\"dense\" varient=\"outlined\" className={classes.inputLabel} >Holiday Id:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                              name=\"HolidayId\"\n                                id=\"outlined-full-width\"\n                                placeholder=\"#\"\n                               value={holidays.HolidayId}\n                               onChange={formik.handleChange}\n                               onBlur={formik.handleBlur}\n                                style={{ margin: 1 }}\n                              \n                                fullWidth\n                                margin=\"normal\"\n                                InputLabelProps={{\n                                  shrink: true,\n                                }}\n                                variant=\"outlined\"\n                                disabled\n                              />\n                              {formik.errors.HolidayId && formik.touched.HolidayId && (\n                                <p>{formik.errors.HolidayId}</p>\n                              )}\n                            </Grid>\n                \n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"Date\" className={classes.inputLabel} >Date:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                             <TextField\n                              id=\"date\"\n                              name=\"date\"\n                              type=\"date\"\n                              \n                              value={holidays.date}\n                              onChange={formik.handleChange}\n                              onBlur={formik.handleBlur}\n                             style={{ margin: 1 }}\n                              dateFormat=\"MM/DD/YYYY\"\n                              fullWidth\n                              margin=\"normal\"\n                              InputLabelProps={{\n                                shrink: true,\n                              }}\n                              variant=\"outlined\"\n                            />\n                            \n                            {formik.errors.date && formik.touched.date && (\n                              <p>{formik.errors.date}</p>\n                            )}\n                           </Grid>\n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"location\" className={classes.inputLabel} >Location:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                                id=\"location\"\n                                name=\"location\"\n                                type=\"text\"\n                              \n                                 value= {location1(holidays.location)}\n                                 onChange={formik.handleChange}\n                                 onBlur={formik.handleBlur}\n                                select\n                             \n                                SelectProps={{\n                                  native: true,\n                                }}\n                                style={{ marginRight: 1 }}\n                                variant=\"filled\"\n                                fullWidth\n                                \n                              >\n                                {location.map((option) => (\n                                  <option key={option.value} value={option.value}>\n                                    {option.label}\n                                  </option>\n                                ))}\n                              \n                              </TextField><br></br>\n                              {formik.errors.location && formik.touched.location && (\n                                <p>{formik.errors.location}</p>\n                              )}\n                            </Grid>\n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"type\" className={classes.inputLabel} >Holiday Type:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                                id=\"type\"\n                                name=\"type\"\n                                type=\"text\"\n                               \n                              value={hType(holidays.type)}\n                              onChange={formik.handleChange}\n                              onBlur={formik.handleBlur}\n                                select\n                                style={{ marginRight: 1 }}\n                             \n                                SelectProps={{\n                                  native: true,\n                                }}\n                                variant=\"filled\"\n                                fullWidth\n                                \n                              >\n                                {type.map((option) => (\n                                  <option key={option.value} value={option.value}>\n                                    {option.label}\n                                  </option>\n                                ))}\n                                \n                              </TextField>\n                              {formik.errors.type && formik.touched.type&& (\n                                <p>{formik.errors.type}</p>\n                              )}\n                            </Grid>\n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"description\" className={classes.inputLabel} >Description:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                                id=\"description\"\n                                name=\"description\"\n                                type=\"text\"\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                 value={holidays.description}\n                              \n                                style={{ marginRight: 1 }}\n                                fullWidth\n                                margin=\"normal\"\n                                InputLabelProps={{\n                                  shrink: true,\n                                }}\n                                variant=\"outlined\"\n                              \n                              />\n                              {formik.errors.description && formik.touched.description && (\n                                <p>{formik.errors.description}</p>\n                              )}\n                            </Grid>\n                \n                            <Grid item xs={12} sm={12} md={4} lg={4}\n                              style={{\n                                textAlign: 'center'\n                              }}\n                            >\n                              <Button>\n                \n                              </Button>\n                            </Grid>\n                             <Link href=\"/create/\">\n                             \n                               <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                style={{ margin: '2 auto', display: \"flex\" }}\n                                type=\"submit\"\n                                startIcon={<SaveIcon />}\n                               \n                              >\n                                Save\n                              </Button>\n                              </Link>\n                              \n                              <Link>\n                            \n                                <Button\n                                   variant=\"contained\"\n                                   color=\"secondary\"\n                                   startIcon={<DeleteIcon />}\n                                   to={{pathname:\"/update/\"}}\n                                     >\n                                    Delete\n                                  </Button>\n                                  </Link>\n                              \n                                  <Link>\n                                   <Button variant=\"contained\" \n                                  color=\"primary\" \n                                  style={{ margin: '3 auto', display: \"flex\"}}\n                                  to={{pathname:\"/update/\"}}\n                                  >Switch to view\n                                  </Button>\n                                  </Link>\n\n                              )\n                              \n\n                             <Link href='/'>\n                              <Button variant=\"contained\" \n                              style={{ margin: '3 auto', display: \"flex\" }}\n                         \n                              >Goto:Holidays\n                              </Button>\n                              </Link>\n                              \n                              <Link href=\"/view/\">\n                          \n                              <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                style={{ margin: '2 auto', display: \"flex\" }}\n                                type=\"submit\"\n                                startIcon={<SaveIcon />}\n                               \n                              >\n                              Switch To Update\n                              </Button>\n                      \n                              </Link>\n                            \n                           \n                              <Link href=\"/update/\">\n                             \n                              <Button variant=\"contained\" \n                              style={{ margin: '3 auto', display: \"flex\" }}\n                              startIcon={<DeleteIcon />}\n                         \n                              >Delete\n                              </Button>\n                            \n                              </Link>\n                              <Link href=\"/update/\">\n                              <Button variant=\"contained\" \n                              style={{ margin: '3 auto', display: \"flex\" }}\n                              \n                         \n                              >Switch To View\n                              </Button>\n                            </Link>\n                            \n                                \n                            \n                        \n                          \n                         </Grid>\n                \n                   </Box>\n                  })}\n                  </form>\n              \n                        \n                     </div>\n               \n      \n  )}\n"]},"metadata":{},"sourceType":"module"}