{"ast":null,"code":"// import React ,{useState,useEffect}from 'react';\n// import {useDispatch} from 'react-redux';\n// import { addTodo, holidayListSliceState } from \"../slice/holidaySlice\";\n// import { useFormik,onSubmit} from 'formik';\n// import * as yup from 'yup';\n// import { makeStyles } from '@material-ui/core';\n// import Grid from \"@material-ui/core/Grid\";\n// import Container from '@material-ui/core/Container';\n// import Box from \"@material-ui/core/Box\";\n// import TextField from '@material-ui/core/TextField';\n// import InputLabel from '@material-ui/core/InputLabel';\n// import Button from '@material-ui/core/Button';\n// import SaveIcon from '@material-ui/icons/Save';\n// import Link from \"@material-ui/core/Link\";\n// import { useSelector } from \"react-redux\";\n// const useStyles = makeStyles((theme) => ({\n//   button: {\n//     margin: theme.spacing(1),\n//   },\n//   root: {\n//     justifyContent: 'center',\n//     pb: '3'\n//   },\n//   inputLabel: {\n//     paddingLeft: '30%',    \n//   },\n//   textField: {\n//     margin: '7'\n//   }\n// }))\n// const type = [\n//   {\n//     label:'Select',\n//   },\n//   {\n//     label: 'Optional',\n//   },\n//   {\n//     label: 'Fixed',\n//   },\n// ]\n// const Location = [\n//   {\n//     label:'Select',\n//   },\n//   {\n//     label: 'All Locations'\n//   },\n//   {\n//     label: 'Bettendorf,IA'\n//   },\n//   {\n//     label: 'India'\n//   }\n// ]\n// const defaultProps = {\n//   bgcolor: 'background.paper',\n//   m: 1,\n//   border: 1,\n//   style: { width: '65rem', height: '35rem' },\n// };\n// const validate =values =>{\n//   const errors ={};\n//   if(!values.date){\n//     errors.date='required';\n//   }else if(values.date.length >10){\n//     errors.date ='must be 10 characters or less'\n//   }\n//   if(!values.description){\n//     errors.description='required';\n//   }else if(values.description.length >6){\n//     errors.description ='must be 15 characters or less'\n//   }\n//   if(!values.type){\n//     errors.type='required';\n//   }else if(values.type.length >15){\n//     errors.type ='must be 15 characters or less'\n//   }\n//   if(!values.location){\n//     errors.location='required';\n//   }else if(values.location.length >15){\n//     errors.location ='must be 15 characters or less'\n//   }\n//   return errors;\n// }\n// const Form = () => {\n//   const classes = useStyles();\n//    const formik =useFormik({\n//     initialValues : {\n//       date:'',\n//     location:'',\n//     type:'',\n//     description:'',\n//     isComplete:false\n//     },\n//     validate:Validation => {\n//     const message=\"this field is required\"\n//     return yup.object().shape({\n//            date:yup.string().required(\"message\").nullable(),\n//            location:yup.string().required(\"message\").nullable(),\n//            type:yup.string().required(\"message\").nullable(),\n//            description:yup.string().required(\"message\").nullable(),\n//          })\n//    onSubmit:values =() =>{\n//       console.log(values);\n//       alert(JSON.stringify(values, null, 2));\n//     }\n//   }})\n//    return (\n//     <form OnSubmit ={formik.handleSubmit}>\n//         <Box display=\"flex\" justifyContent=\"center\" border={1} {...defaultProps}  px={2} pt={5} pb={4}>\n//           <Grid container spacing={3}>\n//             <Grid item xs={2}>\n//               <InputLabel htmlFor=\"Holiday Id\" margin=\"dense\" varient=\"outlined\" className={classes.inputLabel} >Holiday Id:</InputLabel>\n//             </Grid>\n//             <Grid item xs={10}>\n//               <TextField\n//               name=\"HolidayId\"\n//                 id=\"outlined-full-width\"\n//                 value=\"#\"\n//                 style={{ margin: 1 }}\n//                 fullWidth\n//                 margin=\"normal\"\n//                 InputLabelProps={{\n//                   shrink: true,\n//                 }}\n//                 variant=\"outlined\"\n//               />\n//             </Grid>\n//             <Grid item xs={2}>\n//               <InputLabel htmlFor=\"Date\" className={classes.inputLabel} >Date:</InputLabel>\n//             </Grid>\n//             <Grid item xs={10}>\n//              <TextField\n//               id=\"date\"\n//               name=\"date\"\n//               type=\"date\"\n//               onChange={formik.handleChange}\n//               value={formik.values.date}\n//               style={{ margin: 1 }}\n//               format=\"MM/dd/yyyy\"\n//               fullWidth\n//               margin=\"normal\"\n//               InputLabelProps={{\n//                 shrink: true,\n//               }}\n//               variant=\"outlined\"\n//             />\n//             {formik.errors.date ? <div>{formik.errors.date}</div> : null}\n//             </Grid>\n//             <Grid item xs={2}>\n//               <InputLabel htmlFor=\"location\" className={classes.inputLabel} >Location:</InputLabel>\n//             </Grid>\n//             <Grid item xs={10}>\n//               <TextField\n//                 id=\"location\"\n//                 name=\"location\"\n//                 type=\"text\"\n//                 value={formik.values.location}\n//                 select\n//                 onChange={formik.handleChange}\n//                 SelectProps={{\n//                   native: true,\n//                 }}\n//                 style={{ marginRight: 1 }}\n//                 variant=\"filled\"\n//                 fullWidth\n//               >\n//                 {Location.map((option) => (\n//                   <option key={option.value} value={option.value}>\n//                     {option.label}\n//                   </option>\n//                 ))}\n//                 {formik.errors.location ? <div>{formik.errors.location}</div> : null}\n//               </TextField><br></br>\n//             </Grid>\n//             <Grid item xs={2}>\n//               <InputLabel htmlFor=\"type\" className={classes.inputLabel} >Holiday Type:</InputLabel>\n//             </Grid>\n//             <Grid item xs={10}>\n//               <TextField\n//                 id=\"type\"\n//                 name=\"type\"\n//                 type=\"text\"\n//                 value={formik.values.type}\n//                 select\n//                 style={{ marginRight: 1 }}\n//                 onChange={formik.handleChange}\n//                 SelectProps={{\n//                   native: true,\n//                 }}\n//                 variant=\"filled\"\n//                 fullWidth\n//               >\n//                 {type.map((option) => (\n//                   <option key={option.value} value={option.value}>\n//                     {option.label}\n//                   </option>\n//                 ))}\n//                 {formik.errors.type ? <div>{formik.errors.type}</div> : null}\n//               </TextField>\n//             </Grid>\n//             <Grid item xs={2}>\n//               <InputLabel htmlFor=\"description\" className={classes.inputLabel} >Description:</InputLabel>\n//             </Grid>\n//             <Grid item xs={10}>\n//               <TextField\n//                 id=\"description\"\n//                 name=\"desciption\"\n//                 type=\"text\"\n//                 value={formik.values.description}\n//                 onChange={formik.handleChange}\n//                 style={{ marginRight: 1 }}\n//                 fullWidth\n//                 margin=\"normal\"\n//                 InputLabelProps={{\n//                   shrink: true,\n//                 }}\n//                 variant=\"outlined\"\n//               />\n//               {formik.errors.description? <div>{formik.errors.description}</div> : null}\n//             </Grid>\n//             <Grid item xs={12} sm={12} md={4} lg={4}\n//               style={{\n//                 textAlign: 'center'\n//               }}\n//             >\n//               <Button>\n//               </Button>\n//             </Grid>\n//             <Link href='/holiday'>\n//               <Button\n//                 variant=\"contained\"\n//                 color=\"primary\"\n//                 style={{ margin: '2 auto', display: \"flex\" }}\n//                 type=\"submit\"\n//                 startIcon={<SaveIcon />}\n//               >\n//                 Save\n//               </Button>\n//             </Link>\n//             <Link href='/'>\n//               <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }} >Goto:Holidays</Button>\n//               </Link>\n//            {/*<Link href='/holiday/:id'>\n//               <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }}>Switch To update</Button>\n//             </Link>\n//             <Link href='/holiday/:id'>\n//               <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }}>Delete</Button>\n//             </Link>\n//             <Link href='/holiday/:id'>\n//               <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }}>Switch to view</Button>\n//             </Link> */}\n//           </Grid>\n//         </Box>\n//      </form>\n// )}\n// export default Form;","map":{"version":3,"sources":["/Users/sindhurin/development/quadacademy/task-11B/src/component/HolidayPage.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAIA;AAIA","sourcesContent":["// import React ,{useState,useEffect}from 'react';\n// import {useDispatch} from 'react-redux';\n// import { addTodo, holidayListSliceState } from \"../slice/holidaySlice\";\n// import { useFormik,onSubmit} from 'formik';\n// import * as yup from 'yup';\n// import { makeStyles } from '@material-ui/core';\n// import Grid from \"@material-ui/core/Grid\";\n// import Container from '@material-ui/core/Container';\n// import Box from \"@material-ui/core/Box\";\n// import TextField from '@material-ui/core/TextField';\n// import InputLabel from '@material-ui/core/InputLabel';\n// import Button from '@material-ui/core/Button';\n// import SaveIcon from '@material-ui/icons/Save';\n// import Link from \"@material-ui/core/Link\";\n// import { useSelector } from \"react-redux\";\n\n// const useStyles = makeStyles((theme) => ({\n//   button: {\n//     margin: theme.spacing(1),\n//   },\n//   root: {\n//     justifyContent: 'center',\n//     pb: '3'\n//   },\n//   inputLabel: {\n//     paddingLeft: '30%',    \n//   },\n//   textField: {\n//     margin: '7'\n//   }\n// }))\n// const type = [\n//   {\n//     label:'Select',\n//   },\n//   {\n\n//     label: 'Optional',\n//   },\n//   {\n\n//     label: 'Fixed',\n//   },\n// ]\n// const Location = [\n//   {\n//     label:'Select',\n//   },\n//   {\n//     label: 'All Locations'\n//   },\n//   {\n//     label: 'Bettendorf,IA'\n//   },\n//   {\n//     label: 'India'\n//   }\n// ]\n// const defaultProps = {\n//   bgcolor: 'background.paper',\n//   m: 1,\n//   border: 1,\n//   style: { width: '65rem', height: '35rem' },\n// };\n\n// const validate =values =>{\n//   const errors ={};\n//   if(!values.date){\n//     errors.date='required';\n//   }else if(values.date.length >10){\n//     errors.date ='must be 10 characters or less'\n//   }\n//   if(!values.description){\n//     errors.description='required';\n//   }else if(values.description.length >6){\n//     errors.description ='must be 15 characters or less'\n//   }\n//   if(!values.type){\n//     errors.type='required';\n//   }else if(values.type.length >15){\n//     errors.type ='must be 15 characters or less'\n//   }\n//   if(!values.location){\n//     errors.location='required';\n//   }else if(values.location.length >15){\n//     errors.location ='must be 15 characters or less'\n//   }\n//   return errors;\n// }\n\n// const Form = () => {\n//   const classes = useStyles();\n//    const formik =useFormik({\n//     initialValues : {\n//       date:'',\n//     location:'',\n//     type:'',\n//     description:'',\n//     isComplete:false\n//     },\n//     validate:Validation => {\n//     const message=\"this field is required\"\n//     return yup.object().shape({\n//            date:yup.string().required(\"message\").nullable(),\n//            location:yup.string().required(\"message\").nullable(),\n//            type:yup.string().required(\"message\").nullable(),\n//            description:yup.string().required(\"message\").nullable(),\n//          })\n//    onSubmit:values =() =>{\n//       console.log(values);\n//       alert(JSON.stringify(values, null, 2));\n//     }\n  \n//   }})\n  \n\n  \n   \n//    return (\n//     <form OnSubmit ={formik.handleSubmit}>\n//         <Box display=\"flex\" justifyContent=\"center\" border={1} {...defaultProps}  px={2} pt={5} pb={4}>\n//           <Grid container spacing={3}>\n          \n//             <Grid item xs={2}>\n//               <InputLabel htmlFor=\"Holiday Id\" margin=\"dense\" varient=\"outlined\" className={classes.inputLabel} >Holiday Id:</InputLabel>\n//             </Grid>\n//             <Grid item xs={10}>\n//               <TextField\n//               name=\"HolidayId\"\n//                 id=\"outlined-full-width\"\n//                 value=\"#\"\n//                 style={{ margin: 1 }}\n               \n//                 fullWidth\n//                 margin=\"normal\"\n//                 InputLabelProps={{\n//                   shrink: true,\n//                 }}\n//                 variant=\"outlined\"\n//               />\n//             </Grid>\n\n//             <Grid item xs={2}>\n//               <InputLabel htmlFor=\"Date\" className={classes.inputLabel} >Date:</InputLabel>\n//             </Grid>\n//             <Grid item xs={10}>\n//              <TextField\n//               id=\"date\"\n//               name=\"date\"\n//               type=\"date\"\n//               onChange={formik.handleChange}\n//               value={formik.values.date}\n//               style={{ margin: 1 }}\n//               format=\"MM/dd/yyyy\"\n//               fullWidth\n//               margin=\"normal\"\n//               InputLabelProps={{\n//                 shrink: true,\n//               }}\n//               variant=\"outlined\"\n//             />\n//             {formik.errors.date ? <div>{formik.errors.date}</div> : null}\n           \n//             </Grid>\n//             <Grid item xs={2}>\n//               <InputLabel htmlFor=\"location\" className={classes.inputLabel} >Location:</InputLabel>\n//             </Grid>\n//             <Grid item xs={10}>\n//               <TextField\n//                 id=\"location\"\n//                 name=\"location\"\n//                 type=\"text\"\n//                 value={formik.values.location}\n//                 select\n//                 onChange={formik.handleChange}\n//                 SelectProps={{\n//                   native: true,\n//                 }}\n//                 style={{ marginRight: 1 }}\n//                 variant=\"filled\"\n//                 fullWidth\n                \n//               >\n//                 {Location.map((option) => (\n//                   <option key={option.value} value={option.value}>\n//                     {option.label}\n//                   </option>\n//                 ))}\n//                 {formik.errors.location ? <div>{formik.errors.location}</div> : null}\n//               </TextField><br></br>\n//             </Grid>\n//             <Grid item xs={2}>\n//               <InputLabel htmlFor=\"type\" className={classes.inputLabel} >Holiday Type:</InputLabel>\n//             </Grid>\n//             <Grid item xs={10}>\n//               <TextField\n//                 id=\"type\"\n//                 name=\"type\"\n//                 type=\"text\"\n//                 value={formik.values.type}\n//                 select\n//                 style={{ marginRight: 1 }}\n//                 onChange={formik.handleChange}\n//                 SelectProps={{\n//                   native: true,\n//                 }}\n//                 variant=\"filled\"\n//                 fullWidth\n                \n//               >\n//                 {type.map((option) => (\n//                   <option key={option.value} value={option.value}>\n//                     {option.label}\n//                   </option>\n//                 ))}\n//                 {formik.errors.type ? <div>{formik.errors.type}</div> : null}\n//               </TextField>\n//             </Grid>\n//             <Grid item xs={2}>\n//               <InputLabel htmlFor=\"description\" className={classes.inputLabel} >Description:</InputLabel>\n//             </Grid>\n//             <Grid item xs={10}>\n//               <TextField\n//                 id=\"description\"\n//                 name=\"desciption\"\n//                 type=\"text\"\n//                 value={formik.values.description}\n//                 onChange={formik.handleChange}\n//                 style={{ marginRight: 1 }}\n//                 fullWidth\n//                 margin=\"normal\"\n//                 InputLabelProps={{\n//                   shrink: true,\n//                 }}\n//                 variant=\"outlined\"\n              \n//               />\n//               {formik.errors.description? <div>{formik.errors.description}</div> : null}\n//             </Grid>\n\n//             <Grid item xs={12} sm={12} md={4} lg={4}\n//               style={{\n//                 textAlign: 'center'\n//               }}\n//             >\n//               <Button>\n\n//               </Button>\n//             </Grid>\n//             <Link href='/holiday'>\n//               <Button\n//                 variant=\"contained\"\n//                 color=\"primary\"\n//                 style={{ margin: '2 auto', display: \"flex\" }}\n                \n//                 type=\"submit\"\n//                 startIcon={<SaveIcon />}\n//               >\n//                 Save\n//               </Button>\n//             </Link>\n//             <Link href='/'>\n//               <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }} >Goto:Holidays</Button>\n//               </Link>\n//            {/*<Link href='/holiday/:id'>\n//               <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }}>Switch To update</Button>\n//             </Link>\n//             <Link href='/holiday/:id'>\n//               <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }}>Delete</Button>\n//             </Link>\n//             <Link href='/holiday/:id'>\n//               <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }}>Switch to view</Button>\n//             </Link> */}\n            \n//           </Grid>\n\n//         </Box>\n     \n//      </form>\n     \n\n\n// )}\n  \n\n   \n// export default Form;\n\n\n"]},"metadata":{},"sourceType":"module"}