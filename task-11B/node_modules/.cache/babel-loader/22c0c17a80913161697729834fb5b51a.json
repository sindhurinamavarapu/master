{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport moment from \"moment\"; //slice\n\nconst holidaySlice = createSlice({\n  name: \"holidayList\",\n  initialState: {\n    holidayData: [],\n    holiday: {}\n  },\n  reducers: {\n    getHolidays(state, action) {\n      state.holidayData = action.payload;\n    },\n\n    addTodo(state, action) {\n      // state.holidayData = action.payload;\n      state.push(action.payload);\n    },\n\n    readTodo(state, action) {\n      state.holidayData = action.payload;\n    },\n\n    updateTodo(state, action) {\n      // state.holidayData =action.payload;\n      const {\n        date,\n        description,\n        type,\n        location\n      } = action.payload;\n      const existingUser = state.find(user => user.id === id);\n\n      if (existinguser) {\n        existingUser.date = date;\n        existingUser.description = description;\n        existingUser.type = type;\n        existingUser.location = location;\n      }\n    },\n\n    deleteTodo(state, action) {\n      state.holidayData = action.payload;\n    }\n\n  }\n});\nexport const {\n  getHolidays\n} = holidaySlice.actions; //Actions\n\nexport const fetchUsers = year => async dispatch => {\n  if (typeof year === \"undefined\") {\n    year = moment().year();\n  }\n\n  axios.get(`http://localhost:4000/holiday/year/${year}`).then(res => {\n    dispatch(getHolidays(res.data));\n  });\n}; //post \n\nexport const addTodo = () => async dispatch => {\n  axios.post(`http://localhost:4000/holiday`).then(res => {\n    dispatch(addTodo(res.data));\n  });\n}; //read the data\n\nexport const readTodo = id => async dispatch => {\n  axios.get(`http://localhost:4000/holiday/:${id}`).then(res => {\n    dispatch(readTodo(res.data));\n  });\n}; //update\n\nexport const updateTodo = id => async dispatch => {\n  axios.put(`http://localhost:4000/holiday/:${id}`).then(res => {\n    dispatch(updateTodo(res.data));\n  });\n}; //delete\n\nexport const deleteTodo = id => async dispatch => {\n  axios.delete(`http://localhost:4000/holiday/;${id}`).then(res => {\n    dispatch(deleteTodo(res.data));\n  });\n};\nexport const holidayListSliceState = state => state.holidaySlice.holidayData;\nexport default holidaySlice.reducer;","map":{"version":3,"sources":["/Users/sindhurin/development/quadacademy/task-11B/src/slice/holidaySlice.js"],"names":["createSlice","axios","moment","holidaySlice","name","initialState","holidayData","holiday","reducers","getHolidays","state","action","payload","addTodo","push","readTodo","updateTodo","date","description","type","location","existingUser","find","user","id","existinguser","deleteTodo","actions","fetchUsers","year","dispatch","get","then","res","data","post","put","delete","holidayListSliceState","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\n//slice\nconst holidaySlice = createSlice({\n    name: \"holidayList\",\n    initialState: {\n        holidayData: [],\n        holiday:{},\n        \n    },\n    reducers: {\n        getHolidays(state, action) {\n            state.holidayData = action.payload;\n        },\n        addTodo(state,action) {\n            // state.holidayData = action.payload;\n            state.push(action.payload);\n        },\n        readTodo(state,action){\n            state.holidayData =action.payload;\n        },\n        updateTodo(state,action){\n            // state.holidayData =action.payload;\n            const {date,description,type,location} = action.payload;\n            const existingUser =state.find((user) =>user.id === id);\n            if(existinguser) {\n                existingUser.date =date;\n                existingUser.description=description;\n                existingUser.type=type;\n                existingUser.location=location;\n            }\n        },\n        deleteTodo(state,action){\n            state.holidayData =action.payload;\n        },\n    },\n});\nexport const { getHolidays} = holidaySlice.actions;\n\n\n//Actions\nexport const fetchUsers = (year) => async (dispatch) => {\n    if (typeof year === \"undefined\") {\n        year = moment().year();\n    }\n    axios.get(`http://localhost:4000/holiday/year/${year}`).then((res) => {\n        dispatch(getHolidays(res.data));\n    });\n    \n};\n//post \n export const addTodo = () => async(dispatch) => {\n   \n        axios.post(`http://localhost:4000/holiday`).then((res) =>{\n            dispatch(addTodo(res.data))\n        })\n       \n    };\n\n//read the data\nexport const readTodo = (id) =>async(dispatch) => {\n    axios.get(`http://localhost:4000/holiday/:${id}`).then((res) => {\n        dispatch(readTodo(res.data))\n    })\n}\n //update\n export const updateTodo =(id) =>async(dispatch) =>{\n     axios.put(`http://localhost:4000/holiday/:${id}`).then((res) =>{\n         dispatch(updateTodo(res.data))\n     })\n } \n //delete\n export const deleteTodo =(id) =>async(dispatch) =>  {\n     axios.delete(`http://localhost:4000/holiday/;${id}`).then((res) =>{\n         dispatch(deleteTodo(res.data))\n     })\n }\n\nexport const holidayListSliceState = (state) => state.holidaySlice.holidayData;\nexport default holidaySlice.reducer;\n"]},"metadata":{},"sourceType":"module"}