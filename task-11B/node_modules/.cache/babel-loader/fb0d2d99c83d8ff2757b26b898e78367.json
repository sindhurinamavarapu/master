{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nexport const todoReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return [action.todo.data, ...state];\n\n    case \"READ_TODO\":\n      return [action.todo.data, ...state];\n\n    case \"UPDATE_TODO\":\n      return state.map(todo => {//todo._id === action.todo.data._id ? action.todo.data : todo\n      });\n\n    case \"DELETE_TODO\":\n      return [action];\n\n    default:\n      console.log(state);\n      return state;\n  }\n}; //slice\n\nconst holidaySlice = createSlice({\n  name: \"holidayList\",\n  initialState: {\n    holidayData: [],\n    holidayList: {}\n  },\n  reducers: {\n    getHolidays(state, action) {\n      console.log(\"action.payload\", action.payload);\n      state.holidayData = action.payload;\n    },\n\n    setHolidays(state, action) {\n      state.holidayList = action.payload;\n    },\n\n    setForID(state, action) {\n      console.log(\"id\");\n      state.dataforId = action.payload;\n    }\n\n  }\n});\nexport const {\n  getHolidays,\n  setHolidays,\n  setForID\n} = holidaySlice.actions; //Actions\n\nexport const fetchUsers = year => async dispatch => {\n  if (typeof year === \"undefined\") {\n    year = moment().year();\n  }\n\n  axios.get(`http://localhost:4000/holiday/year/${year}`).then(res => {\n    //    console.log(\"id\",res.holidays.holidays[0].holidayId);\n    console.log(\"res\", res.data);\n    dispatch(getHolidays(res.data)); // console.log(res.data,\"data\")\n  });\n}; //  //post \n\nexport const addTodo = holiday => async dispatch => {\n  console.log(\"holiday\", holiday);\n  axios.post(`http://localhost:4000/holiday`, holiday).then(res => {\n    // console.log(\"sindu\",res.data)\n    dispatch(addTodo(res.data));\n  });\n}; // //read the data\n\nexport const readTodo = id => async dispatch => {\n  console.log(\"hi\");\n  axios.get(`http://localhost:4000/holiday/${id}`).then(res => {\n    console.log(\"read\", res.data);\n    dispatch(setForID(res.data));\n  });\n}; //update\n\nexport const updateTodo = (updatedTodo, id) => async dispatch => {\n  axios.put(`http://localhost:4000/holiday/${id}`, updatedTodo).then(res => {\n    dispatch(updateTodo(res.data));\n  });\n}; //delete\n\nexport const deleteTodo = id => async dispatch => {\n  axios.delete(`http://localhost:4000/holiday/${id}`).then(res => {\n    dispatch(deleteTodo(res.data));\n  });\n};\nexport const holidayListSliceState = state => state.holidaySlice.holidayData;\nexport default holidaySlice.reducer;","map":{"version":3,"sources":["/Users/sindhurin/development/quadacademy/task-11B/src/slice/holidaySlice.js"],"names":["createSlice","axios","moment","todoReducer","state","action","type","todo","data","map","console","log","holidaySlice","name","initialState","holidayData","holidayList","reducers","getHolidays","payload","setHolidays","setForID","dataforId","actions","fetchUsers","year","dispatch","get","then","res","addTodo","holiday","post","readTodo","id","updateTodo","updatedTodo","put","deleteTodo","delete","holidayListSliceState","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nexport const todoReducer =(state,action) => {\n    \n    switch(action.type){\n       case \"ADD_TODO\" :\n        return [action.todo.data,...state]\n        case \"READ_TODO\" :\n        return [action.todo.data,...state]\n        case \"UPDATE_TODO\" :\n         return state.map((todo) => {\n              //todo._id === action.todo.data._id ? action.todo.data : todo\n         })\n         case \"DELETE_TODO\" :\n            return [action]\n        default:\n            console.log(state);\n            return state;\n    }\n}\n\n\n      \n\n//slice\nconst holidaySlice = createSlice({\n    name: \"holidayList\",\n    initialState: {\n       holidayData: [],\n       holidayList:{}\n     },\n    reducers: {\n        getHolidays(state, action) {\n            console.log(\"action.payload\",action.payload)\n            state.holidayData = action.payload;\n        },\n        setHolidays(state,action){\n          \n            state.holidayList = action.payload;\n        },\n        setForID(state,action){\n            console.log(\"id\")\n            state.dataforId =action.payload;\n        }\n    },\n});\n\nexport const { getHolidays,setHolidays,setForID} = holidaySlice.actions;\n\n\n//Actions\nexport const fetchUsers = (year) => async (dispatch) => {\n    \n    if (typeof year === \"undefined\") {\n        year = moment().year();\n    }\n    axios.get(`http://localhost:4000/holiday/year/${year}`).then((res) => {\n    //    console.log(\"id\",res.holidays.holidays[0].holidayId);\n        console.log(\"res\",res.data)\n        dispatch(getHolidays(res.data));\n        // console.log(res.data,\"data\")\n    });\n    \n};\n//  //post \n export const addTodo = (holiday) => async(dispatch) => {\n      console.log(\"holiday\",holiday);\n    \n        axios.post(`http://localhost:4000/holiday`,holiday).then((res) =>{\n            // console.log(\"sindu\",res.data)\n           dispatch(addTodo(res.data))\n        \n        })\n       \n    };\n\n// //read the data\n\n export const readTodo = (id )=> async(dispatch) => {\n    console.log(\"hi\")\n            axios.get(`http://localhost:4000/holiday/${id}`).then((res) => {\n            console.log(\"read\",res.data);\n            dispatch(setForID(res.data))\n        })  \n     } \n    \n //update\n export const updateTodo =(updatedTodo,id) =>async(dispatch) =>{\n     axios.put(`http://localhost:4000/holiday/${id}`,updatedTodo).then((res) =>{\n         dispatch(updateTodo(res.data))\n     })\n } \n //delete\n export const deleteTodo =(id) =>async(dispatch) =>  {\n     axios.delete(`http://localhost:4000/holiday/${id}`).then((res) =>{\n         dispatch(deleteTodo(res.data))\n     })\n }\n\n\n\nexport const holidayListSliceState = (state) => state.holidaySlice.holidayData;\nexport default holidaySlice.reducer;\n"]},"metadata":{},"sourceType":"module"}