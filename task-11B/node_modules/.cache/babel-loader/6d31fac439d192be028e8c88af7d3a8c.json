{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport moment from \"moment\"; //crud\n\nconst todoReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return [action.holidayData.todo, ...state];\n\n    default:\n      return state;\n  }\n}; // export const {ADD_TODO} =holidaySlice.actions;\n//slice\n\n\nconst holidaySlice = createSlice({\n  name: \"holidayList\",\n  initialState: {\n    holidayData: []\n  },\n  reducers: {\n    getHolidays(state, action) {\n      state.holidayData = action.payload;\n    }\n\n  }\n});\nexport const {\n  getHolidays,\n  ADD_TODO\n} = holidaySlice.actions; //Actions\n\nexport const fetchUsers = year => async dispatch => {\n  if (typeof year === \"undefined\") {\n    year = moment().year();\n  }\n\n  axios.get(`http://localhost:4000/holiday/year/${year}`).then(res => {\n    dispatch(getHolidays(res.data));\n  });\n}; // //post \n\nexport const addTodo = todo => async (dispatch, getState) => {\n  console.log(\"hi\", dispatch);\n  axios.post(`http://localhost:4000/holiday`, todo).then(res => {\n    //    dispatch(addTodo(res.data))\n    dispatch({\n      type: \"ADD_TODO\",\n      todo\n    });\n  });\n}; // //read the data\n// export const readTodo = (id) =>async(dispatch) => {\n//     axios.get(`http://localhost:4000/holiday/:${id}`).then((res) => {\n//         dispatch(readTodo(res.data))\n//     })\n// }\n//  //update\n//  export const updateTodo =(id) =>async(dispatch) =>{\n//      axios.put(`http://localhost:4000/holiday/:${id}`).then((res) =>{\n//          dispatch(updateTodo(res.data))\n//      })\n//  } \n//  //delete\n//  export const deleteTodo =(id) =>async(dispatch) =>  {\n//      axios.delete(`http://localhost:4000/holiday/;${id}`).then((res) =>{\n//          dispatch(deleteTodo(res.data))\n//      })\n//  }\n\nexport const holidayListSliceState = state => state.holidaySlice.holidayData;\nexport default holidaySlice.reducer;","map":{"version":3,"sources":["/Users/sindhurin/development/quadacademy/task-11B/src/slice/holidaySlice.js"],"names":["createSlice","axios","moment","todoReducer","state","action","type","holidayData","todo","holidaySlice","name","initialState","reducers","getHolidays","payload","ADD_TODO","actions","fetchUsers","year","dispatch","get","then","res","data","addTodo","getState","console","log","post","holidayListSliceState","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CACA;;AACA,MAAMC,WAAW,GAAE,CAACC,KAAK,GAAG,EAAT,EAAYC,MAAZ,KAAuB;AACtC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,UAAL;AACA,aAAO,CAACD,MAAM,CAACE,WAAP,CAAmBC,IAApB,EAAyB,GAAGJ,KAA5B,CAAP;;AACA;AACI,aAAOA,KAAP;AAJR;AAMH,CAPD,C,CAQA;AAEA;;;AACA,MAAMK,YAAY,GAAGT,WAAW,CAAC;AAC7BU,EAAAA,IAAI,EAAE,aADuB;AAE7BC,EAAAA,YAAY,EAAE;AACVJ,IAAAA,WAAW,EAAE;AADH,GAFe;AAK7BK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,WAAW,CAACT,KAAD,EAAQC,MAAR,EAAgB;AACvBD,MAAAA,KAAK,CAACG,WAAN,GAAoBF,MAAM,CAACS,OAA3B;AACH;;AAHK;AALmB,CAAD,CAAhC;AAWA,OAAO,MAAM;AAAED,EAAAA,WAAF;AAAcE,EAAAA;AAAd,IAA0BN,YAAY,CAACO,OAA7C,C,CAGP;;AACA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;AACpD,MAAI,OAAOD,IAAP,KAAgB,WAApB,EAAiC;AAC7BA,IAAAA,IAAI,GAAGhB,MAAM,GAAGgB,IAAT,EAAP;AACH;;AACDjB,EAAAA,KAAK,CAACmB,GAAN,CAAW,sCAAqCF,IAAK,EAArD,EAAwDG,IAAxD,CAA8DC,GAAD,IAAS;AAElEH,IAAAA,QAAQ,CAACN,WAAW,CAACS,GAAG,CAACC,IAAL,CAAZ,CAAR;AACH,GAHD;AAKH,CATM,C,CAUP;;AACC,OAAO,MAAMC,OAAO,GAAIhB,IAAD,IAAU,OAAMW,QAAN,EAAeM,QAAf,KAA4B;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBR,QAAjB;AACDlB,EAAAA,KAAK,CAAC2B,IAAN,CAAY,+BAAZ,EAA2CpB,IAA3C,EAAiDa,IAAjD,CAAuDC,GAAD,IAAQ;AAC9D;AACAH,IAAAA,QAAQ,CAAC;AACLb,MAAAA,IAAI,EAAC,UADA;AAELE,MAAAA;AAFK,KAAD,CAAR;AAIC,GAND;AAQH,CAVG,C,CAYR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMqB,qBAAqB,GAAIzB,KAAD,IAAWA,KAAK,CAACK,YAAN,CAAmBF,WAA5D;AACP,eAAeE,YAAY,CAACqB,OAA5B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n//crud\nconst todoReducer =(state = [],action) => {\n    switch(action.type){\n        case \"ADD_TODO\":\n        return [action.holidayData.todo,...state]\n        default:\n            return state;\n    }\n}\n// export const {ADD_TODO} =holidaySlice.actions;\n\n//slice\nconst holidaySlice = createSlice({\n    name: \"holidayList\",\n    initialState: {\n        holidayData: []\n    },\n    reducers: {\n        getHolidays(state, action) {\n            state.holidayData = action.payload;\n        },\n    },\n});\nexport const { getHolidays,ADD_TODO} = holidaySlice.actions;\n\n\n//Actions\nexport const fetchUsers = (year) => async (dispatch) => {\n    if (typeof year === \"undefined\") {\n        year = moment().year();\n    }\n    axios.get(`http://localhost:4000/holiday/year/${year}`).then((res) => {\n\n        dispatch(getHolidays(res.data));\n    });\n    \n};\n// //post \n export const addTodo = (todo) => async(dispatch,getState) => {\n         console.log(\"hi\",dispatch);\n        axios.post(`http://localhost:4000/holiday`,todo).then((res) =>{\n        //    dispatch(addTodo(res.data))\n        dispatch({\n            type:\"ADD_TODO\",\n            todo\n        })\n        })\n       \n    };\n\n// //read the data\n// export const readTodo = (id) =>async(dispatch) => {\n//     axios.get(`http://localhost:4000/holiday/:${id}`).then((res) => {\n//         dispatch(readTodo(res.data))\n//     })\n// }\n//  //update\n//  export const updateTodo =(id) =>async(dispatch) =>{\n//      axios.put(`http://localhost:4000/holiday/:${id}`).then((res) =>{\n//          dispatch(updateTodo(res.data))\n//      })\n//  } \n//  //delete\n//  export const deleteTodo =(id) =>async(dispatch) =>  {\n//      axios.delete(`http://localhost:4000/holiday/;${id}`).then((res) =>{\n//          dispatch(deleteTodo(res.data))\n//      })\n//  }\n\nexport const holidayListSliceState = (state) => state.holidaySlice.holidayData;\nexport default holidaySlice.reducer;\n"]},"metadata":{},"sourceType":"module"}