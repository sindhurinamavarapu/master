{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nconst intialState = {\n  date: \"\",\n  description: \"\",\n  type: \"\",\n  location: \"\",\n  isComplete: false\n}; //crud\n// const todoReducere =createSlice({\n//     name:\"holidays\",\n//     intialState:intialState\n//     reducers: {\n//         switch(action.type){\n//             case \"ADD_TODO\":\n//              return [action.data.todo,...state]\n//              default:\n//                  return state;\n//          }\n// })\n\nconst todoReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return [action.todo.data, ...state];\n\n    case \"READ_TODO\":\n      return [action.todos.data, ...state];\n\n    case \"UPDATE_TODO\":\n      return state.map(todo => {\n        todo._id === action.todo.data._id ? action.todo.data : todo;\n      });\n\n    default:\n      return state;\n  }\n}; //slice\n\n\nconst holidaySlice = createSlice({\n  name: \"holidayList\",\n  initialState: {\n    holidayData: []\n  },\n  reducers: {\n    getHolidays(state, action) {\n      state.holidayData = action.payload;\n    }\n\n  }\n});\nexport const {\n  getHolidays,\n  ADD_TODO,\n  READ_TODO\n} = holidaySlice.actions; //Actions\n\nexport const fetchUsers = year => async dispatch => {\n  if (typeof year === \"undefined\") {\n    year = moment().year();\n  }\n\n  axios.get(`http://localhost:4000/holiday/year/${year}`).then(res => {\n    dispatch(getHolidays(res.data));\n  });\n}; // //post \n\nexport const addTodo = holiday => async (dispatch, getState) => {\n  //  console.log(\"holiday\",holiday);\n  axios.post(`http://localhost:4000/holiday`, holiday).then(res => {\n    // console.log(\"sindu\",res.data)\n    dispatch(addTodo(res.data));\n  });\n}; //read the data\n\nexport const readTodo = id => async dispatch => {\n  axios.get(`http://localhost:4000/holiday/:{id}`).then(res => {\n    console.log(\"id\", res);\n    dispatch(readTodo(res.data));\n  });\n}; //update\n\nexport const updateTodo = (updatedTodo, id) => async dispatch => {\n  axios.put(`http://localhost:4000/holiday/:{id}`, updatedTodo).then(res => {\n    dispatch(updateTodo(res.data, todo));\n  });\n}; //  //delete\n//  export const deleteTodo =(id) =>async(dispatch) =>  {\n//      axios.delete(`http://localhost:4000/holiday/;${id}`).then((res) =>{\n//          dispatch(deleteTodo(res.data))\n//      })\n//  }\n\nexport const holidayListSliceState = state => state.holidaySlice.holidayData;\nexport default holidaySlice.reducer;","map":{"version":3,"sources":["/Users/sindhurin/development/quadacademy/task-11B/src/slice/holidaySlice.js"],"names":["createSlice","axios","moment","intialState","date","description","type","location","isComplete","todoReducer","state","action","todo","data","todos","map","_id","holidaySlice","name","initialState","holidayData","reducers","getHolidays","payload","ADD_TODO","READ_TODO","actions","fetchUsers","year","dispatch","get","then","res","addTodo","holiday","getState","post","readTodo","id","console","log","updateTodo","updatedTodo","put","holidayListSliceState","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n const intialState ={\n     date:\"\",\n    description:\"\",\n    type:\"\",\n    location:\"\",\n    isComplete:false\n } \n//crud\n// const todoReducere =createSlice({\n//     name:\"holidays\",\n//     intialState:intialState\n//     reducers: {\n//         switch(action.type){\n//             case \"ADD_TODO\":\n//              return [action.data.todo,...state]\n//              default:\n//                  return state;\n//          }\n// })\nconst todoReducer =(state = [],action) => {\n    \n    switch(action.type){\n       case \"ADD_TODO\" :\n        return [action.todo.data,...state]\n        case \"READ_TODO\" :\n        return [action.todos.data,...state]\n        case \"UPDATE_TODO\" :\n         return state.map((todo) => {\n             todo._id === action.todo.data._id ? action.todo.data : todo\n         })\n        default:\n            return state;\n    }\n}\n \n\n//slice\nconst holidaySlice = createSlice({\n    name: \"holidayList\",\n    initialState: {\n        holidayData: []\n    },\n    reducers: {\n        getHolidays(state, action) {\n            state.holidayData = action.payload;\n        },\n    },\n});\nexport const { getHolidays,ADD_TODO,READ_TODO} = holidaySlice.actions;\n\n\n//Actions\nexport const fetchUsers = (year) => async (dispatch) => {\n    if (typeof year === \"undefined\") {\n        year = moment().year();\n    }\n    axios.get(`http://localhost:4000/holiday/year/${year}`).then((res) => {\n\n        dispatch(getHolidays(res.data));\n    });\n    \n};\n// //post \n export const addTodo = (holiday) => async(dispatch,getState) => {\n    //  console.log(\"holiday\",holiday);\n         \n        axios.post(`http://localhost:4000/holiday`,holiday).then((res) =>{\n            // console.log(\"sindu\",res.data)\n           dispatch(addTodo(res.data))\n        \n        })\n       \n    };\n\n//read the data\nexport const readTodo = (id) =>async(dispatch) => {\n    axios.get(`http://localhost:4000/holiday/:{id}`).then((res) => {\n        console.log(\"id\",res)\n    dispatch(readTodo(res.data))\n    })\n}\n //update\n export const updateTodo =(updatedTodo,id) =>async(dispatch) =>{\n     axios.put(`http://localhost:4000/holiday/:{id}`,updatedTodo).then((res) =>{\n         dispatch(updateTodo(res.data,todo))\n     })\n } \n//  //delete\n//  export const deleteTodo =(id) =>async(dispatch) =>  {\n//      axios.delete(`http://localhost:4000/holiday/;${id}`).then((res) =>{\n//          dispatch(deleteTodo(res.data))\n//      })\n//  }\n\nexport const holidayListSliceState = (state) => state.holidaySlice.holidayData;\nexport default holidaySlice.reducer;\n"]},"metadata":{},"sourceType":"module"}