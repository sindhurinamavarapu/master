{"ast":null,"code":"var _jsxFileName = \"/Users/sindhurin/development/quadacademy/task-11B/src/component/HolidayPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport moment from 'moment';\nimport { useParams } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { makeStyles } from '@material-ui/core';\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save'; // import DeleteIcon from '@material-ui/icons/Delete';\n\nimport Link from \"@material-ui/core/Link\";\nimport { addTodo, getHolidays, readTodo } from '../slice/holidaySlice';\nimport { setForID, setHolidays } from '../slice/holidaySlice';\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\"; // import moment from \"moment\";\n\nimport { holidayListSliceState1, holidayListSliceState } from \"../slice/holidaySlice\";\nimport DataFetching from \"./DataFetching\";\nimport DeleteIcon from '@material-ui/icons/Delete'; // import { render } from \"@testing-library/react\";\n\nimport actionType from '../router/Router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  root: {\n    justifyContent: 'center',\n    pb: '3'\n  },\n  inputLabel: {\n    paddingLeft: '30%'\n  },\n  textField: {\n    margin: '7'\n  }\n}));\nconst type = [{\n  label: 'Select'\n}, {\n  label: 'Optional'\n}, {\n  label: 'Fixed'\n}];\nconst location = [{\n  label: 'Select'\n}, {\n  label: 'All Locations'\n}, {\n  label: 'Bettendorf,IA'\n}, {\n  label: 'India'\n}];\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  m: 1,\n  border: 1,\n  style: {\n    width: '65rem',\n    height: '35rem'\n  }\n};\n\nconst hType = code => {\n  let desc1 = \"Fixed\";\n\n  switch (code) {\n    case \"F\":\n      desc1 = \"Fixed\";\n      break;\n\n    case \"O\":\n      desc1 = \"Options\";\n      break;\n  }\n\n  return desc1;\n};\n\nconst location1 = code => {\n  let desc = \"All Locations\";\n\n  switch (code) {\n    case \"ALL\":\n      desc = \"All Locations\";\n      break;\n\n    case \"IND\":\n      desc = \"India\";\n      break;\n\n    case \"USA\":\n      desc = \"Bettendorf, IA\";\n      break;\n  }\n\n  return desc;\n};\n\nexport default function App() {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const holidays = useSelector(holidayListSliceState);\n  const dataforId = useSelector(holidayListSliceState1);\n  const [todoComplete, setTodoComplete] = useState(); //console.log(\"dataforId\",dataforId );\n\n  let id = useParams(); //   const [getHolidayById,setHolidays]= useState([]);\n  //      console.log(\"123456\",getHolidayById)\n  //   useEffect(()=>{\n  //   dispatch(readTodo(id))\n  // },[id])\n  // useEffect(()=>{\n  //   const singleHoliday = getHolidayById.holidays[0]\n  //       console.log(\"789000\",singleHoliday)\n  //   setHolidays(dataforId)\n  // },[dataforId])\n\n  const formik = useFormik({\n    initialValues: {\n      date: '',\n      location: '',\n      type: '',\n      description: '',\n      isComplete: false\n    },\n    validationSchema: Yup.object({\n      date: Yup.string().required(\"Required!\").nullable(),\n      location: Yup.string().required(\"Required!\").nullable(),\n      type: Yup.string().required(\"Required!\").nullable(),\n      description: Yup.string().required(\"Required!\").nullable()\n    }),\n    // onSubmit:(values,{setSubmitting}) => {\n    //   const errors={};\n    //   console.log(\"values\",values);\n    //      dispatch(addTodo(values));\n    //      //dispatch(setTodo(id));\n    //    alert(JSON.stringify(values, null, 2));\n    //   setSubmitting(false);\n    // }})\n    onSubmit: values => {\n      console.log(\"values\", values);\n      dispatch(addTodo(values));\n      console.log(\"formikvalues1234\", formik.values.description, moment((formik.values.date, 'YYYY/mm/dd').format('mm/dd/YYYY')), hType(formik.values.type), location1(formik.values.location)); //dispatch(setTodo(id));\n\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: values => {\n      /*#__PURE__*/\n      _jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          border: 1,\n          ...defaultProps,\n          px: 2,\n          pt: 5,\n          pb: 4,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"Holiday Id\",\n                margin: \"dense\",\n                varient: \"outlined\",\n                className: classes.inputLabel,\n                children: \"Holiday Id:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 10,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                name: \"HolidayId\",\n                id: \"outlined-full-width\",\n                placeholder: \"#\",\n                value: formik.values.HolidayId,\n                style: {\n                  margin: 1\n                },\n                fullWidth: true,\n                margin: \"normal\",\n                InputLabelProps: {\n                  shrink: true\n                },\n                variant: \"outlined\",\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 31\n              }, this), formik.errors.HolidayId && formik.touched.HolidayId && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formik.errors.HolidayId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"Date\",\n                className: classes.inputLabel,\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 10,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                id: \"date\",\n                name: \"date\",\n                type: \"date\",\n                onChange: formik.handleChange,\n                value: moment(formik.values.date, 'YYYY-MM-DD').format('MM-DD-YYYY'),\n                style: {\n                  margin: 1\n                },\n                dateFormat: \"MM/dd/yyyy\",\n                fullWidth: true,\n                margin: \"normal\",\n                InputLabelProps: {\n                  shrink: true\n                },\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 30\n              }, this), formik.errors.date && formik.touched.date && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formik.errors.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"location\",\n                className: classes.inputLabel,\n                children: \"Location:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 10,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                id: \"location\",\n                name: \"location\",\n                type: \"text\",\n                onChange: formik.handleChange //value= {location1(formik.values.location)}\n                ,\n                select: true,\n                SelectProps: {\n                  native: true\n                },\n                style: {\n                  marginRight: 1\n                },\n                variant: \"filled\",\n                fullWidth: true,\n                children: location.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 35\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 43\n              }, this), formik.errors.location && formik.touched.location && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formik.errors.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"type\",\n                className: classes.inputLabel,\n                children: \"Holiday Type:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 10,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                id: \"type\",\n                name: \"type\",\n                type: \"text\",\n                onChange: formik.handleChange //  value={hType(formik.values.type)}\n                ,\n                select: true,\n                style: {\n                  marginRight: 1\n                },\n                SelectProps: {\n                  native: true\n                },\n                variant: \"filled\",\n                fullWidth: true,\n                children: type.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 35\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 31\n              }, this), formik.errors.type && formik.touched.type && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formik.errors.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"description\",\n                className: classes.inputLabel,\n                children: \"Description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 10,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                id: \"description\",\n                name: \"description\",\n                type: \"text\",\n                onChange: formik.handleChange // value={ formik.values.description}\n                ,\n                style: {\n                  marginRight: 1\n                },\n                fullWidth: true,\n                margin: \"normal\",\n                InputLabelProps: {\n                  shrink: true\n                },\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 31\n              }, this), formik.errors.description && formik.touched.description && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formik.errors.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 12,\n              md: 4,\n              lg: 4,\n              style: {\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/create/\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                style: {\n                  margin: '2 auto',\n                  display: \"flex\"\n                },\n                type: \"submit\",\n                startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 44\n                }, this),\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 32\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"secondary\",\n                startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 47\n                }, this),\n                to: {\n                  pathname: \"/update/\"\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                style: {\n                  margin: '3 auto',\n                  display: \"flex\"\n                },\n                to: {\n                  pathname: \"/update/\"\n                },\n                children: \"Switch to view\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 35\n            }, this), \")\", /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                style: {\n                  margin: '3 auto',\n                  display: \"flex\"\n                },\n                children: \"Goto:Holidays\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 10\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MTTp52OYqWuZQaq9yHaducYsTBs=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector, useParams, useFormik];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sindhurin/development/quadacademy/task-11B/src/component/HolidayPage.js"],"names":["React","useEffect","useState","useFormik","moment","useParams","Yup","makeStyles","Grid","Box","TextField","InputLabel","IconButton","Button","SaveIcon","Link","addTodo","getHolidays","readTodo","setForID","setHolidays","useDispatch","useSelector","holidayListSliceState1","holidayListSliceState","DataFetching","DeleteIcon","actionType","useStyles","theme","button","margin","spacing","root","justifyContent","pb","inputLabel","paddingLeft","textField","type","label","location","defaultProps","bgcolor","m","border","style","width","height","hType","code","desc1","location1","desc","App","classes","dispatch","holidays","dataforId","todoComplete","setTodoComplete","id","formik","initialValues","date","description","isComplete","validationSchema","object","string","required","nullable","onSubmit","values","console","log","format","alert","JSON","stringify","handleSubmit","HolidayId","shrink","errors","touched","handleChange","native","marginRight","map","option","value","textAlign","display","pathname"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from \"react\";\nimport { useFormik} from \"formik\";\nimport moment from 'moment';\n import {useParams} from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { makeStyles } from '@material-ui/core';\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\n// import DeleteIcon from '@material-ui/icons/Delete';\nimport Link from \"@material-ui/core/Link\";\nimport {addTodo, getHolidays, readTodo} from '../slice/holidaySlice';\nimport {setForID,setHolidays} from '../slice/holidaySlice';\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\n// import moment from \"moment\";\nimport { holidayListSliceState1,holidayListSliceState} from \"../slice/holidaySlice\";\nimport DataFetching from \"./DataFetching\";\nimport DeleteIcon from '@material-ui/icons/Delete';\n// import { render } from \"@testing-library/react\";\nimport actionType from '../router/Router';\n\n\n    \nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    justifyContent: 'center',\n    pb: '3'\n  },\n  inputLabel: {\n    paddingLeft: '30%',    \n  },\n  textField: {\n    margin: '7'\n  }\n}))\nconst type = [\n  {\n    label:'Select',\n  },\n  {\n\n    label: 'Optional',\n  },\n  {\n\n    label: 'Fixed',\n  },\n]\nconst location = [\n  {\n    label:'Select',\n  },\n  {\n    label: 'All Locations'\n  },\n  {\n    label: 'Bettendorf,IA'\n  },\n  {\n    label: 'India'\n  }\n]\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  m: 1,\n  border: 1,\n  style: { width: '65rem', height: '35rem' },\n};\nconst hType =(code) =>{\n  let desc1=\"Fixed\"\n      \n  switch (code) {\n    case \"F\":\n        desc1=\"Fixed\"\n        break;\n     case \"O\":\n         desc1 =\"Options\"\n         break;     \n    }\n  return desc1;\n}\n\nconst location1 = (code) =>{\n  let desc=  \"All Locations\";\n\n  switch (code) {\n     case \"ALL\":\n         desc =\"All Locations\"\n         break;\n      case \"IND\":\n          desc =\"India\"\n          break;  \n      case \"USA\":\n         desc =\"Bettendorf, IA\"\n         break;\n       }\n  return desc;\n}\n\nexport default function App() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  \n  const holidays = useSelector(holidayListSliceState);\n  const dataforId = useSelector(holidayListSliceState1);\n  const[todoComplete,setTodoComplete] = useState();\n     //console.log(\"dataforId\",dataforId );\n    let  id = useParams();\n    \n  //   const [getHolidayById,setHolidays]= useState([]);\n  //      console.log(\"123456\",getHolidayById)\n \n  //   useEffect(()=>{\n  //   dispatch(readTodo(id))\n  // },[id])\n \n  // useEffect(()=>{\n  //   const singleHoliday = getHolidayById.holidays[0]\n  //       console.log(\"789000\",singleHoliday)\n  //   setHolidays(dataforId)\n  // },[dataforId])\n\n  const formik = useFormik({\n   initialValues: {\n      date:'',\n      location:'',\n      type:'',\n      description:'',\n      isComplete:false\n     \n    },\n   validationSchema: Yup.object({\n      date:Yup.string().required(\"Required!\").nullable(),\n      location:Yup.string().required(\"Required!\").nullable(),\n      type:Yup.string().required(\"Required!\").nullable(),\n      description:Yup.string().required(\"Required!\").nullable(),\n    }),\n    // onSubmit:(values,{setSubmitting}) => {\n    //   const errors={};\n    //   console.log(\"values\",values);\n    //      dispatch(addTodo(values));\n         \n    //      //dispatch(setTodo(id));\n     \n    //    alert(JSON.stringify(values, null, 2));\n    //   setSubmitting(false);\n    // }})\n    onSubmit:values => {\n    \n      console.log(\"values\",values);\n         dispatch(addTodo(values));\n         console.log(\"formikvalues1234\",\n                 formik.values.description,\n                 moment((formik.values.date,'YYYY/mm/dd').format('mm/dd/YYYY')),\n                hType(formik.values.type),\n                location1(formik.values.location),\n         )\n         //dispatch(setTodo(id));\n     \n       alert(JSON.stringify(values, null, 2));\n      \n     }})\n\n  return (\n    <div className=\"App\">\n    {(values)=>{  \n         <form  onSubmit={formik.handleSubmit} >\n            \n                <Box display=\"flex\" justifyContent=\"center\" border={1} {...defaultProps}  px={2} pt={5} pb={4}>\n                          <Grid container spacing={3}>\n                          \n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"Holiday Id\" margin=\"dense\" varient=\"outlined\" className={classes.inputLabel} >Holiday Id:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                              name=\"HolidayId\"\n                                id=\"outlined-full-width\"\n                                placeholder=\"#\"\n                               value={formik.values.HolidayId}\n                                style={{ margin: 1 }}\n                              \n                                fullWidth\n                                margin=\"normal\"\n                                InputLabelProps={{\n                                  shrink: true,\n                                }}\n                                variant=\"outlined\"\n                                disabled\n                              />\n                              {formik.errors.HolidayId && formik.touched.HolidayId && (\n                                <p>{formik.errors.HolidayId}</p>\n                              )}\n                            </Grid>\n                \n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"Date\" className={classes.inputLabel} >Date:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                             <TextField\n                              id=\"date\"\n                              name=\"date\"\n                              type=\"date\"\n                              onChange={formik.handleChange}\n                             value={moment(formik.values.date,'YYYY-MM-DD').format('MM-DD-YYYY')}\n                              \n                             style={{ margin: 1 }}\n                              dateFormat=\"MM/dd/yyyy\"\n                              fullWidth\n                              margin=\"normal\"\n                              InputLabelProps={{\n                                shrink: true,\n                              }}\n                              variant=\"outlined\"\n                            />\n                            \n                            {formik.errors.date && formik.touched.date && (\n                              <p>{formik.errors.date}</p>\n                            )}\n                           </Grid>\n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"location\" className={classes.inputLabel} >Location:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                                id=\"location\"\n                                name=\"location\"\n                                type=\"text\"\n                               onChange={formik.handleChange}\n                                 //value= {location1(formik.values.location)}\n                              \n                                select\n                             \n                                SelectProps={{\n                                  native: true,\n                                }}\n                                style={{ marginRight: 1 }}\n                                variant=\"filled\"\n                                fullWidth\n                                \n                              >\n                                {location.map((option) => (\n                                  <option key={option.value} value={option.value}>\n                                    {option.label}\n                                  </option>\n                                ))}\n                              \n                              </TextField><br></br>\n                              {formik.errors.location && formik.touched.location && (\n                                <p>{formik.errors.location}</p>\n                              )}\n                            </Grid>\n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"type\" className={classes.inputLabel} >Holiday Type:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                                id=\"type\"\n                                name=\"type\"\n                                type=\"text\"\n                               onChange={formik.handleChange}\n                              //  value={hType(formik.values.type)}\n                              \n                                select\n                                style={{ marginRight: 1 }}\n                             \n                                SelectProps={{\n                                  native: true,\n                                }}\n                                variant=\"filled\"\n                                fullWidth\n                                \n                              >\n                                {type.map((option) => (\n                                  <option key={option.value} value={option.value}>\n                                    {option.label}\n                                  </option>\n                                ))}\n                                \n                              </TextField>\n                              {formik.errors.type && formik.touched.type&& (\n                                <p>{formik.errors.type}</p>\n                              )}\n                            </Grid>\n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"description\" className={classes.inputLabel} >Description:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                                id=\"description\"\n                                name=\"description\"\n                                type=\"text\"\n                                onChange={formik.handleChange}\n                                // value={ formik.values.description}\n              \n                                style={{ marginRight: 1 }}\n                                fullWidth\n                                margin=\"normal\"\n                                InputLabelProps={{\n                                  shrink: true,\n                                }}\n                                variant=\"outlined\"\n                              \n                              />\n                              {formik.errors.description && formik.touched.description && (\n                                <p>{formik.errors.description}</p>\n                              )}\n                            </Grid>\n                \n                            <Grid item xs={12} sm={12} md={4} lg={4}\n                              style={{\n                                textAlign: 'center'\n                              }}\n                            >\n                              <Button>\n                \n                              </Button>\n                            </Grid>\n                             <Link href=\"/create/\">\n                             \n                               <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                style={{ margin: '2 auto', display: \"flex\" }}\n                                type=\"submit\"\n                                startIcon={<SaveIcon />}\n                               \n                              >\n                                Save\n                              </Button>\n                              </Link>\n                              \n                              <Link>\n                            \n                                <Button\n                                   variant=\"contained\"\n                                   color=\"secondary\"\n                                   startIcon={<DeleteIcon />}\n                                   to={{pathname:\"/update/\"}}\n                                     >\n                                    Delete\n                                  </Button>\n                                  </Link>\n                              \n                                  <Link>\n                                   <Button variant=\"contained\" \n                                  color=\"primary\" \n                                  style={{ margin: '3 auto', display: \"flex\"}}\n                                  to={{pathname:\"/update/\"}}\n                                  >Switch to view\n                                  </Button>\n                                  </Link>\n\n                              )\n                              \n\n                             <Link href='/'>\n                              <Button variant=\"contained\" \n                              style={{ margin: '3 auto', display: \"flex\" }}\n                         \n                              >Goto:Holidays\n                              </Button>\n                              </Link>\n                              \n                              {/*<Link href=\"/view/\">\n                          \n                              <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                style={{ margin: '2 auto', display: \"flex\" }}\n                                type=\"submit\"\n                                startIcon={<SaveIcon />}\n                                \n                              >\n                              Switch To Update\n                              </Button>\n                            \n                              </Link>\n                            \n                             \n                              <Link href=\"/update/\">\n                              <Button variant=\"contained\" \n                              style={{ margin: '3 auto', display: \"flex\" }}\n                              startIcon={<DeleteIcon />}\n                         \n                              >Delete\n                              </Button>\n                              </Link>\n                              <Link href=\"/update/\">\n                              <Button variant=\"contained\" \n                              style={{ margin: '3 auto', display: \"flex\" }}\n                              \n                         \n                              >Switch To View\n                              </Button>\n                            </Link>*/}\n                            \n                                \n                            \n                        \n                          \n                         </Grid>\n                \n                   </Box>\n         \n                  </form>\n              \n                          }}\n                     </div>\n               \n      \n  )}\n"]},"metadata":{},"sourceType":"module"}