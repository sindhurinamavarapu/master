{"ast":null,"code":"var _jsxFileName = \"/Users/sindhurin/development/quadacademy/task-11B/src/component/HolidayPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { useParams } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { makeStyles } from '@material-ui/core';\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Link from \"@material-ui/core/Link\";\nimport { addTodo } from '../slice/holidaySlice';\nimport { id, readTodo } from '../slice/holidaySlice';\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { holidayListSliceState } from \"../slice/holidaySlice\";\nimport { render } from \"@testing-library/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst actions = type => {\n  let Button = \"\";\n\n  switch (type) {\n    case \"ADD\":\n      Button = \"Save\";\n      break;\n\n    case \"Read\":\n      Button = \"Switch to Update\";\n      break;\n\n    case \"UPDATE\":\n      Button = \"Delete && Switch to View && Save\";\n      break;\n\n    default:\n      Button = \"Goto Holidays\";\n  }\n\n  return Button;\n};\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  root: {\n    justifyContent: 'center',\n    pb: '3'\n  },\n  inputLabel: {\n    paddingLeft: '30%'\n  },\n  textField: {\n    margin: '7'\n  }\n}));\nconst type = [{\n  label: 'Select'\n}, {\n  label: 'Optional'\n}, {\n  label: 'Fixed'\n}];\nconst location = [{\n  label: 'Select'\n}, {\n  label: 'All Locations'\n}, {\n  label: 'Bettendorf,IA'\n}, {\n  label: 'India'\n}];\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  m: 1,\n  border: 1,\n  style: {\n    width: '65rem',\n    height: '35rem'\n  }\n};\nexport default function App() {\n  _s();\n\n  const classes = useStyles();\n  const currentYear = moment().format(\"YYYY\");\n  const today = parseInt(currentYear);\n  const dispatch = useDispatch();\n  const holidays = useSelector(holidayListSliceState);\n  console.log(holidays, \"holidays\"); //for getting the data\n\n  const {\n    id\n  } = useParams();\n  console.log(id); //    useEffect(()=>{\n  //   dispatch(readTodo(id))\n  // },[id])\n\n  const [todo, setTodo] = useState({\n    id: \"\",\n    date: \"\",\n    description: \"\",\n    type: \"\",\n    location: \"\",\n    isComplete: false\n  }); // useEffect(()=>{\n  //   dispatch(readTodo(id))\n  // },[id])\n\n  const formik = useFormik({\n    initialValues: {\n      date: '',\n      location: '',\n      type: '',\n      description: '',\n      isComplete: false\n    },\n    validationSchema: Yup.object({\n      date: Yup.string().required(\"Required!\"),\n      location: Yup.string().required(\"Required!\").nullable(),\n      type: Yup.string().required(\"Required!\").nullable(),\n      description: Yup.string().required(\"Required!\").nullable()\n    }),\n    onSubmit: values => {\n      console.log(values, \"values\");\n      dispatch(addTodo(values)); //update the state\n      // setTodo({\n      //   date:\"\",\n      //   description:\"\",\n      //   type:\"\",\n      //   location:\"\",\n      //   isComplete:false\n      // })\n      //  alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        border: 1,\n        ...defaultProps,\n        px: 2,\n        pt: 5,\n        pb: 4,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"Holiday Id\",\n              margin: \"dense\",\n              varient: \"outlined\",\n              className: classes.inputLabel,\n              children: \"Holiday Id:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 10,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"HolidayId\",\n              id: \"outlined-full-width\",\n              value: \"#\",\n              style: {\n                margin: 1\n              },\n              fullWidth: true,\n              margin: \"normal\",\n              InputLabelProps: {\n                shrink: true\n              },\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"Date\",\n              className: classes.inputLabel,\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 10,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"date\",\n              name: \"date\",\n              type: \"date\",\n              onChange: formik.handleChange,\n              value: formik.values.date,\n              style: {\n                margin: 1\n              },\n              format: \"MM/dd/yyyy\",\n              fullWidth: true,\n              margin: \"normal\",\n              InputLabelProps: {\n                shrink: true\n              },\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 30\n            }, this), formik.errors.date && formik.touched.date && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: formik.errors.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"location\",\n              className: classes.inputLabel,\n              children: \"Location:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 10,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"location\",\n              name: \"location\",\n              type: \"text\",\n              onChange: formik.handleChange,\n              value: formik.values.location,\n              select: true,\n              SelectProps: {\n                native: true\n              },\n              style: {\n                marginRight: 1\n              },\n              variant: \"filled\",\n              fullWidth: true,\n              children: location.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 35\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 43\n            }, this), formik.errors.location && formik.touched.location && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: formik.errors.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"type\",\n              className: classes.inputLabel,\n              children: \"Holiday Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 10,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"type\",\n              name: \"type\",\n              type: \"text\",\n              onChange: formik.handleChange,\n              value: formik.values.type,\n              select: true,\n              style: {\n                marginRight: 1\n              },\n              SelectProps: {\n                native: true\n              },\n              variant: \"filled\",\n              fullWidth: true,\n              children: type.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 35\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 31\n            }, this), formik.errors.type && formik.touched.type && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: formik.errors.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"description\",\n              className: classes.inputLabel,\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 10,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"description\",\n              name: \"description\",\n              type: \"text\",\n              onChange: formik.handleChange,\n              values: formik.values.description,\n              style: {\n                marginRight: 1\n              },\n              fullWidth: true,\n              margin: \"normal\",\n              InputLabelProps: {\n                shrink: true\n              },\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 31\n            }, this), formik.errors.description && formik.touched.description && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: formik.errors.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            md: 4,\n            lg: 4,\n            style: {\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/holiday\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              style: {\n                margin: '2 auto',\n                display: \"flex\"\n              },\n              type: \"submit\",\n              startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 44\n              }, this),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              style: {\n                margin: '3 auto',\n                display: \"flex\"\n              },\n              children: \"Goto:Holidays\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 29\n          }, this), actionType === 'read'( /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            style: {\n              margin: '3 auto',\n              display: \"flex\"\n            },\n            children: \"Switch To update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 32\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"1c8tkIzOs0Okv60BfzvlGQkJsJY=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useParams, useFormik];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sindhurin/development/quadacademy/task-11B/src/component/HolidayPage.js"],"names":["React","useEffect","useState","useFormik","useParams","Yup","makeStyles","Grid","Box","TextField","InputLabel","Button","SaveIcon","DeleteIcon","Link","addTodo","id","readTodo","useDispatch","useSelector","moment","holidayListSliceState","render","actions","type","useStyles","theme","button","margin","spacing","root","justifyContent","pb","inputLabel","paddingLeft","textField","label","location","defaultProps","bgcolor","m","border","style","width","height","App","classes","currentYear","format","today","parseInt","dispatch","holidays","console","log","todo","setTodo","date","description","isComplete","formik","initialValues","validationSchema","object","string","required","nullable","onSubmit","values","handleSubmit","shrink","handleChange","errors","touched","native","marginRight","map","option","value","textAlign","display","actionType"],"mappings":"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","sourcesContent":["import React,{ useEffect ,useState}  from \"react\";\nimport {useFormik} from \"formik\";\nimport {useParams} from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { makeStyles } from '@material-ui/core';\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Link from \"@material-ui/core/Link\";\nimport {addTodo} from '../slice/holidaySlice';\nimport {id,readTodo} from '../slice/holidaySlice';\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { holidayListSliceState } from \"../slice/holidaySlice\";\nimport { render } from \"@testing-library/react\";\n\n\nconst actions =(type) =>{\n  let  Button=\"\"\n    switch(type) {\n        case \"ADD\":\n          Button=\"Save\"\n          break;\n        case \"Read\":\n           Button=\"Switch to Update\" \n           break;\n        case \"UPDATE\":\n            Button=\"Delete && Switch to View && Save\"\n            break;\n        default:\n             Button=\"Goto Holidays\"\n    }\n    return Button;\n}\n    \nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    justifyContent: 'center',\n    pb: '3'\n  },\n  inputLabel: {\n    paddingLeft: '30%',    \n  },\n  textField: {\n    margin: '7'\n  }\n}))\nconst type = [\n  {\n    label:'Select',\n  },\n  {\n\n    label: 'Optional',\n  },\n  {\n\n    label: 'Fixed',\n  },\n]\nconst location = [\n  {\n    label:'Select',\n  },\n  {\n    label: 'All Locations'\n  },\n  {\n    label: 'Bettendorf,IA'\n  },\n  {\n    label: 'India'\n  }\n]\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  m: 1,\n  border: 1,\n  style: { width: '65rem', height: '35rem' },\n};\n\n\n\nexport default function App() {\n  const classes = useStyles();\n  const currentYear = moment().format(\"YYYY\");\n  const today = parseInt(currentYear);\n  const dispatch = useDispatch();\n  const holidays = useSelector(holidayListSliceState);\n    console.log(holidays,\"holidays\");\n  \n  //for getting the data\n  \n const {id}= useParams();\n    console.log(id);\n \n  //    useEffect(()=>{\n  //   dispatch(readTodo(id))\n  // },[id])\n  const [todo,setTodo] = useState({\n    id:\"\",\n    date:\"\",\n    description:\"\",\n    type:\"\",\n    location:\"\",\n    isComplete:false\n\n  })\n  // useEffect(()=>{\n  //   dispatch(readTodo(id))\n  // },[id])\n \n  const formik = useFormik({\n   initialValues: {\n     \n      date:'',\n      location:'',\n      type:'',\n      description:'',\n      isComplete:false\n     \n    },\n   validationSchema: Yup.object({\n      date:Yup.string().required(\"Required!\"),\n      location:Yup.string().required(\"Required!\").nullable(),\n      type:Yup.string().required(\"Required!\").nullable(),\n      description:Yup.string().required(\"Required!\").nullable(),\n    }),\n    onSubmit: (values) => {\n      console.log(values,\"values\");\n       dispatch(addTodo(values));\n      \n      //update the state\n      // setTodo({\n      //   date:\"\",\n      //   description:\"\",\n      //   type:\"\",\n      //   location:\"\",\n      //   isComplete:false\n      // })\n      //  alert(JSON.stringify(values, null, 2));\n      \n    },\n \n  })\n\n  return (\n    <div>\n\n    <form  onSubmit={formik.handleSubmit}>\n                <Box display=\"flex\" justifyContent=\"center\" border={1} {...defaultProps}  px={2} pt={5} pb={4}>\n                          <Grid container spacing={3}>\n                          \n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"Holiday Id\" margin=\"dense\" varient=\"outlined\" className={classes.inputLabel} >Holiday Id:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                              name=\"HolidayId\"\n                                id=\"outlined-full-width\"\n                                value=\"#\"\n                                style={{ margin: 1 }}\n                              \n                                fullWidth\n                                margin=\"normal\"\n                                InputLabelProps={{\n                                  shrink: true,\n                                }}\n                                variant=\"outlined\"\n                              />\n                            </Grid>\n                \n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"Date\" className={classes.inputLabel} >Date:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                             <TextField\n                              id=\"date\"\n                              name=\"date\"\n                              type=\"date\"\n                              onChange={formik.handleChange}\n                               value={formik.values.date}\n                              \n                              style={{ margin: 1 }}\n                              format=\"MM/dd/yyyy\"\n                              fullWidth\n                              margin=\"normal\"\n                              InputLabelProps={{\n                                shrink: true,\n                              }}\n                              variant=\"outlined\"\n                            />\n                            {formik.errors.date && formik.touched.date && (\n                              <p>{formik.errors.date}</p>\n                            )}\n                           </Grid>\n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"location\" className={classes.inputLabel} >Location:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                                id=\"location\"\n                                name=\"location\"\n                                type=\"text\"\n                               onChange={formik.handleChange}\n                                value={formik.values.location}\n                              \n                                select\n                             \n                                SelectProps={{\n                                  native: true,\n                                }}\n                                style={{ marginRight: 1 }}\n                                variant=\"filled\"\n                                fullWidth\n                                \n                              >\n                                {location.map((option) => (\n                                  <option key={option.value} value={option.value}>\n                                    {option.label}\n                                  </option>\n                                ))}\n                              \n                              </TextField><br></br>\n                              {formik.errors.location && formik.touched.location && (\n                                <p>{formik.errors.location}</p>\n                              )}\n                            </Grid>\n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"type\" className={classes.inputLabel} >Holiday Type:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                                id=\"type\"\n                                name=\"type\"\n                                type=\"text\"\n                               onChange={formik.handleChange}\n                               value={formik.values.type}\n                              \n                                select\n                                style={{ marginRight: 1 }}\n                             \n                                SelectProps={{\n                                  native: true,\n                                }}\n                                variant=\"filled\"\n                                fullWidth\n                                \n                              >\n                                {type.map((option) => (\n                                  <option key={option.value} value={option.value}>\n                                    {option.label}\n                                  </option>\n                                ))}\n                                \n                              </TextField>\n                              {formik.errors.type && formik.touched.type&& (\n                                <p>{formik.errors.type}</p>\n                              )}\n                            </Grid>\n                            <Grid item xs={2}>\n                              <InputLabel htmlFor=\"description\" className={classes.inputLabel} >Description:</InputLabel>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <TextField\n                                id=\"description\"\n                                name=\"description\"\n                                type=\"text\"\n                                onChange={formik.handleChange}\n                                values={formik.values.description}\n              \n                                style={{ marginRight: 1 }}\n                                fullWidth\n                                margin=\"normal\"\n                                InputLabelProps={{\n                                  shrink: true,\n                                }}\n                                variant=\"outlined\"\n                              \n                              />\n                              {formik.errors.description && formik.touched.description && (\n                                <p>{formik.errors.description}</p>\n                              )}\n                            </Grid>\n                \n                            <Grid item xs={12} sm={12} md={4} lg={4}\n                              style={{\n                                textAlign: 'center'\n                              }}\n                            >\n                              <Button>\n                \n                              </Button>\n                            </Grid>\n                            <Link href='/holiday'>\n                              <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                style={{ margin: '2 auto', display: \"flex\" }}\n                                type=\"submit\"\n                                startIcon={<SaveIcon />}\n                              >\n                                Save\n                              </Button>\n                            </Link>\n                            <Link href='/'>\n                              <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }} >Goto:Holidays</Button>\n                              </Link>\n                             {actionType === 'read' (\n                               <Button variant=\"contained\"  color=\"primary\" style={{ margin: '3 auto', display: \"flex\" }}>Switch To update</Button>\n\n                             )}\n                          {/* <Link href='/holiday/:id?type=\"read\"'>\n                           {actionType ===\"read\" && (\n                              <Button variant=\"contained\"  color=\"primary\" style={{ margin: '3 auto', display: \"flex\" }}>Switch To update</Button>\n                               <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }} >Goto:Holidays</Button>\n                              </Link>\n                            <Link href='/holiday/:id?type=\"update\"'>\n                           <Button\n                          //     variant=\"contained\"\n                          //     color=\"secondary\"\n                              \n                          //     startIcon={<DeleteIcon />}\n                          //       >\n                          //      Delete\n                          //    </Button>\n                          //    </Link>\n                          //   <Link href='/holiday/:id?type=\"update\"'>\n                        \n                          //     <Button variant=\"contained\" color=\"primary\" style={{ margin: '3 auto', display: \"flex\"}}>Switch to view</Button>\n                            //   </Link> */}\n                            \n                         </Grid>\n                \n                   </Box>\n                  </form>\n                  </div>\n               )\n       }   \n\n"]},"metadata":{},"sourceType":"module"}