{"ast":null,"code":"// import { createSlice } from \"@reduxjs/toolkit\";\n// import axios from \"axios\";\n// import moment from \"moment\";\n// const currentYear = moment().format(\"YYYY\");\n// const today = parseInt(currentYear);\n// const initialState={\n//     year:today,\n//     isHolidayListNotValid:0,\n//     isviewmode:1,\n//     isSaveMode:0,\n//     holidays:[],\n//     status:{\n//         message:\"\",\n//         color:\"\"\n//     },\n//     dataforId:{\n//         id:\"\",\n//         location:\"\",\n//         type:\"\",\n//         date:\"\",\n//         description:\"\"\n//     }\n// };\n// //slice\n// const holidaySlice = createSlice({\n//     name: \"holidays\",\n//     initialState,\n//     reducers: {\n//         getHolidays(state, action) {\n//             state.year = action.payload;\n//         },\n//         setHolidays(state,action){\n//           state.holidays = action.payload;\n//         },\n//         setForID(state,action){\n//             console.log(\"action.payload\",action)\n//             state.dataforId =action.payload;\n//         },\n//         setStatus(state,action){\n//            state.status.msg=action.payload.msg;\n//            state.status.color=action.payload.color;\n//         }\n//     }\n// });\n// export const { getHolidays,setHolidays,setForID,setStatus} = holidaySlice.actions;\n// //Actions\n// export const fetchUsers = (year) => async (dispatch) => {\n//     if (typeof year === \"undefined\") {\n//         year = moment().year();\n//     }\n//     axios.get(`http://localhost:4000/holiday/year/${year}`).then((res) => {\n//         dispatch(setholidays(res.data.Data));\n//         dispatch(getHolidays(year));\n//         dispatch(\n//             setId({\n//                 id:\"\",\n//                 location:\"ALL\",\n//                 type:\"F\",\n//                 date:\"\",\n//                 description:\"\",\n//             })\n//         );\n//         dispatch(setStatus({msg:\"\",color:\"\"}));\n//     })\n//     .catch((error) =>{\n//         dispatch(setHolidays([]));\n//         dispatch(getHolidays(year));\n//     })\n// };\n//  //post \n// export const addTodo = (dataForId) => async(dispatch) => {\n//    axios.post(`http://localhost:4000/holiday`,JSON.stringify(dataForId)).then((res) =>{\n//           let status={\n//               msg:\"Record inserted Succesfully\",\n//               color:\"green\"\n//           }\n//          dispatch(addTodo(res.data))\n//       })\n//   };\n// // //read the data\n//  export const readTodo = (id )=> async(dispatch) => {\n//             axios.get(`http://localhost:4000/holiday/${id}`).then((res) => {\n//              dispatch(setForID(res.data.Data))\n//         })  \n//         .catch((error)=>{\n//             let status ={\n//                 msg:\"Record not there for this particular id.\",\n//                 color:\"red\",\n//             }\n//             dispatch(setStatus(status));\n//         })\n//      }; \n//  //update\n//  export const updateTodo =(id,dataForId) =>async(dispatch) =>{\n//      axios.put(`http://localhost:4000/holiday/${id}`,JSON.stringify(dataForId)).then((res) =>{\n//          let status={\n//              msg:\"record updated Successfully\",\n//              color:\"green\"\n//          }\n//          dispatch(setStatus(status));\n//      })\n//      .catch((error)=>{\n//          let status={\n//              msg:\"Duplicate data found\",\n//              color:\"red\",\n//          };\n//          dispatch(setStatus(status));\n//      });\n//  } \n//  //delete\n//  export const deleteTodo =(id,year) =>async(dispatch) =>  {\n//      axios.delete(`http://localhost:4000/holiday/${id}`).then((res) =>{\n//          dispatch(getHolidays(year));\n//      })\n//      .catch((error)=>{\n//          let status={\n//              msg:\"Data not deleted successfully\",\n//              color:\"red\"\n//          };\n//          dispatch(setStatus(status));\n//      });\n//  };\n// export default holidaySlice.reducer;","map":{"version":3,"sources":["/Users/sindhurin/development/quadacademy/task-11B/src/slice/test.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import { createSlice } from \"@reduxjs/toolkit\";\n// import axios from \"axios\";\n// import moment from \"moment\";\n\n// const currentYear = moment().format(\"YYYY\");\n// const today = parseInt(currentYear);\n// const initialState={\n//     year:today,\n//     isHolidayListNotValid:0,\n//     isviewmode:1,\n//     isSaveMode:0,\n//     holidays:[],\n//     status:{\n//         message:\"\",\n//         color:\"\"\n//     },\n//     dataforId:{\n//         id:\"\",\n//         location:\"\",\n//         type:\"\",\n//         date:\"\",\n//         description:\"\"\n//     }\n// };\n// //slice\n// const holidaySlice = createSlice({\n//     name: \"holidays\",\n//     initialState,\n//     reducers: {\n//         getHolidays(state, action) {\n//             state.year = action.payload;\n//         },\n//         setHolidays(state,action){\n//           state.holidays = action.payload;\n//         },\n//         setForID(state,action){\n//             console.log(\"action.payload\",action)\n//             state.dataforId =action.payload;\n//         },\n//         setStatus(state,action){\n//            state.status.msg=action.payload.msg;\n//            state.status.color=action.payload.color;\n//         }\n//     }\n// });\n\n// export const { getHolidays,setHolidays,setForID,setStatus} = holidaySlice.actions;\n\n\n// //Actions\n// export const fetchUsers = (year) => async (dispatch) => {\n    \n//     if (typeof year === \"undefined\") {\n//         year = moment().year();\n//     }\n//     axios.get(`http://localhost:4000/holiday/year/${year}`).then((res) => {\n//         dispatch(setholidays(res.data.Data));\n//         dispatch(getHolidays(year));\n//         dispatch(\n//             setId({\n//                 id:\"\",\n//                 location:\"ALL\",\n//                 type:\"F\",\n//                 date:\"\",\n//                 description:\"\",\n//             })\n//         );\n//         dispatch(setStatus({msg:\"\",color:\"\"}));\n//     })\n//     .catch((error) =>{\n//         dispatch(setHolidays([]));\n//         dispatch(getHolidays(year));\n//     })\n    \n// };\n\n//  //post \n// export const addTodo = (dataForId) => async(dispatch) => {\n    \n//    axios.post(`http://localhost:4000/holiday`,JSON.stringify(dataForId)).then((res) =>{\n//           let status={\n//               msg:\"Record inserted Succesfully\",\n//               color:\"green\"\n//           }\n//          dispatch(addTodo(res.data))\n      \n//       })\n     \n//   };\n\n// // //read the data\n\n//  export const readTodo = (id )=> async(dispatch) => {\n//             axios.get(`http://localhost:4000/holiday/${id}`).then((res) => {\n//              dispatch(setForID(res.data.Data))\n//         })  \n//         .catch((error)=>{\n//             let status ={\n//                 msg:\"Record not there for this particular id.\",\n//                 color:\"red\",\n//             }\n//             dispatch(setStatus(status));\n//         })\n//      }; \n\n     \n    \n//  //update\n//  export const updateTodo =(id,dataForId) =>async(dispatch) =>{\n//      axios.put(`http://localhost:4000/holiday/${id}`,JSON.stringify(dataForId)).then((res) =>{\n//          let status={\n//              msg:\"record updated Successfully\",\n//              color:\"green\"\n//          }\n//          dispatch(setStatus(status));\n//      })\n//      .catch((error)=>{\n//          let status={\n//              msg:\"Duplicate data found\",\n//              color:\"red\",\n//          };\n//          dispatch(setStatus(status));\n//      });\n//  } \n//  //delete\n//  export const deleteTodo =(id,year) =>async(dispatch) =>  {\n//      axios.delete(`http://localhost:4000/holiday/${id}`).then((res) =>{\n//          dispatch(getHolidays(year));\n//      })\n//      .catch((error)=>{\n//          let status={\n//              msg:\"Data not deleted successfully\",\n//              color:\"red\"\n//          };\n//          dispatch(setStatus(status));\n//      });\n//  };\n\n// export default holidaySlice.reducer;\n"]},"metadata":{},"sourceType":"module"}