{"ast":null,"code":"var _jsxFileName = \"/Users/sindhurin/development/quadacademy/task-11B/src/component/HolidayPage.js\",\n    _s = $RefreshSig$();\n\n// import React from \"react\";\n// import {useFormik} from \"formik\";\n// import * as Yup from \"yup\";\n// import { makeStyles } from '@material-ui/core';\n// import Grid from \"@material-ui/core/Grid\";\n// import Box from \"@material-ui/core/Box\";\n// import TextField from '@material-ui/core/TextField';\n// import InputLabel from '@material-ui/core/InputLabel';\n// import Button from '@material-ui/core/Button';\n// import SaveIcon from '@material-ui/icons/Save';\n// import Link from \"@material-ui/core/Link\";\n// const useStyles = makeStyles((theme) => ({\n//   button: {\n//     margin: theme.spacing(1),\n//   },\n//   root: {\n//     justifyContent: 'center',\n//     pb: '3'\n//   },\n//   inputLabel: {\n//     paddingLeft: '30%',    \n//   },\n//   textField: {\n//     margin: '7'\n//   }\n// }))\n// const type = [\n//   {\n//     label:'Select',\n//   },\n//   {\n//     label: 'Optional',\n//   },\n//   {\n//     label: 'Fixed',\n//   },\n// ]\n// const Location = [\n//   {\n//     label:'Select',\n//   },\n//   {\n//     label: 'All Locations'\n//   },\n//   {\n//     label: 'Bettendorf,IA'\n//   },\n//   {\n//     label: 'India'\n//   }\n// ]\n// const defaultProps = {\n//   bgcolor: 'background.paper',\n//   m: 1,\n//   border: 1,\n//   style: { width: '65rem', height: '35rem' },\n// };\n// export default function Form() {\n//   const classes = useStyles();\n//   const formik = useFormik({\n//     initialValues :{\n//       date:'',\n//       location:'',\n//       type:'',\n//       description:'',\n//       isComplete:false\n//       },\n//       validationSchema: Yup.object({\n//         date:Yup.string().required(\"this field is required\").nullable(),\n//         location:Yup.string().required(\"this field is required\").nullable(),\n//         type:Yup.string().required(\"this field is required\").nullable(),\n//         description:Yup.string().required(\"this field is required\").nullable(),\n//       }),\n//       onSubmit:values => {\n//         alert(JSON.stringify(values, null, 2));\n//       }\n//   });\n//   return (\n//     <form onSubmit={formik.handleSubmit}>\n//             <Box display=\"flex\" justifyContent=\"center\" border={1} {...defaultProps}  px={2} pt={5} pb={4}>\n//                       <Grid container spacing={3}>\n//                         <Grid item xs={2}>\n//                           <InputLabel htmlFor=\"Holiday Id\" margin=\"dense\" varient=\"outlined\" className={classes.inputLabel} >Holiday Id:</InputLabel>\n//                         </Grid>\n//                         <Grid item xs={10}>\n//                           <TextField\n//                           name=\"HolidayId\"\n//                             id=\"outlined-full-width\"\n//                             value=\"#\"\n//                             style={{ margin: 1 }}\n//                             fullWidth\n//                             margin=\"normal\"\n//                             InputLabelProps={{\n//                               shrink: true,\n//                             }}\n//                             variant=\"outlined\"\n//                           />\n//                         </Grid>\n//                         <Grid item xs={2}>\n//                           <InputLabel htmlFor=\"Date\" className={classes.inputLabel} >Date:</InputLabel>\n//                         </Grid>\n//                         <Grid item xs={10}>\n//                          <TextField\n//                           id=\"date\"\n//                           name=\"date\"\n//                           type=\"date\"\n//                           onChange={formik.handleChange}\n//                            value={formik.values.date}\n//                           style={{ margin: 1 }}\n//                           format=\"MM/dd/yyyy\"\n//                           fullWidth\n//                           margin=\"normal\"\n//                           InputLabelProps={{\n//                             shrink: true,\n//                           }}\n//                           variant=\"outlined\"\n//                         />\n//                        </Grid>\n//                         <Grid item xs={2}>\n//                           <InputLabel htmlFor=\"location\" className={classes.inputLabel} >Location:</InputLabel>\n//                         </Grid>\n//                         <Grid item xs={10}>\n//                           <TextField\n//                             id=\"location\"\n//                             name=\"location\"\n//                             type=\"text\"\n//                            onChange={formik.handleChange}\n//                            value={formik.values.location}\n//                             select\n//                             SelectProps={{\n//                               native: true,\n//                             }}\n//                             style={{ marginRight: 1 }}\n//                             variant=\"filled\"\n//                             fullWidth\n//                           >\n//                             {Location.map((option) => (\n//                               <option key={option.value} value={option.value}>\n//                                 {option.label}\n//                               </option>\n//                             ))}\n//                           </TextField><br></br>\n//                         </Grid>\n//                         <Grid item xs={2}>\n//                           <InputLabel htmlFor=\"type\" className={classes.inputLabel} >Holiday Type:</InputLabel>\n//                         </Grid>\n//                         <Grid item xs={10}>\n//                           <TextField\n//                             id=\"type\"\n//                             name=\"type\"\n//                             type=\"text\"\n//                            onChange={formik.handleChange}\n//                            value={formik.values.type}\n//                             select\n//                             style={{ marginRight: 1 }}\n//                             SelectProps={{\n//                               native: true,\n//                             }}\n//                             variant=\"filled\"\n//                             fullWidth\n//                           >\n//                             {type.map((option) => (\n//                               <option key={option.value} value={option.value}>\n//                                 {option.label}\n//                               </option>\n//                             ))}\n//                           </TextField>\n//                         </Grid>\n//                         <Grid item xs={2}>\n//                           <InputLabel htmlFor=\"description\" className={classes.inputLabel} >Description:</InputLabel>\n//                         </Grid>\n//                         <Grid item xs={10}>\n//                           <TextField\n//                             id=\"description\"\n//                             name=\"desciption\"\n//                             type=\"text\"\n//                             onChange={formik.handleChange}\n//                             values={formik.values.description}\n//                             style={{ marginRight: 1 }}\n//                             fullWidth\n//                             margin=\"normal\"\n//                             InputLabelProps={{\n//                               shrink: true,\n//                             }}\n//                             variant=\"outlined\"\n//                           />\n//                         </Grid>\n//                         <Grid item xs={12} sm={12} md={4} lg={4}\n//                           style={{\n//                             textAlign: 'center'\n//                           }}\n//                         >\n//                           <Button>\n//                           </Button>\n//                         </Grid>\n//                         <Link href='/holiday'>\n//                           <Button\n//                             variant=\"contained\"\n//                             color=\"primary\"\n//                             style={{ margin: '2 auto', display: \"flex\" }}\n//                             type=\"submit\"\n//                             startIcon={<SaveIcon />}\n//                           >\n//                             Save\n//                           </Button>\n//                         </Link>\n//                         <Link href='/'>\n//                           <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }} >Goto:Holidays</Button>\n//                           </Link>\n//                        {/*<Link href='/holiday/:id'>\n//                           <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }}>Switch To update</Button>\n//                         </Link>\n//                         <Link href='/holiday/:id'>\n//                           <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }}>Delete</Button>\n//                         </Link>\n//                         <Link href='/holiday/:id'>\n//                           <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }}>Switch to view</Button>\n//                         </Link> */}\n//                      </Grid>\n//                </Box>\n//               </form>\n//            )}\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      full_name: \"\",\n      email: \"\",\n      password: \"\",\n      confirm_password: \"\"\n    },\n    validationSchema: Yup.object({\n      full_name: Yup.string().min(2, \"Mininum 2 characters\").max(15, \"Maximum 15 characters\").required(\"Required!\"),\n      email: Yup.string().email(\"Invalid email format\").required(\"Required!\"),\n      password: Yup.string().min(8, \"Minimum 8 characters\").required(\"Required!\"),\n      confirm_password: Yup.string().oneOf([Yup.ref(\"password\")], \"Password's not match\").required(\"Required!\")\n    }),\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Validation with Formik + Yup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"full_name\",\n          value: formik.values.full_name,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), formik.errors.full_name && formik.touched.full_name && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formik.errors.full_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formik.values.email,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), formik.errors.email && formik.touched.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formik.values.password,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), formik.errors.password && formik.touched.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formik.errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"confirm_password\",\n          value: formik.values.confirm_password,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), formik.errors.confirm_password && formik.touched.confirm_password && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formik.errors.confirm_password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sindhurin/development/quadacademy/task-11B/src/component/HolidayPage.js"],"names":["React","useFormik","Yup","App","formik","initialValues","full_name","email","password","confirm_password","validationSchema","object","string","min","max","required","oneOf","ref","onSubmit","values","alert","JSON","stringify","handleSubmit","handleChange","errors","touched"],"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","sourcesContent":["// import React from \"react\";\n// import {useFormik} from \"formik\";\n// import * as Yup from \"yup\";\n// import { makeStyles } from '@material-ui/core';\n// import Grid from \"@material-ui/core/Grid\";\n// import Box from \"@material-ui/core/Box\";\n// import TextField from '@material-ui/core/TextField';\n// import InputLabel from '@material-ui/core/InputLabel';\n// import Button from '@material-ui/core/Button';\n// import SaveIcon from '@material-ui/icons/Save';\n// import Link from \"@material-ui/core/Link\";\n\n// const useStyles = makeStyles((theme) => ({\n//   button: {\n//     margin: theme.spacing(1),\n//   },\n//   root: {\n//     justifyContent: 'center',\n//     pb: '3'\n//   },\n//   inputLabel: {\n//     paddingLeft: '30%',    \n//   },\n//   textField: {\n//     margin: '7'\n//   }\n// }))\n// const type = [\n//   {\n//     label:'Select',\n//   },\n//   {\n\n//     label: 'Optional',\n//   },\n//   {\n\n//     label: 'Fixed',\n//   },\n// ]\n// const Location = [\n//   {\n//     label:'Select',\n//   },\n//   {\n//     label: 'All Locations'\n//   },\n//   {\n//     label: 'Bettendorf,IA'\n//   },\n//   {\n//     label: 'India'\n//   }\n// ]\n// const defaultProps = {\n//   bgcolor: 'background.paper',\n//   m: 1,\n//   border: 1,\n//   style: { width: '65rem', height: '35rem' },\n// };\n\n\n\n// export default function Form() {\n//   const classes = useStyles();\n//   const formik = useFormik({\n//     initialValues :{\n//       date:'',\n//       location:'',\n//       type:'',\n//       description:'',\n//       isComplete:false\n//       },\n//       validationSchema: Yup.object({\n//         date:Yup.string().required(\"this field is required\").nullable(),\n//         location:Yup.string().required(\"this field is required\").nullable(),\n//         type:Yup.string().required(\"this field is required\").nullable(),\n//         description:Yup.string().required(\"this field is required\").nullable(),\n//       }),\n//       onSubmit:values => {\n//         alert(JSON.stringify(values, null, 2));\n//       }\n//   });\n//   return (\n//     <form onSubmit={formik.handleSubmit}>\n//             <Box display=\"flex\" justifyContent=\"center\" border={1} {...defaultProps}  px={2} pt={5} pb={4}>\n//                       <Grid container spacing={3}>\n                      \n//                         <Grid item xs={2}>\n//                           <InputLabel htmlFor=\"Holiday Id\" margin=\"dense\" varient=\"outlined\" className={classes.inputLabel} >Holiday Id:</InputLabel>\n//                         </Grid>\n//                         <Grid item xs={10}>\n//                           <TextField\n//                           name=\"HolidayId\"\n//                             id=\"outlined-full-width\"\n//                             value=\"#\"\n//                             style={{ margin: 1 }}\n                          \n//                             fullWidth\n//                             margin=\"normal\"\n//                             InputLabelProps={{\n//                               shrink: true,\n//                             }}\n//                             variant=\"outlined\"\n//                           />\n//                         </Grid>\n            \n//                         <Grid item xs={2}>\n//                           <InputLabel htmlFor=\"Date\" className={classes.inputLabel} >Date:</InputLabel>\n//                         </Grid>\n//                         <Grid item xs={10}>\n//                          <TextField\n//                           id=\"date\"\n//                           name=\"date\"\n//                           type=\"date\"\n//                           onChange={formik.handleChange}\n//                            value={formik.values.date}\n                          \n//                           style={{ margin: 1 }}\n//                           format=\"MM/dd/yyyy\"\n//                           fullWidth\n//                           margin=\"normal\"\n//                           InputLabelProps={{\n//                             shrink: true,\n//                           }}\n//                           variant=\"outlined\"\n//                         />\n//                        </Grid>\n//                         <Grid item xs={2}>\n//                           <InputLabel htmlFor=\"location\" className={classes.inputLabel} >Location:</InputLabel>\n//                         </Grid>\n//                         <Grid item xs={10}>\n//                           <TextField\n//                             id=\"location\"\n//                             name=\"location\"\n//                             type=\"text\"\n//                            onChange={formik.handleChange}\n//                            value={formik.values.location}\n//                             select\n                         \n//                             SelectProps={{\n//                               native: true,\n//                             }}\n//                             style={{ marginRight: 1 }}\n//                             variant=\"filled\"\n//                             fullWidth\n                            \n//                           >\n//                             {Location.map((option) => (\n//                               <option key={option.value} value={option.value}>\n//                                 {option.label}\n//                               </option>\n//                             ))}\n                          \n//                           </TextField><br></br>\n//                         </Grid>\n//                         <Grid item xs={2}>\n//                           <InputLabel htmlFor=\"type\" className={classes.inputLabel} >Holiday Type:</InputLabel>\n//                         </Grid>\n//                         <Grid item xs={10}>\n//                           <TextField\n//                             id=\"type\"\n//                             name=\"type\"\n//                             type=\"text\"\n//                            onChange={formik.handleChange}\n//                            value={formik.values.type}\n//                             select\n//                             style={{ marginRight: 1 }}\n                         \n//                             SelectProps={{\n//                               native: true,\n//                             }}\n//                             variant=\"filled\"\n//                             fullWidth\n                            \n//                           >\n//                             {type.map((option) => (\n//                               <option key={option.value} value={option.value}>\n//                                 {option.label}\n//                               </option>\n//                             ))}\n                            \n//                           </TextField>\n//                         </Grid>\n//                         <Grid item xs={2}>\n//                           <InputLabel htmlFor=\"description\" className={classes.inputLabel} >Description:</InputLabel>\n//                         </Grid>\n//                         <Grid item xs={10}>\n//                           <TextField\n//                             id=\"description\"\n//                             name=\"desciption\"\n//                             type=\"text\"\n//                             onChange={formik.handleChange}\n//                             values={formik.values.description}\n                           \n//                             style={{ marginRight: 1 }}\n//                             fullWidth\n//                             margin=\"normal\"\n//                             InputLabelProps={{\n//                               shrink: true,\n//                             }}\n//                             variant=\"outlined\"\n                          \n//                           />\n                          \n//                         </Grid>\n            \n//                         <Grid item xs={12} sm={12} md={4} lg={4}\n//                           style={{\n//                             textAlign: 'center'\n//                           }}\n//                         >\n//                           <Button>\n            \n//                           </Button>\n//                         </Grid>\n//                         <Link href='/holiday'>\n//                           <Button\n//                             variant=\"contained\"\n//                             color=\"primary\"\n//                             style={{ margin: '2 auto', display: \"flex\" }}\n//                             type=\"submit\"\n//                             startIcon={<SaveIcon />}\n//                           >\n//                             Save\n//                           </Button>\n//                         </Link>\n//                         <Link href='/'>\n//                           <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }} >Goto:Holidays</Button>\n//                           </Link>\n//                        {/*<Link href='/holiday/:id'>\n//                           <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }}>Switch To update</Button>\n//                         </Link>\n//                         <Link href='/holiday/:id'>\n//                           <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }}>Delete</Button>\n//                         </Link>\n//                         <Link href='/holiday/:id'>\n//                           <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }}>Switch to view</Button>\n//                         </Link> */}\n                        \n//                      </Grid>\n            \n//                </Box>\n//               </form>\n//            )}\n           \n \nimport React from \"react\";\n\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\n\nexport default function App() {\n  const formik = useFormik({\n    initialValues: {\n      full_name: \"\",\n      email: \"\",\n      password: \"\",\n      confirm_password: \"\"\n    },\n    validationSchema: Yup.object({\n      full_name: Yup.string()\n        .min(2, \"Mininum 2 characters\")\n        .max(15, \"Maximum 15 characters\")\n        .required(\"Required!\"),\n      email: Yup.string()\n        .email(\"Invalid email format\")\n        .required(\"Required!\"),\n      password: Yup.string()\n        .min(8, \"Minimum 8 characters\")\n        .required(\"Required!\"),\n      confirm_password: Yup.string()\n        .oneOf([Yup.ref(\"password\")], \"Password's not match\")\n        .required(\"Required!\")\n    }),\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n\n  return (\n    <div className=\"App\">\n      <h1>Validation with Formik + Yup</h1>\n\n      <form onSubmit={formik.handleSubmit}>\n        <div>\n          <label>Full Name</label>\n          <input\n            type=\"text\"\n            name=\"full_name\"\n            value={formik.values.full_name}\n            onChange={formik.handleChange}\n          />\n          {formik.errors.full_name && formik.touched.full_name && (\n            <p>{formik.errors.full_name}</p>\n          )}\n        </div>\n        <div>\n          <label>Email</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n          />\n          {formik.errors.email && formik.touched.email && (\n            <p>{formik.errors.email}</p>\n          )}\n        </div>\n        <div>\n          <label>Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n          />\n          {formik.errors.password && formik.touched.password && (\n            <p>{formik.errors.password}</p>\n          )}\n        </div>\n        <div>\n          <label>Confirm Password</label>\n          <input\n            type=\"password\"\n            name=\"confirm_password\"\n            value={formik.values.confirm_password}\n            onChange={formik.handleChange}\n          />\n          {formik.errors.confirm_password &&\n            formik.touched.confirm_password && (\n              <p>{formik.errors.confirm_password}</p>\n            )}\n        </div>\n        <div>\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}