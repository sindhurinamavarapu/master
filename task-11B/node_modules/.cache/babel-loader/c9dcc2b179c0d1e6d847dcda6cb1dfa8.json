{"ast":null,"code":"// import React,{ useEffect ,useState}  from \"react\";\n// import {useFormik} from \"formik\";\n// import {useParams} from \"react-router-dom\";\n// import * as Yup from \"yup\";\n// import { makeStyles } from '@material-ui/core';\n// import Grid from \"@material-ui/core/Grid\";\n// import Box from \"@material-ui/core/Box\";\n// import TextField from '@material-ui/core/TextField';\n// import InputLabel from '@material-ui/core/InputLabel';\n// import Button from '@material-ui/core/Button';\n// import SaveIcon from '@material-ui/icons/Save';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import Link from \"@material-ui/core/Link\";\n// import {addTodo} from '../slice/holidaySlice';\n// import {id,readTodo} from '../slice/holidaySlice';\n// import { useDispatch } from \"react-redux\";\n// import { useSelector } from \"react-redux\";\n// import moment from \"moment\";\n// import { holidayListSliceState } from \"../slice/holidaySlice\";\n// import { render } from \"@testing-library/react\";\n// const actions =(type) =>{\n//   let  Button=\"\"\n//     switch(type) {\n//         case \"ADD\":\n//           Button=\"Save\"\n//           break;\n//         case \"Read\":\n//            Button=\"Switch to Update\" \n//            break;\n//         case \"UPDATE\":\n//             Button=\"Delete && Switch to View && Save\"\n//             break;\n//         default:\n//              Button=\"Goto Holidays\"\n//     }\n//     return Button;\n// }\n// const useStyles = makeStyles((theme) => ({\n//   button: {\n//     margin: theme.spacing(1),\n//   },\n//   root: {\n//     justifyContent: 'center',\n//     pb: '3'\n//   },\n//   inputLabel: {\n//     paddingLeft: '30%',    \n//   },\n//   textField: {\n//     margin: '7'\n//   }\n// }))\n// const type = [\n//   {\n//     label:'Select',\n//   },\n//   {\n//     label: 'Optional',\n//   },\n//   {\n//     label: 'Fixed',\n//   },\n// ]\n// const location = [\n//   {\n//     label:'Select',\n//   },\n//   {\n//     label: 'All Locations'\n//   },\n//   {\n//     label: 'Bettendorf,IA'\n//   },\n//   {\n//     label: 'India'\n//   }\n// ]\n// const defaultProps = {\n//   bgcolor: 'background.paper',\n//   m: 1,\n//   border: 1,\n//   style: { width: '65rem', height: '35rem' },\n// };\n// export default function App() {\n//   const classes = useStyles();\n//   const currentYear = moment().format(\"YYYY\");\n//   const today = parseInt(currentYear);\n//   const dispatch = useDispatch();\n//   // const holidayId=useSelector((state) =>state.holidaySlice.holidayId);\n//   const holidays = useSelector(holidayListSliceState);\n//   console.log(holidays,\"holidays\");\n//   //for getting the data\n//  const {id}= useParams();\n//     console.log(id);\n//   //    useEffect(()=>{\n//   //   dispatch(readTodo(id))\n//   // },[id])\n//   const [todo,setTodo] = useState({\n//     id:\"\",\n//     date:\"\",\n//     description:\"\",\n//     type:\"\",\n//     location:\"\",\n//     isComplete:false\n//   })\n//   // useEffect(()=>{\n//   //   dispatch(readTodo(id))\n//   // },[id])\n//   console.log(todo,\"todo\",setTodo,\"setTodo\");\n//   const formik = useFormik({\n//    initialValues: {\n//       date:'',\n//       location:'',\n//       type:'',\n//       description:'',\n//       isComplete:false\n//     },\n//    validationSchema: Yup.object({\n//       date:Yup.string().required(\"Required!\"),\n//       location:Yup.string().required(\"Required!\").nullable(),\n//       type:Yup.string().required(\"Required!\").nullable(),\n//       description:Yup.string().required(\"Required!\").nullable(),\n//     }),\n//     onSubmit: (values) => {\n//       console.log(values,\"values\");\n//        dispatch(addTodo(values));\n//       //update the state\n//       // setTodo({\n//       //   date:\"\",\n//       //   description:\"\",\n//       //   type:\"\",\n//       //   location:\"\",\n//       //   isComplete:false\n//       // })\n//       //  alert(JSON.stringify(values, null, 2));\n//     },\n//   })\n//   return (\n//     <div>\n//     <form  onSubmit={formik.handleSubmit}>\n//                 <Box display=\"flex\" justifyContent=\"center\" border={1} {...defaultProps}  px={2} pt={5} pb={4}>\n//                           <Grid container spacing={3}>\n//                             <Grid item xs={2}>\n//                               <InputLabel htmlFor=\"Holiday Id\" margin=\"dense\" varient=\"outlined\" className={classes.inputLabel} >Holiday Id:</InputLabel>\n//                             </Grid>\n//                             <Grid item xs={10}>\n//                               <TextField\n//                               name=\"HolidayId\"\n//                                 id=\"outlined-full-width\"\n//                                 value=\"#\"\n//                                 style={{ margin: 1 }}\n//                                 fullWidth\n//                                 margin=\"normal\"\n//                                 InputLabelProps={{\n//                                   shrink: true,\n//                                 }}\n//                                 variant=\"outlined\"\n//                               />\n//                             </Grid>\n//                             <Grid item xs={2}>\n//                               <InputLabel htmlFor=\"Date\" className={classes.inputLabel} >Date:</InputLabel>\n//                             </Grid>\n//                             <Grid item xs={10}>\n//                              <TextField\n//                               id=\"date\"\n//                               name=\"date\"\n//                               type=\"date\"\n//                               onChange={formik.handleChange}\n//                                value={formik.values.date}\n//                               style={{ margin: 1 }}\n//                               format=\"MM/dd/yyyy\"\n//                               fullWidth\n//                               margin=\"normal\"\n//                               InputLabelProps={{\n//                                 shrink: true,\n//                               }}\n//                               variant=\"outlined\"\n//                             />\n//                             {formik.errors.date && formik.touched.date && (\n//                               <p>{formik.errors.date}</p>\n//                             )}\n//                            </Grid>\n//                             <Grid item xs={2}>\n//                               <InputLabel htmlFor=\"location\" className={classes.inputLabel} >Location:</InputLabel>\n//                             </Grid>\n//                             <Grid item xs={10}>\n//                               <TextField\n//                                 id=\"location\"\n//                                 name=\"location\"\n//                                 type=\"text\"\n//                                onChange={formik.handleChange}\n//                                 value={formik.values.location}\n//                                 select\n//                                 SelectProps={{\n//                                   native: true,\n//                                 }}\n//                                 style={{ marginRight: 1 }}\n//                                 variant=\"filled\"\n//                                 fullWidth\n//                               >\n//                                 {location.map((option) => (\n//                                   <option key={option.value} value={option.value}>\n//                                     {option.label}\n//                                   </option>\n//                                 ))}\n//                               </TextField><br></br>\n//                               {formik.errors.location && formik.touched.location && (\n//                                 <p>{formik.errors.location}</p>\n//                               )}\n//                             </Grid>\n//                             <Grid item xs={2}>\n//                               <InputLabel htmlFor=\"type\" className={classes.inputLabel} >Holiday Type:</InputLabel>\n//                             </Grid>\n//                             <Grid item xs={10}>\n//                               <TextField\n//                                 id=\"type\"\n//                                 name=\"type\"\n//                                 type=\"text\"\n//                                onChange={formik.handleChange}\n//                                value={formik.values.type}\n//                                 select\n//                                 style={{ marginRight: 1 }}\n//                                 SelectProps={{\n//                                   native: true,\n//                                 }}\n//                                 variant=\"filled\"\n//                                 fullWidth\n//                               >\n//                                 {type.map((option) => (\n//                                   <option key={option.value} value={option.value}>\n//                                     {option.label}\n//                                   </option>\n//                                 ))}\n//                               </TextField>\n//                               {formik.errors.type && formik.touched.type&& (\n//                                 <p>{formik.errors.type}</p>\n//                               )}\n//                             </Grid>\n//                             <Grid item xs={2}>\n//                               <InputLabel htmlFor=\"description\" className={classes.inputLabel} >Description:</InputLabel>\n//                             </Grid>\n//                             <Grid item xs={10}>\n//                               <TextField\n//                                 id=\"description\"\n//                                 name=\"description\"\n//                                 type=\"text\"\n//                                 onChange={formik.handleChange}\n//                                 values={formik.values.description}\n//                                 style={{ marginRight: 1 }}\n//                                 fullWidth\n//                                 margin=\"normal\"\n//                                 InputLabelProps={{\n//                                   shrink: true,\n//                                 }}\n//                                 variant=\"outlined\"\n//                               />\n//                               {formik.errors.description && formik.touched.description && (\n//                                 <p>{formik.errors.description}</p>\n//                               )}\n//                             </Grid>\n//                             <Grid item xs={12} sm={12} md={4} lg={4}\n//                               style={{\n//                                 textAlign: 'center'\n//                               }}\n//                             >\n//                               <Button>\n//                               </Button>\n//                             </Grid>\n//                             <Link href='/holiday'>\n//                               <Button\n//                                 variant=\"contained\"\n//                                 color=\"primary\"\n//                                 style={{ margin: '2 auto', display: \"flex\" }}\n//                                 type=\"submit\"\n//                                 startIcon={<SaveIcon />}\n//                               >\n//                                 Save\n//                               </Button>\n//                             </Link>\n//                             <Link href='/'>\n//                               <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }} >Goto:Holidays</Button>\n//                               </Link>\n//                           {/* <Link href='/holiday/:id?type=\"read\"'>\n//                           //  {actionType=\"read\" && (\n//                           //     <Button variant=\"contained\"  color=\"primary\" style={{ margin: '3 auto', display: \"flex\" }}>Switch To update</Button>\n//                           //      <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }} >Goto:Holidays</Button>\n//                           //     </Link>\n//                             <Link href='/holiday/:id?type=\"update\"'>\n//                            <Button\n//                           //     variant=\"contained\"\n//                           //     color=\"secondary\"\n//                           //     startIcon={<DeleteIcon />}\n//                           //       >\n//                           //      Delete\n//                           //    </Button>\n//                           //    </Link>\n//                           //   <Link href='/holiday/:id?type=\"update\"'>\n//                           //     <Button variant=\"contained\" color=\"primary\" style={{ margin: '3 auto', display: \"flex\"}}>Switch to view</Button>\n//                             //   </Link> */}\n//                          </Grid>\n//                    </Box>\n//                   </form>\n//                   </div>\n//                )\n//        }","map":{"version":3,"sources":["/Users/sindhurin/development/quadacademy/task-11B/src/component/HolidayPage.js"],"names":[],"mappingssourcesContent":["// import React,{ useEffect ,useState}  from \"react\";\n// import {useFormik} from \"formik\";\n// import {useParams} from \"react-router-dom\";\n// import * as Yup from \"yup\";\n// import { makeStyles } from '@material-ui/core';\n// import Grid from \"@material-ui/core/Grid\";\n// import Box from \"@material-ui/core/Box\";\n// import TextField from '@material-ui/core/TextField';\n// import InputLabel from '@material-ui/core/InputLabel';\n// import Button from '@material-ui/core/Button';\n// import SaveIcon from '@material-ui/icons/Save';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import Link from \"@material-ui/core/Link\";\n// import {addTodo} from '../slice/holidaySlice';\n// import {id,readTodo} from '../slice/holidaySlice';\n// import { useDispatch } from \"react-redux\";\n// import { useSelector } from \"react-redux\";\n// import moment from \"moment\";\n// import { holidayListSliceState } from \"../slice/holidaySlice\";\n// import { render } from \"@testing-library/react\";\n\n\n// const actions =(type) =>{\n//   let  Button=\"\"\n//     switch(type) {\n//         case \"ADD\":\n//           Button=\"Save\"\n//           break;\n//         case \"Read\":\n//            Button=\"Switch to Update\" \n//            break;\n//         case \"UPDATE\":\n//             Button=\"Delete && Switch to View && Save\"\n//             break;\n//         default:\n//              Button=\"Goto Holidays\"\n//     }\n//     return Button;\n// }\n    \n// const useStyles = makeStyles((theme) => ({\n//   button: {\n//     margin: theme.spacing(1),\n//   },\n//   root: {\n//     justifyContent: 'center',\n//     pb: '3'\n//   },\n//   inputLabel: {\n//     paddingLeft: '30%',    \n//   },\n//   textField: {\n//     margin: '7'\n//   }\n// }))\n// const type = [\n//   {\n//     label:'Select',\n//   },\n//   {\n\n//     label: 'Optional',\n//   },\n//   {\n\n//     label: 'Fixed',\n//   },\n// ]\n// const location = [\n//   {\n//     label:'Select',\n//   },\n//   {\n//     label: 'All Locations'\n//   },\n//   {\n//     label: 'Bettendorf,IA'\n//   },\n//   {\n//     label: 'India'\n//   }\n// ]\n// const defaultProps = {\n//   bgcolor: 'background.paper',\n//   m: 1,\n//   border: 1,\n//   style: { width: '65rem', height: '35rem' },\n// };\n\n\n\n// export default function App() {\n//   const classes = useStyles();\n//   const currentYear = moment().format(\"YYYY\");\n//   const today = parseInt(currentYear);\n//   const dispatch = useDispatch();\n//   // const holidayId=useSelector((state) =>state.holidaySlice.holidayId);\n//   const holidays = useSelector(holidayListSliceState);\n\n//   console.log(holidays,\"holidays\");\n  \n//   //for getting the data\n  \n//  const {id}= useParams();\n//     console.log(id);\n \n//   //    useEffect(()=>{\n//   //   dispatch(readTodo(id))\n//   // },[id])\n//   const [todo,setTodo] = useState({\n//     id:\"\",\n//     date:\"\",\n//     description:\"\",\n//     type:\"\",\n//     location:\"\",\n//     isComplete:false\n\n//   })\n//   // useEffect(()=>{\n//   //   dispatch(readTodo(id))\n//   // },[id])\n//   console.log(todo,\"todo\",setTodo,\"setTodo\");\n//   const formik = useFormik({\n//    initialValues: {\n     \n//       date:'',\n//       location:'',\n//       type:'',\n//       description:'',\n//       isComplete:false\n     \n//     },\n//    validationSchema: Yup.object({\n//       date:Yup.string().required(\"Required!\"),\n//       location:Yup.string().required(\"Required!\").nullable(),\n//       type:Yup.string().required(\"Required!\").nullable(),\n//       description:Yup.string().required(\"Required!\").nullable(),\n//     }),\n//     onSubmit: (values) => {\n//       console.log(values,\"values\");\n//        dispatch(addTodo(values));\n//       //update the state\n//       // setTodo({\n//       //   date:\"\",\n//       //   description:\"\",\n//       //   type:\"\",\n//       //   location:\"\",\n//       //   isComplete:false\n//       // })\n//       //  alert(JSON.stringify(values, null, 2));\n      \n//     },\n \n//   })\n\n//   return (\n//     <div>\n\n//     <form  onSubmit={formik.handleSubmit}>\n//                 <Box display=\"flex\" justifyContent=\"center\" border={1} {...defaultProps}  px={2} pt={5} pb={4}>\n//                           <Grid container spacing={3}>\n                          \n//                             <Grid item xs={2}>\n//                               <InputLabel htmlFor=\"Holiday Id\" margin=\"dense\" varient=\"outlined\" className={classes.inputLabel} >Holiday Id:</InputLabel>\n//                             </Grid>\n//                             <Grid item xs={10}>\n//                               <TextField\n//                               name=\"HolidayId\"\n//                                 id=\"outlined-full-width\"\n//                                 value=\"#\"\n//                                 style={{ margin: 1 }}\n                              \n//                                 fullWidth\n//                                 margin=\"normal\"\n//                                 InputLabelProps={{\n//                                   shrink: true,\n//                                 }}\n//                                 variant=\"outlined\"\n//                               />\n//                             </Grid>\n                \n//                             <Grid item xs={2}>\n//                               <InputLabel htmlFor=\"Date\" className={classes.inputLabel} >Date:</InputLabel>\n//                             </Grid>\n//                             <Grid item xs={10}>\n//                              <TextField\n//                               id=\"date\"\n//                               name=\"date\"\n//                               type=\"date\"\n//                               onChange={formik.handleChange}\n//                                value={formik.values.date}\n                              \n//                               style={{ margin: 1 }}\n//                               format=\"MM/dd/yyyy\"\n//                               fullWidth\n//                               margin=\"normal\"\n//                               InputLabelProps={{\n//                                 shrink: true,\n//                               }}\n//                               variant=\"outlined\"\n//                             />\n//                             {formik.errors.date && formik.touched.date && (\n//                               <p>{formik.errors.date}</p>\n//                             )}\n//                            </Grid>\n//                             <Grid item xs={2}>\n//                               <InputLabel htmlFor=\"location\" className={classes.inputLabel} >Location:</InputLabel>\n//                             </Grid>\n//                             <Grid item xs={10}>\n//                               <TextField\n//                                 id=\"location\"\n//                                 name=\"location\"\n//                                 type=\"text\"\n//                                onChange={formik.handleChange}\n//                                 value={formik.values.location}\n                              \n//                                 select\n                             \n//                                 SelectProps={{\n//                                   native: true,\n//                                 }}\n//                                 style={{ marginRight: 1 }}\n//                                 variant=\"filled\"\n//                                 fullWidth\n                                \n//                               >\n//                                 {location.map((option) => (\n//                                   <option key={option.value} value={option.value}>\n//                                     {option.label}\n//                                   </option>\n//                                 ))}\n                              \n//                               </TextField><br></br>\n//                               {formik.errors.location && formik.touched.location && (\n//                                 <p>{formik.errors.location}</p>\n//                               )}\n//                             </Grid>\n//                             <Grid item xs={2}>\n//                               <InputLabel htmlFor=\"type\" className={classes.inputLabel} >Holiday Type:</InputLabel>\n//                             </Grid>\n//                             <Grid item xs={10}>\n//                               <TextField\n//                                 id=\"type\"\n//                                 name=\"type\"\n//                                 type=\"text\"\n//                                onChange={formik.handleChange}\n//                                value={formik.values.type}\n                              \n//                                 select\n//                                 style={{ marginRight: 1 }}\n                             \n//                                 SelectProps={{\n//                                   native: true,\n//                                 }}\n//                                 variant=\"filled\"\n//                                 fullWidth\n                                \n//                               >\n//                                 {type.map((option) => (\n//                                   <option key={option.value} value={option.value}>\n//                                     {option.label}\n//                                   </option>\n//                                 ))}\n                                \n//                               </TextField>\n//                               {formik.errors.type && formik.touched.type&& (\n//                                 <p>{formik.errors.type}</p>\n//                               )}\n//                             </Grid>\n//                             <Grid item xs={2}>\n//                               <InputLabel htmlFor=\"description\" className={classes.inputLabel} >Description:</InputLabel>\n//                             </Grid>\n//                             <Grid item xs={10}>\n//                               <TextField\n//                                 id=\"description\"\n//                                 name=\"description\"\n//                                 type=\"text\"\n//                                 onChange={formik.handleChange}\n//                                 values={formik.values.description}\n              \n//                                 style={{ marginRight: 1 }}\n//                                 fullWidth\n//                                 margin=\"normal\"\n//                                 InputLabelProps={{\n//                                   shrink: true,\n//                                 }}\n//                                 variant=\"outlined\"\n                              \n//                               />\n//                               {formik.errors.description && formik.touched.description && (\n//                                 <p>{formik.errors.description}</p>\n//                               )}\n//                             </Grid>\n                \n//                             <Grid item xs={12} sm={12} md={4} lg={4}\n//                               style={{\n//                                 textAlign: 'center'\n//                               }}\n//                             >\n//                               <Button>\n                \n//                               </Button>\n//                             </Grid>\n//                             <Link href='/holiday'>\n//                               <Button\n//                                 variant=\"contained\"\n//                                 color=\"primary\"\n//                                 style={{ margin: '2 auto', display: \"flex\" }}\n//                                 type=\"submit\"\n//                                 startIcon={<SaveIcon />}\n//                               >\n//                                 Save\n//                               </Button>\n//                             </Link>\n//                             <Link href='/'>\n//                               <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }} >Goto:Holidays</Button>\n//                               </Link>\n                             \n//                           {/* <Link href='/holiday/:id?type=\"read\"'>\n//                           //  {actionType=\"read\" && (\n//                           //     <Button variant=\"contained\"  color=\"primary\" style={{ margin: '3 auto', display: \"flex\" }}>Switch To update</Button>\n//                           //      <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }} >Goto:Holidays</Button>\n//                           //     </Link>\n//                             <Link href='/holiday/:id?type=\"update\"'>\n//                            <Button\n//                           //     variant=\"contained\"\n//                           //     color=\"secondary\"\n                              \n//                           //     startIcon={<DeleteIcon />}\n//                           //       >\n//                           //      Delete\n//                           //    </Button>\n//                           //    </Link>\n//                           //   <Link href='/holiday/:id?type=\"update\"'>\n//                           //     <Button variant=\"contained\" color=\"primary\" style={{ margin: '3 auto', display: \"flex\"}}>Switch to view</Button>\n//                             //   </Link> */}\n                            \n//                          </Grid>\n                \n//                    </Box>\n//                   </form>\n//                   </div>\n//                )\n//        }   \n\n"]},"metadata":{},"sourceType":"module"}