{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nconst currentYear = moment().format(\"YYYY\");\nconst today = parseInt(currentYear); //slice\n\nconst holidaySlice = createSlice({\n  name: \"holidaySlice\",\n  initialState: {\n    year: today,\n    holidayData: [],\n    holidayList: {\n      id: \"\",\n      date: \"\",\n      location: \"\",\n      type: \"\",\n      description: \"\",\n      editIntialValue: {},\n      isEdit: true\n    }\n  },\n  reducers: {\n    setYear(state, action) {\n      state.year = action.payload;\n    },\n\n    getHolidays(state, action) {\n      state.holidayData = action.payload;\n    },\n\n    setHolidays(state, action) {\n      state.holidayData = action.payload;\n      state.editInitialValue = action.payload;\n    },\n\n    setForId(state, action) {\n      console.log(\"action\", action);\n      state.holidayList = action.payload;\n      console.log(\"state\", state.holidayList);\n    }\n\n  }\n});\nexport const {\n  getHolidays,\n  setHolidays,\n  setForId\n} = holidaySlice.actions; //Actions\n\nexport const fetchUsers = year => async dispatch => {\n  if (typeof year === \"undefined\") {\n    year = moment().year();\n  }\n\n  axios.get(`http://localhost:4000/holiday/year/${year}`).then(res => {\n    dispatch(setHolidays(res.data));\n    dispatch(getHolidays(res.data)); //  dispatch(\n    //      setForId({\n    //          id:\"\",\n    //          location:\"All\",\n    //          type:\"F\",\n    //          date:\"\",\n    //          description:\"\",\n    //      })\n    //  )\n  });\n}; //  //post \n\nexport const addTodo = holidayData => async dispatch => {\n  //console.log(\"holidayList\",holidayList);\n  axios.post(`http://localhost:4000/holiday`, holidayData).then(res => {\n    dispatch(setHolidays(res.data));\n    console.log(\"create\", res.data);\n  });\n}; // )}\n// //read the data\n\nexport const readTodo = id => async dispatch => {\n  axios.get(`http://localhost:4000/holiday/${id}`).then(res => {\n    console.log(\"read\", res.data.holidays);\n    dispatch(setForId(res.data.holidays));\n  });\n}; //update\n\nexport const updateTodo = (holidayList, id) => async dispatch => {\n  axios.put(`http://localhost:4000/holiday/${id}`, holidayList).then(res => {\n    dispatch(setForId(res.data));\n  });\n}; //delete\n\nexport const deleteTodo = (id, year) => async dispatch => {\n  axios.delete(`http://localhost:4000/holiday/${id}`).then(res => {\n    dispatch(fetchUsers(res.data));\n  });\n};\nexport const holidayListSliceState = state => state.holidaySlice.holidayData;\nexport const holidayListSliceId = state => state.holidaySlice.holidayList; //   console.log(\"holidayListId\",holidayListSliceState);\n\nexport default holidaySlice.reducer;","map":{"version":3,"sources":["/Users/sindhurin/development/quadacademy/task-11B/src/slice/holidaySlice.js"],"names":["createSlice","axios","moment","currentYear","format","today","parseInt","holidaySlice","name","initialState","year","holidayData","holidayList","id","date","location","type","description","editIntialValue","isEdit","reducers","setYear","state","action","payload","getHolidays","setHolidays","editInitialValue","setForId","console","log","actions","fetchUsers","dispatch","get","then","res","data","addTodo","post","readTodo","holidays","updateTodo","put","deleteTodo","delete","holidayListSliceState","holidayListSliceId","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nconst currentYear = moment().format(\"YYYY\");\nconst today = parseInt(currentYear);\n//slice\nconst holidaySlice = createSlice({\n    name: \"holidaySlice\",\n    initialState: {\n       year:today,\n       holidayData: [],\n       holidayList:{\n           id:\"\",\n           date:\"\",\n           location:\"\",\n           type:\"\",\n           description:\"\",\n           editIntialValue:{},\n           isEdit:true\n       },\n      \n\n     },\n    reducers: {\n        setYear(state,action){\n            state.year = action.payload;\n        },\n        getHolidays(state, action) {\n            state.holidayData = action.payload;\n        },\n        setHolidays(state,action){\n          \n            state.holidayData = action.payload;\n            state.editInitialValue=action.payload;\n        },\n        setForId(state,action){\n             console.log(\"action\",action)\n            state.holidayList =action.payload;\n             console.log(\"state\",state.holidayList)\n        },\n\n    }\n});\n\nexport const { getHolidays,setHolidays,setForId} = holidaySlice.actions;\n\n\n//Actions\nexport const fetchUsers = (year) => async (dispatch) => {\n    \n    if (typeof year === \"undefined\") {\n        year = moment().year();\n    }\n    axios.get(`http://localhost:4000/holiday/year/${year}`).then((res) => {\n         dispatch(setHolidays(res.data));\n         dispatch(getHolidays(res.data));\n        //  dispatch(\n        //      setForId({\n        //          id:\"\",\n        //          location:\"All\",\n        //          type:\"F\",\n        //          date:\"\",\n        //          description:\"\",\n        //      })\n        //  )\n       \n    });\n    \n};\n//  //post \n export const addTodo = (holidayData) => async(dispatch) => {\n      //console.log(\"holidayList\",holidayList);\n    \n        axios.post(`http://localhost:4000/holiday`,holidayData).then((res) =>{\n            \n           dispatch(setHolidays(res.data))\n           console.log(\"create\",res.data)\n           \n        })\n    }\n        // )}\n\n// //read the data\n\n export const readTodo = (id )=> async(dispatch) => {\n    \n            axios.get(`http://localhost:4000/holiday/${id}`).then((res) => {\n                 console.log(\"read\",res.data.holidays)\n                 \n             dispatch(setForId(res.data.holidays))\n             \n\n        })  \n     } \n    \n //update\n export const updateTodo =(holidayList,id) =>async(dispatch) =>{\n     axios.put(`http://localhost:4000/holiday/${id}`,holidayList).then((res) =>{\n         dispatch(setForId(res.data))\n     })\n } \n //delete\n export const deleteTodo =(id,year) =>async(dispatch) =>  {\n     axios.delete(`http://localhost:4000/holiday/${id}`).then((res) =>{\n         dispatch(fetchUsers(res.data))\n     })\n }\n\n\n\n export const holidayListSliceState = (state) => state.holidaySlice.holidayData;\n export const holidayListSliceId =(state) =>state.holidaySlice.holidayList;\n//   console.log(\"holidayListId\",holidayListSliceState);\nexport default holidaySlice.reducer;\n\n\n\n"]},"metadata":{},"sourceType":"module"}