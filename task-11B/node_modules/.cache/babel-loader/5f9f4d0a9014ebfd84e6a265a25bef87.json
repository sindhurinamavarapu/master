{"ast":null,"code":"var _jsxFileName = \"/Users/sindhurin/development/quadacademy/task-11B/src/component/DataFetching.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { TableRow, Table, TableCell, TableBody, Box } from \"@material-ui/core\";\nimport { fetchUsers, holidayListSliceState } from \"../slice/holidaySlice\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport moment from \"moment\";\nimport { useDispatch } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport blue from '@material-ui/core/colors/blue';\nimport orange from '@material-ui/core/colors/orange';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  tableCell: {\n    padding: \"16px 16px\"\n  },\n  icon: {\n    paddingRight: theme.spacing(5)\n  }\n});\nconst RedTextTypography = withStyles({\n  root: {\n    color: \"#ba000d\"\n  }\n})(Typography);\nconst theme = createTheme({\n  typography: {\n    fontFamily: \"Raleway, Arial\",\n    fontSize: 16\n  }\n}); //fetching the data from the api\n\nfunction DataFetching() {\n  _s();\n\n  const classes = useStyles();\n  const holidays = useSelector(holidayListSliceState);\n  const currentYear = moment().format(\"YYYY\");\n  const today = parseInt(currentYear);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchUsers(today));\n  }, [today]);\n  const Location = {\n    ALL: \"All Locations\",\n    IND: \"India\",\n    USA: \"Bettendorf\"\n  };\n  const type = {\n    F: \"Fixed\",\n    O: \"Optional\"\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: holidays.holidays && holidays.holidays.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"simple table\",\n        size: \"small\",\n        children: /*#__PURE__*/_jsxDEV(TableBody, {\n          children: holidays.holidays.map(holiday => /*#__PURE__*/_jsxDEV(TableRow, {\n            className: classes.tableRow,\n            fontWeight: \"fontWeightBold\",\n            children: [/*#__PURE__*/_jsxDEV(VisibilityIcon, {\n              style: {\n                color: blue[400]\n              },\n              className: classes.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(EditIcon, {\n              style: {\n                color: orange[400]\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableCell,\n              style: {\n                borderBottom: \"none\",\n                padding: \"10px\",\n                paddingLeft: \"10%\",\n                width: \"20%\"\n              },\n              children: holiday.Date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                borderBottom: \"none\",\n                padding: \"1px\",\n                paddingLeft: \"9%\",\n                width: \"30%\"\n              },\n              children: holiday.Description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                borderBottom: \"none\",\n                padding: \"10px\",\n                paddingLeft: \"9.5%\",\n                width: \"18%\"\n              },\n              children: type[holiday.Type]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                borderBottom: \"none\",\n                paddingLeft: \"10%\"\n              },\n              children: [\" \", Location[holiday.Location], \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        mt: 5,\n        paddingLeft: 40,\n        children: /*#__PURE__*/_jsxDEV(RedTextTypography, {\n          variant: \"h6\",\n          children: \"No Records Found for this particular year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DataFetching, \"iKIaPJ3ZMSBMXJL7xR+4Dl3QFgw=\", false, function () {\n  return [useStyles, useSelector, useDispatch];\n});\n\n_c = DataFetching;\nexport default DataFetching;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataFetching\");","map":{"version":3,"sources":["/Users/sindhurin/development/quadacademy/task-11B/src/component/DataFetching.js"],"names":["React","useEffect","TableRow","Table","TableCell","TableBody","Box","fetchUsers","holidayListSliceState","useSelector","makeStyles","withStyles","moment","useDispatch","Typography","createTheme","ThemeProvider","VisibilityIcon","blue","orange","EditIcon","useStyles","tableCell","padding","icon","paddingRight","theme","spacing","RedTextTypography","root","color","typography","fontFamily","fontSize","DataFetching","classes","holidays","currentYear","format","today","parseInt","dispatch","Location","ALL","IND","USA","type","F","O","length","map","holiday","tableRow","borderBottom","paddingLeft","width","Date","Description","Type"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { TableRow, Table, TableCell, TableBody, Box } from \"@material-ui/core\";\nimport { fetchUsers, holidayListSliceState } from \"../slice/holidaySlice\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport moment from \"moment\";\nimport { useDispatch } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport blue from '@material-ui/core/colors/blue';\nimport orange from '@material-ui/core/colors/orange';\nimport EditIcon from '@material-ui/icons/Edit';\nconst useStyles = makeStyles({\n    tableCell: {\n        padding: \"16px 16px\",\n    },\n    icon:{\n      paddingRight:theme.spacing(5)\n    }\n});\n\nconst RedTextTypography = withStyles({\n    root: {\n        color: \"#ba000d\",\n    },\n})(Typography);\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: \"Raleway, Arial\",\n        fontSize: 16,\n    },\n});\n//fetching the data from the api\nfunction DataFetching() {\n    const classes = useStyles();\n    const holidays = useSelector(holidayListSliceState);\n    const currentYear = moment().format(\"YYYY\");\n    const today = parseInt(currentYear);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchUsers(today));\n    }, [today]);\n\n    const Location = {\n        ALL: \"All Locations\",\n        IND: \"India\",\n        USA: \"Bettendorf\",\n    };\n    const type = {\n        F: \"Fixed\",\n        O: \"Optional\",\n    };\n    return (\n        <ThemeProvider theme={theme}>\n            <React.Fragment>\n                {holidays.holidays && holidays.holidays.length > 0 ? (\n                    <Table aria-label=\"simple table\" size=\"small\">\n           \n                        <TableBody>\n                        \n                            {holidays.holidays.map((holiday) => (\n                                <TableRow className={classes.tableRow} fontWeight=\"fontWeightBold\">\n                                <VisibilityIcon  style={{color:blue[400]}} className={classes.icon}/>\n                                <EditIcon style={{color:orange[400]}} />\n                                    <TableCell\n                                        className={classes.tableCell}\n                                        style={{\n                                            borderBottom: \"none\",\n                                            padding: \"10px\",\n                                            paddingLeft: \"10%\",\n                                            width: \"20%\",\n                                        }}\n                                    >\n                                        {holiday.Date}\n                                    </TableCell>\n                                    <TableCell\n                                        style={{\n                                            borderBottom: \"none\",\n                                            padding: \"1px\",\n                                            paddingLeft: \"9%\",\n                                            width: \"30%\",\n                                        }}\n                                    >\n                                        {holiday.Description}\n                                    </TableCell>\n                                    <TableCell\n                                        style={{\n                                            borderBottom: \"none\",\n                                            padding: \"10px\",\n                                            paddingLeft: \"9.5%\",\n                                            width: \"18%\",\n                                        }}\n                                    >\n                                        {type[holiday.Type]}\n                                    </TableCell>\n                                    <TableCell style={{ borderBottom: \"none\", paddingLeft: \"10%\" }}>\n                                        {\" \"}\n                                        {Location[holiday.Location]}{\" \"}\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                ) : (\n                    <Box mt={5} paddingLeft={40}>\n                        <RedTextTypography variant=\"h6\">\n                            No Records Found for this particular year\n                        </RedTextTypography>\n                    </Box>\n                )}\n            </React.Fragment>\n        </ThemeProvider>\n    );\n}\n\nexport default DataFetching;\n"]},"metadata":{},"sourceType":"module"}