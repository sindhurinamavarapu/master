{"ast":null,"code":"var _jsxFileName = \"/Users/sindhurin/development/quadacademy/task-11B/src/component/HolidayPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addTodo, holidayListSliceState } from \"../slice/holidaySlice\";\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { makeStyles } from '@material-ui/core';\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from '@material-ui/core/Container';\nimport Box from \"@material-ui/core/Box\";\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Link from \"@material-ui/core/Link\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  root: {\n    justifyContent: 'center',\n    pb: '3'\n  },\n  inputLabel: {\n    paddingLeft: '30%'\n  },\n  textField: {\n    margin: '7'\n  }\n}));\nconst type = [{\n  label: 'Select'\n}, {\n  label: 'Optional'\n}, {\n  label: 'Fixed'\n}];\nconst Location = [{\n  label: 'Select'\n}, {\n  label: 'All Locations'\n}, {\n  label: 'Bettendorf,IA'\n}, {\n  label: 'India'\n}];\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  m: 1,\n  border: 1,\n  style: {\n    width: '65rem',\n    height: '35rem'\n  }\n};\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.date) {\n    errors.date = 'required';\n  } else if (values.date.length > 10) {\n    errors.date = 'must be 10 characters or less';\n  }\n\n  if (!values.description) {\n    errors.description = 'required';\n  } else if (values.description.length > 6) {\n    errors.description = 'must be 15 characters or less';\n  }\n\n  if (!values.type) {\n    errors.type = 'required';\n  } else if (values.type.length > 15) {\n    errors.type = 'must be 15 characters or less';\n  }\n\n  if (!values.location) {\n    errors.location = 'required';\n  } else if (values.location.length > 15) {\n    errors.location = 'must be 15 characters or less';\n  }\n\n  return errors;\n};\n\nconst Form = () => {\n  _s();\n\n  const classes = useStyles();\n  const formik = useFormik({\n    initialValues: {\n      date: '',\n      location: '',\n      type: '',\n      description: '',\n      isComplete: false\n    },\n    // validate:Validation => {\n    // const message=\"this field is required\"\n    // return yup.object().shape({\n    //        date:yup.string().required(\"message\").nullable(),\n    //        location:yup.string().required(\"message\").nullable(),\n    //        type:yup.string().required(\"message\").nullable(),\n    //        description:yup.string().required(\"message\").nullable(),\n    //      });\n    onSubmit: values => {\n      console.log(values);\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  {\n    ({\n      handleSubmit,\n      handleChange\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        OnSubmit: formik.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          border: 1,\n          ...defaultProps,\n          px: 2,\n          pt: 5,\n          pb: 4,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"Holiday Id\",\n                margin: \"dense\",\n                varient: \"outlined\",\n                className: classes.inputLabel,\n                children: \"Holiday Id:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 10,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"HolidayId\",\n                id: \"outlined-full-width\",\n                value: \"#\",\n                style: {\n                  margin: 1\n                },\n                fullWidth: true,\n                margin: \"normal\",\n                InputLabelProps: {\n                  shrink: true\n                },\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"Date\",\n                className: classes.inputLabel,\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 10,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                id: \"date\",\n                name: \"date\",\n                type: \"date\",\n                onChange: formik.handleChange,\n                value: formik.values.date,\n                style: {\n                  margin: 1\n                },\n                format: \"MM/dd/yyyy\",\n                fullWidth: true,\n                margin: \"normal\",\n                InputLabelProps: {\n                  shrink: true\n                },\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 14\n              }, this), formik.errors.date ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: formik.errors.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 35\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"location\",\n                className: classes.inputLabel,\n                children: \"Location:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 10,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                id: \"location\",\n                name: \"location\",\n                type: \"text\",\n                value: formik.values.location,\n                select: true,\n                onChange: formik.handleChange,\n                SelectProps: {\n                  native: true\n                },\n                style: {\n                  marginRight: 1\n                },\n                variant: \"filled\",\n                fullWidth: true,\n                children: [Location.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this)), formik.errors.location ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: formik.errors.location\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 43\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"type\",\n                className: classes.inputLabel,\n                children: \"Holiday Type:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 10,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"type\",\n                name: \"type\",\n                type: \"text\",\n                value: formik.values.type,\n                select: true,\n                style: {\n                  marginRight: 1\n                },\n                onChange: formik.handleChange,\n                SelectProps: {\n                  native: true\n                },\n                variant: \"filled\",\n                fullWidth: true,\n                children: [type.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 19\n                }, this)), formik.errors.type ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: formik.errors.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 39\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"description\",\n                className: classes.inputLabel,\n                children: \"Description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 10,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                id: \"description\",\n                name: \"desciption\",\n                type: \"text\",\n                value: formik.values.description,\n                onChange: formik.handleChange,\n                style: {\n                  marginRight: 1\n                },\n                fullWidth: true,\n                margin: \"normal\",\n                InputLabelProps: {\n                  shrink: true\n                },\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 15\n              }, this), formik.errors.description ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: formik.errors.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 43\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 12,\n              md: 4,\n              lg: 4,\n              style: {\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/holiday\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                style: {\n                  margin: '2 auto',\n                  display: \"flex\"\n                },\n                type: \"submit\",\n                startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 28\n                }, this),\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                style: {\n                  margin: '3 auto',\n                  display: \"flex\"\n                },\n                children: \"Goto:Holidays\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }, this);\n    };\n  }\n};\n\n_s(Form, \"C5g7rQO6GJW4fOIoJxJdUVhrL6g=\", false, function () {\n  return [useStyles, useFormik];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/sindhurin/development/quadacademy/task-11B/src/component/HolidayPage.js"],"names":["React","useState","useEffect","useDispatch","addTodo","holidayListSliceState","useFormik","yup","makeStyles","Grid","Container","Box","TextField","InputLabel","Button","SaveIcon","Link","useSelector","useStyles","theme","button","margin","spacing","root","justifyContent","pb","inputLabel","paddingLeft","textField","type","label","Location","defaultProps","bgcolor","m","border","style","width","height","validate","values","errors","date","length","description","location","Form","classes","formik","initialValues","isComplete","onSubmit","console","log","alert","JSON","stringify","handleSubmit","handleChange","shrink","native","marginRight","map","option","value","textAlign","display"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAuC,OAAvC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAASC,OAAT,EAAkBC,qBAAlB,QAA+C,uBAA/C;AACA,SAASC,SAAT,QAAyB,QAAzB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,SAAS,GAAGV,UAAU,CAAEW,KAAD,KAAY;AACvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADF,GAD+B;AAIvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,cAAc,EAAE,QADZ;AAEJC,IAAAA,EAAE,EAAE;AAFA,GAJiC;AAQvCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,WAAW,EAAE;AADH,GAR2B;AAWvCC,EAAAA,SAAS,EAAE;AACTP,IAAAA,MAAM,EAAE;AADC;AAX4B,CAAZ,CAAD,CAA5B;AAeA,MAAMQ,IAAI,GAAG,CACX;AACEC,EAAAA,KAAK,EAAC;AADR,CADW,EAIX;AAEEA,EAAAA,KAAK,EAAE;AAFT,CAJW,EAQX;AAEEA,EAAAA,KAAK,EAAE;AAFT,CARW,CAAb;AAaA,MAAMC,QAAQ,GAAG,CACf;AACED,EAAAA,KAAK,EAAC;AADR,CADe,EAIf;AACEA,EAAAA,KAAK,EAAE;AADT,CAJe,EAOf;AACEA,EAAAA,KAAK,EAAE;AADT,CAPe,EAUf;AACEA,EAAAA,KAAK,EAAE;AADT,CAVe,CAAjB;AAcA,MAAME,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,kBADU;AAEnBC,EAAAA,CAAC,EAAE,CAFgB;AAGnBC,EAAAA,MAAM,EAAE,CAHW;AAInBC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,MAAM,EAAE;AAA1B;AAJY,CAArB;;AAOA,MAAMC,QAAQ,GAAEC,MAAM,IAAG;AACvB,QAAMC,MAAM,GAAE,EAAd;;AACA,MAAG,CAACD,MAAM,CAACE,IAAX,EAAgB;AACdD,IAAAA,MAAM,CAACC,IAAP,GAAY,UAAZ;AACD,GAFD,MAEM,IAAGF,MAAM,CAACE,IAAP,CAAYC,MAAZ,GAAoB,EAAvB,EAA0B;AAC9BF,IAAAA,MAAM,CAACC,IAAP,GAAa,+BAAb;AACD;;AACD,MAAG,CAACF,MAAM,CAACI,WAAX,EAAuB;AACrBH,IAAAA,MAAM,CAACG,WAAP,GAAmB,UAAnB;AACD,GAFD,MAEM,IAAGJ,MAAM,CAACI,WAAP,CAAmBD,MAAnB,GAA2B,CAA9B,EAAgC;AACpCF,IAAAA,MAAM,CAACG,WAAP,GAAoB,+BAApB;AACD;;AACD,MAAG,CAACJ,MAAM,CAACX,IAAX,EAAgB;AACdY,IAAAA,MAAM,CAACZ,IAAP,GAAY,UAAZ;AACD,GAFD,MAEM,IAAGW,MAAM,CAACX,IAAP,CAAYc,MAAZ,GAAoB,EAAvB,EAA0B;AAC9BF,IAAAA,MAAM,CAACZ,IAAP,GAAa,+BAAb;AACD;;AACD,MAAG,CAACW,MAAM,CAACK,QAAX,EAAoB;AAClBJ,IAAAA,MAAM,CAACI,QAAP,GAAgB,UAAhB;AACD,GAFD,MAEM,IAAGL,MAAM,CAACK,QAAP,CAAgBF,MAAhB,GAAwB,EAA3B,EAA8B;AAClCF,IAAAA,MAAM,CAACI,QAAP,GAAiB,+BAAjB;AACD;;AACD,SAAOJ,MAAP;AACD,CAvBD;;AAyBA,MAAMK,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMC,OAAO,GAAG7B,SAAS,EAAzB;AACC,QAAM8B,MAAM,GAAE1C,SAAS,CAAC;AACvB2C,IAAAA,aAAa,EAAG;AACdP,MAAAA,IAAI,EAAC,EADS;AAEhBG,MAAAA,QAAQ,EAAC,EAFO;AAGhBhB,MAAAA,IAAI,EAAC,EAHW;AAIhBe,MAAAA,WAAW,EAAC,EAJI;AAKhBM,MAAAA,UAAU,EAAC;AALK,KADO;AAQvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA,QAAQ,EAACX,MAAM,IAAG;AAChBY,MAAAA,OAAO,CAACC,GAAR,CAAYb,MAAZ;AACAc,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAehB,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACD;AAnBsB,GAAD,CAAvB;AAsBD;AAAC,KAAC;AACAiB,MAAAA,YADA;AAEAC,MAAAA;AAFA,KAAD,KAGI;AAEJ,0BACC;AAAM,QAAA,QAAQ,EAAGV,MAAM,CAACS,YAAxB;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,OAAO,EAAC,MAAb;AAAoB,UAAA,cAAc,EAAC,QAAnC;AAA4C,UAAA,MAAM,EAAE,CAApD;AAAA,aAA2DzB,YAA3D;AAA0E,UAAA,EAAE,EAAE,CAA9E;AAAiF,UAAA,EAAE,EAAE,CAArF;AAAwF,UAAA,EAAE,EAAE,CAA5F;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAAA,oCAEE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,qCACE,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,YAApB;AAAiC,gBAAA,MAAM,EAAC,OAAxC;AAAgD,gBAAA,OAAO,EAAC,UAAxD;AAAmE,gBAAA,SAAS,EAAEe,OAAO,CAACrB,UAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF,eAKE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACE,QAAC,SAAD;AACA,gBAAA,IAAI,EAAC,WADL;AAEE,gBAAA,EAAE,EAAC,qBAFL;AAGE,gBAAA,KAAK,EAAC,GAHR;AAIE,gBAAA,KAAK,EAAE;AAAEL,kBAAAA,MAAM,EAAE;AAAV,iBAJT;AAME,gBAAA,SAAS,MANX;AAOE,gBAAA,MAAM,EAAC,QAPT;AAQE,gBAAA,eAAe,EAAE;AACfsC,kBAAAA,MAAM,EAAE;AADO,iBARnB;AAWE,gBAAA,OAAO,EAAC;AAXV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBALF,eAqBE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,qCACE,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,MAApB;AAA2B,gBAAA,SAAS,EAAEZ,OAAO,CAACrB,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBArBF,eAwBE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,sCACC,QAAC,SAAD;AACC,gBAAA,EAAE,EAAC,MADJ;AAEC,gBAAA,IAAI,EAAC,MAFN;AAGC,gBAAA,IAAI,EAAC,MAHN;AAIC,gBAAA,QAAQ,EAAEsB,MAAM,CAACU,YAJlB;AAKC,gBAAA,KAAK,EAAEV,MAAM,CAACR,MAAP,CAAcE,IALtB;AAMC,gBAAA,KAAK,EAAE;AAAErB,kBAAAA,MAAM,EAAE;AAAV,iBANR;AAOC,gBAAA,MAAM,EAAC,YAPR;AAQC,gBAAA,SAAS,MARV;AASC,gBAAA,MAAM,EAAC,QATR;AAUC,gBAAA,eAAe,EAAE;AACfsC,kBAAAA,MAAM,EAAE;AADO,iBAVlB;AAaC,gBAAA,OAAO,EAAC;AAbT;AAAA;AAAA;AAAA;AAAA,sBADD,EAgBCX,MAAM,CAACP,MAAP,CAAcC,IAAd,gBAAqB;AAAA,0BAAMM,MAAM,CAACP,MAAP,CAAcC;AAApB;AAAA;AAAA;AAAA;AAAA,sBAArB,GAAuD,IAhBxD;AAAA;AAAA;AAAA;AAAA;AAAA,oBAxBF,eA2CE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,qCACE,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,UAApB;AAA+B,gBAAA,SAAS,EAAEK,OAAO,CAACrB,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBA3CF,eA8CE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,sCACE,QAAC,SAAD;AACE,gBAAA,EAAE,EAAC,UADL;AAEE,gBAAA,IAAI,EAAC,UAFP;AAGE,gBAAA,IAAI,EAAC,MAHP;AAIE,gBAAA,KAAK,EAAEsB,MAAM,CAACR,MAAP,CAAcK,QAJvB;AAKE,gBAAA,MAAM,MALR;AAME,gBAAA,QAAQ,EAAEG,MAAM,CAACU,YANnB;AAOE,gBAAA,WAAW,EAAE;AACXE,kBAAAA,MAAM,EAAE;AADG,iBAPf;AAUE,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,WAAW,EAAE;AAAf,iBAVT;AAWE,gBAAA,OAAO,EAAC,QAXV;AAYE,gBAAA,SAAS,MAZX;AAAA,2BAeG9B,QAAQ,CAAC+B,GAAT,CAAcC,MAAD,iBACZ;AAA2B,kBAAA,KAAK,EAAEA,MAAM,CAACC,KAAzC;AAAA,4BACGD,MAAM,CAACjC;AADV,mBAAaiC,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA,wBADD,CAfH,EAoBGhB,MAAM,CAACP,MAAP,CAAcI,QAAd,gBAAyB;AAAA,4BAAMG,MAAM,CAACP,MAAP,CAAcI;AAApB;AAAA;AAAA;AAAA;AAAA,wBAAzB,GAA+D,IApBlE;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAsBc;AAAA;AAAA;AAAA;AAAA,sBAtBd;AAAA;AAAA;AAAA;AAAA;AAAA,oBA9CF,eAsEE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,qCACE,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,MAApB;AAA2B,gBAAA,SAAS,EAAEE,OAAO,CAACrB,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAtEF,eAyEE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,EAAE,EAAC,MADL;AAEE,gBAAA,IAAI,EAAC,MAFP;AAGE,gBAAA,IAAI,EAAC,MAHP;AAIE,gBAAA,KAAK,EAAEsB,MAAM,CAACR,MAAP,CAAcX,IAJvB;AAKE,gBAAA,MAAM,MALR;AAME,gBAAA,KAAK,EAAE;AAAEgC,kBAAAA,WAAW,EAAE;AAAf,iBANT;AAOE,gBAAA,QAAQ,EAAEb,MAAM,CAACU,YAPnB;AAQE,gBAAA,WAAW,EAAE;AACXE,kBAAAA,MAAM,EAAE;AADG,iBARf;AAWE,gBAAA,OAAO,EAAC,QAXV;AAYE,gBAAA,SAAS,MAZX;AAAA,2BAeG/B,IAAI,CAACiC,GAAL,CAAUC,MAAD,iBACR;AAA2B,kBAAA,KAAK,EAAEA,MAAM,CAACC,KAAzC;AAAA,4BACGD,MAAM,CAACjC;AADV,mBAAaiC,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA,wBADD,CAfH,EAoBGhB,MAAM,CAACP,MAAP,CAAcZ,IAAd,gBAAqB;AAAA,4BAAMmB,MAAM,CAACP,MAAP,CAAcZ;AAApB;AAAA;AAAA;AAAA;AAAA,wBAArB,GAAuD,IApB1D;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAzEF,eAiGE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,qCACE,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,aAApB;AAAkC,gBAAA,SAAS,EAAEkB,OAAO,CAACrB,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAjGF,eAoGE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,sCACE,QAAC,SAAD;AACE,gBAAA,EAAE,EAAC,aADL;AAEE,gBAAA,IAAI,EAAC,YAFP;AAGE,gBAAA,IAAI,EAAC,MAHP;AAIE,gBAAA,KAAK,EAAEsB,MAAM,CAACR,MAAP,CAAcI,WAJvB;AAKE,gBAAA,QAAQ,EAAEI,MAAM,CAACU,YALnB;AAME,gBAAA,KAAK,EAAE;AAAEG,kBAAAA,WAAW,EAAE;AAAf,iBANT;AAOE,gBAAA,SAAS,MAPX;AAQE,gBAAA,MAAM,EAAC,QART;AASE,gBAAA,eAAe,EAAE;AACfF,kBAAAA,MAAM,EAAE;AADO,iBATnB;AAYE,gBAAA,OAAO,EAAC;AAZV;AAAA;AAAA;AAAA;AAAA,sBADF,EAgBGX,MAAM,CAACP,MAAP,CAAcG,WAAd,gBAA2B;AAAA,0BAAMI,MAAM,CAACP,MAAP,CAAcG;AAApB;AAAA;AAAA;AAAA;AAAA,sBAA3B,GAAoE,IAhBvE;AAAA;AAAA;AAAA;AAAA;AAAA,oBApGF,eAuHE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,EAAvB;AAA2B,cAAA,EAAE,EAAE,CAA/B;AAAkC,cAAA,EAAE,EAAE,CAAtC;AACE,cAAA,KAAK,EAAE;AACLqB,gBAAAA,SAAS,EAAE;AADN,eADT;AAAA,qCAKE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,oBAvHF,eAgIE,QAAC,IAAD;AAAM,cAAA,IAAI,EAAC,UAAX;AAAA,qCACE,QAAC,MAAD;AACE,gBAAA,OAAO,EAAC,WADV;AAEE,gBAAA,KAAK,EAAC,SAFR;AAGE,gBAAA,KAAK,EAAE;AAAE5C,kBAAAA,MAAM,EAAE,QAAV;AAAoB6C,kBAAAA,OAAO,EAAE;AAA7B,iBAHT;AAKE,gBAAA,IAAI,EAAC,QALP;AAME,gBAAA,SAAS,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,wBANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAhIF,eA4IE,QAAC,IAAD;AAAM,cAAA,IAAI,EAAC,GAAX;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,WAAhB;AAA4B,gBAAA,KAAK,EAAE;AAAE7C,kBAAAA,MAAM,EAAE,QAAV;AAAoB6C,kBAAAA,OAAO,EAAE;AAA7B,iBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBA5IF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADD;AAqKA,KA1KA;AA0KC;AAAC,CAlML;;GAAMpB,I;UACY5B,S,EACDZ,S;;;KAFXwC,I;AAqMN,eAAeA,IAAf","sourcesContent":["import React ,{useState,useEffect}from 'react';\nimport {useDispatch} from 'react-redux';\nimport { addTodo, holidayListSliceState } from \"../slice/holidaySlice\";\nimport { useFormik} from 'formik';\nimport * as yup from 'yup';\nimport { makeStyles } from '@material-ui/core';\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from '@material-ui/core/Container';\nimport Box from \"@material-ui/core/Box\";\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Link from \"@material-ui/core/Link\";\nimport { useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    justifyContent: 'center',\n    pb: '3'\n  },\n  inputLabel: {\n    paddingLeft: '30%',    \n  },\n  textField: {\n    margin: '7'\n  }\n}))\nconst type = [\n  {\n    label:'Select',\n  },\n  {\n\n    label: 'Optional',\n  },\n  {\n\n    label: 'Fixed',\n  },\n]\nconst Location = [\n  {\n    label:'Select',\n  },\n  {\n    label: 'All Locations'\n  },\n  {\n    label: 'Bettendorf,IA'\n  },\n  {\n    label: 'India'\n  }\n]\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  m: 1,\n  border: 1,\n  style: { width: '65rem', height: '35rem' },\n};\n\nconst validate =values =>{\n  const errors ={};\n  if(!values.date){\n    errors.date='required';\n  }else if(values.date.length >10){\n    errors.date ='must be 10 characters or less'\n  }\n  if(!values.description){\n    errors.description='required';\n  }else if(values.description.length >6){\n    errors.description ='must be 15 characters or less'\n  }\n  if(!values.type){\n    errors.type='required';\n  }else if(values.type.length >15){\n    errors.type ='must be 15 characters or less'\n  }\n  if(!values.location){\n    errors.location='required';\n  }else if(values.location.length >15){\n    errors.location ='must be 15 characters or less'\n  }\n  return errors;\n}\n\nconst Form = () => {\n  const classes = useStyles();\n   const formik =useFormik({\n    initialValues : {\n      date:'',\n    location:'',\n    type:'',\n    description:'',\n    isComplete:false\n    },\n    // validate:Validation => {\n    // const message=\"this field is required\"\n    // return yup.object().shape({\n    //        date:yup.string().required(\"message\").nullable(),\n    //        location:yup.string().required(\"message\").nullable(),\n    //        type:yup.string().required(\"message\").nullable(),\n    //        description:yup.string().required(\"message\").nullable(),\n    //      });\n    onSubmit:values =>{\n      console.log(values);\n      alert(JSON.stringify(values, null, 2));\n    }\n    \n  });\n  {({\n    handleSubmit,\n    handleChange\n  }) =>{\n   \n   return (\n    <form OnSubmit ={formik.handleSubmit}>\n        <Box display=\"flex\" justifyContent=\"center\" border={1} {...defaultProps}  px={2} pt={5} pb={4}>\n          <Grid container spacing={3}>\n          \n            <Grid item xs={2}>\n              <InputLabel htmlFor=\"Holiday Id\" margin=\"dense\" varient=\"outlined\" className={classes.inputLabel} >Holiday Id:</InputLabel>\n            </Grid>\n            <Grid item xs={10}>\n              <TextField\n              name=\"HolidayId\"\n                id=\"outlined-full-width\"\n                value=\"#\"\n                style={{ margin: 1 }}\n               \n                fullWidth\n                margin=\"normal\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n              />\n            </Grid>\n\n            <Grid item xs={2}>\n              <InputLabel htmlFor=\"Date\" className={classes.inputLabel} >Date:</InputLabel>\n            </Grid>\n            <Grid item xs={10}>\n             <TextField\n              id=\"date\"\n              name=\"date\"\n              type=\"date\"\n              onChange={formik.handleChange}\n              value={formik.values.date}\n              style={{ margin: 1 }}\n              format=\"MM/dd/yyyy\"\n              fullWidth\n              margin=\"normal\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              variant=\"outlined\"\n            />\n            {formik.errors.date ? <div>{formik.errors.date}</div> : null}\n           \n            </Grid>\n            <Grid item xs={2}>\n              <InputLabel htmlFor=\"location\" className={classes.inputLabel} >Location:</InputLabel>\n            </Grid>\n            <Grid item xs={10}>\n              <TextField\n                id=\"location\"\n                name=\"location\"\n                type=\"text\"\n                value={formik.values.location}\n                select\n                onChange={formik.handleChange}\n                SelectProps={{\n                  native: true,\n                }}\n                style={{ marginRight: 1 }}\n                variant=\"filled\"\n                fullWidth\n                \n              >\n                {Location.map((option) => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n                {formik.errors.location ? <div>{formik.errors.location}</div> : null}\n              </TextField><br></br>\n            </Grid>\n            <Grid item xs={2}>\n              <InputLabel htmlFor=\"type\" className={classes.inputLabel} >Holiday Type:</InputLabel>\n            </Grid>\n            <Grid item xs={10}>\n              <TextField\n                id=\"type\"\n                name=\"type\"\n                type=\"text\"\n                value={formik.values.type}\n                select\n                style={{ marginRight: 1 }}\n                onChange={formik.handleChange}\n                SelectProps={{\n                  native: true,\n                }}\n                variant=\"filled\"\n                fullWidth\n                \n              >\n                {type.map((option) => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n                {formik.errors.type ? <div>{formik.errors.type}</div> : null}\n              </TextField>\n            </Grid>\n            <Grid item xs={2}>\n              <InputLabel htmlFor=\"description\" className={classes.inputLabel} >Description:</InputLabel>\n            </Grid>\n            <Grid item xs={10}>\n              <TextField\n                id=\"description\"\n                name=\"desciption\"\n                type=\"text\"\n                value={formik.values.description}\n                onChange={formik.handleChange}\n                style={{ marginRight: 1 }}\n                fullWidth\n                margin=\"normal\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n              \n              />\n              {formik.errors.description? <div>{formik.errors.description}</div> : null}\n            </Grid>\n\n            <Grid item xs={12} sm={12} md={4} lg={4}\n              style={{\n                textAlign: 'center'\n              }}\n            >\n              <Button>\n\n              </Button>\n            </Grid>\n            <Link href='/holiday'>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ margin: '2 auto', display: \"flex\" }}\n                \n                type=\"submit\"\n                startIcon={<SaveIcon />}\n              >\n                Save\n              </Button>\n            </Link>\n            <Link href='/'>\n              <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }} >Goto:Holidays</Button>\n              </Link>\n           {/*<Link href='/holiday/:id'>\n              <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }}>Switch To update</Button>\n            </Link>\n            <Link href='/holiday/:id'>\n              <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }}>Delete</Button>\n            </Link>\n            <Link href='/holiday/:id'>\n              <Button variant=\"contained\" style={{ margin: '3 auto', display: \"flex\" }}>Switch to view</Button>\n            </Link> */}\n            \n          </Grid>\n\n        </Box>\n     \n     </form>\n     \n\n\n)\n  }}}\n\n   \nexport default Form;\n\n\n"]},"metadata":{},"sourceType":"module"}